var THREE={REVISION:"67"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},function(){for(var i=0,t=["ms","moz","webkit","o"],n=0;n<t.length&&!self.requestAnimationFrame;++n)self.requestAnimationFrame=self[t[n]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[t[n]+"CancelAnimationFrame"]||self[t[n]+"CancelRequestAnimationFrame"];self.requestAnimationFrame===undefined&&self.setTimeout!==undefined&&(self.requestAnimationFrame=function(n){var t=Date.now(),r=Math.max(0,16-(t-i)),u=self.setTimeout(function(){n(t+r)},r);return i=t+r,u});self.cancelAnimationFrame===undefined&&self.clearTimeout!==undefined&&(self.cancelAnimationFrame=function(n){self.clearTimeout(n)})}();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1e3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(n){return arguments.length===3?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(n)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(n){return n instanceof THREE.Color?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n),this},setHex:function(n){return n=Math.floor(n),this.r=(n>>16&255)/255,this.g=(n>>8&255)/255,this.b=(n&255)/255,this},setRGB:function(n,t,i){return this.r=n,this.g=t,this.b=i,this},setHSL:function(n,t,i){if(t===0)this.r=this.g=this.b=i;else{var u=function(n,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?n+(t-n)*6*i:i<1/2?t:i<2/3?n+(t-n)*6*(2/3-i):n},r=i<=.5?i*(1+t):i+t-i*t,f=2*i-r;this.r=u(f,r,n+1/3);this.g=u(f,r,n);this.b=u(f,r,n-1/3)}return this},setStyle:function(n){var t;return/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(n)?(t=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(n),this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this):/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(n)?(t=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(n),this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(n)?(t=/^\#([0-9a-f]{6})$/i.exec(n),this.setHex(parseInt(t[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(n)?(t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(n),this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this):/^(\w+)$/i.test(n)?(this.setHex(THREE.ColorKeywords[n]),this):void 0},copy:function(n){return this.r=n.r,this.g=n.g,this.b=n.b,this},copyGammaToLinear:function(n){return this.r=n.r*n.r,this.g=n.g*n.g,this.b=n.b*n.b,this},copyLinearToGamma:function(n){return this.r=Math.sqrt(n.r),this.g=Math.sqrt(n.g),this.b=Math.sqrt(n.b),this},convertGammaToLinear:function(){var n=this.r,t=this.g,i=this.b;return this.r=n*n,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(n){var s=n||{h:0,s:0,l:0},e=this.r,t=this.g,i=this.b,r=Math.max(e,t,i),o=Math.min(e,t,i),u,h,c=(o+r)/2,f;if(o===r)u=0,h=0;else{f=r-o;h=c<=.5?f/(r+o):f/(2-r-o);switch(r){case e:u=(t-i)/f+(t<i?6:0);break;case t:u=(i-e)/f+2;break;case i:u=(e-t)/f+4}u/=6}return s.h=u,s.s=h,s.l=c,s},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(n,t,i){var r=this.getHSL();return r.h+=n,r.s+=t,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(n){return this.r+=n.r,this.g+=n.g,this.b+=n.b,this},addColors:function(n,t){return this.r=n.r+t.r,this.g=n.g+t.g,this.b=n.b+t.b,this},addScalar:function(n){return this.r+=n,this.g+=n,this.b+=n,this},multiply:function(n){return this.r*=n.r,this.g*=n.g,this.b*=n.b,this},multiplyScalar:function(n){return this.r*=n,this.g*=n,this.b*=n,this},lerp:function(n,t){return this.r+=(n.r-this.r)*t,this.g+=(n.g-this.g)*t,this.b+=(n.b-this.b)*t,this},equals:function(n){return n.r===this.r&&n.g===this.g&&n.b===this.b},fromArray:function(n){return this.r=n[0],this.g=n[1],this.b=n[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(n,t,i,r){this._x=n||0;this._y=t||0;this._z=i||0;this._w=r!==undefined?r:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(n){this._x=n;this.onChangeCallback()},get y(){return this._y},set y(n){this._y=n;this.onChangeCallback()},get z(){return this._z},set z(n){this._z=n;this.onChangeCallback()},get w(){return this._w},set w(n){this._w=n;this.onChangeCallback()},set:function(n,t,i,r){return this._x=n,this._y=t,this._z=i,this._w=r,this.onChangeCallback(),this},copy:function(n){return this._x=n._x,this._y=n._y,this._z=n._z,this._w=n._w,this.onChangeCallback(),this},setFromEuler:function(n,t){if(n instanceof THREE.Euler==!1)throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var i=Math.cos(n._x/2),r=Math.cos(n._y/2),u=Math.cos(n._z/2),f=Math.sin(n._x/2),e=Math.sin(n._y/2),o=Math.sin(n._z/2);return n.order==="XYZ"?(this._x=f*r*u+i*e*o,this._y=i*e*u-f*r*o,this._z=i*r*o+f*e*u,this._w=i*r*u-f*e*o):n.order==="YXZ"?(this._x=f*r*u+i*e*o,this._y=i*e*u-f*r*o,this._z=i*r*o-f*e*u,this._w=i*r*u+f*e*o):n.order==="ZXY"?(this._x=f*r*u-i*e*o,this._y=i*e*u+f*r*o,this._z=i*r*o+f*e*u,this._w=i*r*u-f*e*o):n.order==="ZYX"?(this._x=f*r*u-i*e*o,this._y=i*e*u+f*r*o,this._z=i*r*o-f*e*u,this._w=i*r*u+f*e*o):n.order==="YZX"?(this._x=f*r*u+i*e*o,this._y=i*e*u+f*r*o,this._z=i*r*o-f*e*u,this._w=i*r*u-f*e*o):n.order==="XZY"&&(this._x=f*r*u-i*e*o,this._y=i*e*u-f*r*o,this._z=i*r*o+f*e*u,this._w=i*r*u+f*e*o),t!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(n,t){var r=t/2,i=Math.sin(r);return this._x=n.x*i,this._y=n.y*i,this._z=n.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(n){var i=n.elements,r=i[0],e=i[4],o=i[8],s=i[1],u=i[5],h=i[9],c=i[2],l=i[6],f=i[10],a=r+u+f,t;return a>0?(t=.5/Math.sqrt(a+1),this._w=.25/t,this._x=(l-h)*t,this._y=(o-c)*t,this._z=(s-e)*t):r>u&&r>f?(t=2*Math.sqrt(1+r-u-f),this._w=(l-h)/t,this._x=.25*t,this._y=(e+s)/t,this._z=(o+c)/t):u>f?(t=2*Math.sqrt(1+u-r-f),this._w=(o-c)/t,this._x=(e+s)/t,this._y=.25*t,this._z=(h+l)/t):(t=2*Math.sqrt(1+f-r-u),this._w=(s-e)/t,this._x=(o+c)/t,this._y=(h+l)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var n,t,i=1e-6;return function(r,u){return n===undefined&&(n=new THREE.Vector3),t=r.dot(u)+1,t<i?(t=0,Math.abs(r.x)>Math.abs(r.z)?n.set(-r.y,r.x,0):n.set(0,-r.z,r.y)):n.crossVectors(r,u),this._x=n.x,this._y=n.y,this._z=n.z,this._w=t,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var n=this.length();return n===0?(this._x=0,this._y=0,this._z=0,this._w=1):(n=1/n,this._x=this._x*n,this._y=this._y*n,this._z=this._z*n,this._w=this._w*n),this.onChangeCallback(),this},multiply:function(n,t){return t!==undefined?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(n,t)):this.multiplyQuaternions(this,n)},multiplyQuaternions:function(n,t){var i=n._x,r=n._y,u=n._z,f=n._w,e=t._x,o=t._y,s=t._z,h=t._w;return this._x=i*h+f*e+r*s-u*o,this._y=r*h+f*o+u*e-i*s,this._z=u*h+f*s+i*o-r*e,this._w=f*h-i*e-r*o-u*s,this.onChangeCallback(),this},multiplyVector3:function(n){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),n.applyQuaternion(this)},slerp:function(n,t){var f=this._x,e=this._y,o=this._z,s=this._w,i=s*n._w+f*n._x+e*n._y+o*n._z,c,h,r,u;return(i<0?(this._w=-n._w,this._x=-n._x,this._y=-n._y,this._z=-n._z,i=-i):this.copy(n),i>=1)?(this._w=s,this._x=f,this._y=e,this._z=o,this):(c=Math.acos(i),h=Math.sqrt(1-i*i),Math.abs(h)<.001)?(this._w=.5*(s+this._w),this._x=.5*(f+this._x),this._y=.5*(e+this._y),this._z=.5*(o+this._z),this):(r=Math.sin((1-t)*c)/h,u=Math.sin(t*c)/h,this._w=s*r+this._w*u,this._x=f*r+this._x*u,this._y=e*r+this._y*u,this._z=o*r+this._z*u,this.onChangeCallback(),this)},equals:function(n){return n._x===this._x&&n._y===this._y&&n._z===this._z&&n._w===this._w},fromArray:function(n){return this._x=n[0],this._y=n[1],this._z=n[2],this._w=n[3],this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(n){return this.onChangeCallback=n,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(n,t,i,r){return i.copy(n).slerp(t,r)};THREE.Vector2=function(n,t){this.x=n||0;this.y=t||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(n,t){return this.x=n,this.y=t,this},setX:function(n){return this.x=n,this},setY:function(n){return this.y=n,this},setComponent:function(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+n);}},getComponent:function(n){switch(n){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+n);}},copy:function(n){return this.x=n.x,this.y=n.y,this},add:function(n,t){return t!==undefined?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,t)):(this.x+=n.x,this.y+=n.y,this)},addVectors:function(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this},addScalar:function(n){return this.x+=n,this.y+=n,this},sub:function(n,t){return t!==undefined?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,t)):(this.x-=n.x,this.y-=n.y,this)},subVectors:function(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this},multiply:function(n){return this.x*=n.x,this.y*=n.y,this},multiplyScalar:function(n){return this.x*=n,this.y*=n,this},divide:function(n){return this.x/=n.x,this.y/=n.y,this},divideScalar:function(n){if(n!==0){var t=1/n;this.x*=t;this.y*=t}else this.x=0,this.y=0;return this},min:function(n){return this.x>n.x&&(this.x=n.x),this.y>n.y&&(this.y=n.y),this},max:function(n){return this.x<n.x&&(this.x=n.x),this.y<n.y&&(this.y=n.y),this},clamp:function(n,t){return this.x<n.x?this.x=n.x:this.x>t.x&&(this.x=t.x),this.y<n.y?this.y=n.y:this.y>t.y&&(this.y=t.y),this},clampScalar:function(){var n,t;return function(i,r){return n===undefined&&(n=new THREE.Vector2,t=new THREE.Vector2),n.set(i,i),t.set(r,r),this.clamp(n,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(n){return this.x*n.x+this.y*n.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(n){return Math.sqrt(this.distanceToSquared(n))},distanceToSquared:function(n){var t=this.x-n.x,i=this.y-n.y;return t*t+i*i},setLength:function(n){var t=this.length();return t!==0&&n!==t&&this.multiplyScalar(n/t),this},lerp:function(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this},equals:function(n){return n.x===this.x&&n.y===this.y},fromArray:function(n){return this.x=n[0],this.y=n[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(n,t,i){this.x=n||0;this.y=t||0;this.z=i||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(n,t,i){return this.x=n,this.y=t,this.z=i,this},setX:function(n){return this.x=n,this},setY:function(n){return this.y=n,this},setZ:function(n){return this.z=n,this},setComponent:function(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+n);}},getComponent:function(n){switch(n){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+n);}},copy:function(n){return this.x=n.x,this.y=n.y,this.z=n.z,this},add:function(n,t){return t!==undefined?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,t)):(this.x+=n.x,this.y+=n.y,this.z+=n.z,this)},addScalar:function(n){return this.x+=n,this.y+=n,this.z+=n,this},addVectors:function(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this.z=n.z+t.z,this},sub:function(n,t){return t!==undefined?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,t)):(this.x-=n.x,this.y-=n.y,this.z-=n.z,this)},subVectors:function(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this.z=n.z-t.z,this},multiply:function(n,t){return t!==undefined?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(n,t)):(this.x*=n.x,this.y*=n.y,this.z*=n.z,this)},multiplyScalar:function(n){return this.x*=n,this.y*=n,this.z*=n,this},multiplyVectors:function(n,t){return this.x=n.x*t.x,this.y=n.y*t.y,this.z=n.z*t.z,this},applyEuler:function(){var n;return function(t){return t instanceof THREE.Euler==!1&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),n===undefined&&(n=new THREE.Quaternion),this.applyQuaternion(n.setFromEuler(t)),this}}(),applyAxisAngle:function(){var n;return function(t,i){return n===undefined&&(n=new THREE.Quaternion),this.applyQuaternion(n.setFromAxisAngle(t,i)),this}}(),applyMatrix3:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements;return this.x=t[0]*i+t[3]*r+t[6]*u,this.y=t[1]*i+t[4]*r+t[7]*u,this.z=t[2]*i+t[5]*r+t[8]*u,this},applyMatrix4:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements;return this.x=t[0]*i+t[4]*r+t[8]*u+t[12],this.y=t[1]*i+t[5]*r+t[9]*u+t[13],this.z=t[2]*i+t[6]*r+t[10]*u+t[14],this},applyProjection:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements,f=1/(t[3]*i+t[7]*r+t[11]*u+t[15]);return this.x=(t[0]*i+t[4]*r+t[8]*u+t[12])*f,this.y=(t[1]*i+t[5]*r+t[9]*u+t[13])*f,this.z=(t[2]*i+t[6]*r+t[10]*u+t[14])*f,this},applyQuaternion:function(n){var f=this.x,e=this.y,o=this.z,t=n.x,i=n.y,r=n.z,u=n.w,s=u*f+i*o-r*e,h=u*e+r*f-t*o,c=u*o+t*e-i*f,l=-t*f-i*e-r*o;return this.x=s*u+l*-t+h*-r-c*-i,this.y=h*u+l*-i+c*-t-s*-r,this.z=c*u+l*-r+s*-i-h*-t,this},transformDirection:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements;return this.x=t[0]*i+t[4]*r+t[8]*u,this.y=t[1]*i+t[5]*r+t[9]*u,this.z=t[2]*i+t[6]*r+t[10]*u,this.normalize(),this},divide:function(n){return this.x/=n.x,this.y/=n.y,this.z/=n.z,this},divideScalar:function(n){if(n!==0){var t=1/n;this.x*=t;this.y*=t;this.z*=t}else this.x=0,this.y=0,this.z=0;return this},min:function(n){return this.x>n.x&&(this.x=n.x),this.y>n.y&&(this.y=n.y),this.z>n.z&&(this.z=n.z),this},max:function(n){return this.x<n.x&&(this.x=n.x),this.y<n.y&&(this.y=n.y),this.z<n.z&&(this.z=n.z),this},clamp:function(n,t){return this.x<n.x?this.x=n.x:this.x>t.x&&(this.x=t.x),this.y<n.y?this.y=n.y:this.y>t.y&&(this.y=t.y),this.z<n.z?this.z=n.z:this.z>t.z&&(this.z=t.z),this},clampScalar:function(){var n,t;return function(i,r){return n===undefined&&(n=new THREE.Vector3,t=new THREE.Vector3),n.set(i,i,i),t.set(r,r,r),this.clamp(n,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(n){return this.x*n.x+this.y*n.y+this.z*n.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(n){var t=this.length();return t!==0&&n!==t&&this.multiplyScalar(n/t),this},lerp:function(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this.z+=(n.z-this.z)*t,this},cross:function(n,t){if(t!==undefined)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(n,t);var i=this.x,r=this.y,u=this.z;return this.x=r*n.z-u*n.y,this.y=u*n.x-i*n.z,this.z=i*n.y-r*n.x,this},crossVectors:function(n,t){var i=n.x,r=n.y,u=n.z,f=t.x,e=t.y,o=t.z;return this.x=r*o-u*e,this.y=u*f-i*o,this.z=i*e-r*f,this},projectOnVector:function(){var n,t;return function(i){return n===undefined&&(n=new THREE.Vector3),n.copy(i).normalize(),t=this.dot(n),this.copy(n).multiplyScalar(t)}}(),projectOnPlane:function(){var n;return function(t){return n===undefined&&(n=new THREE.Vector3),n.copy(this).projectOnVector(t),this.sub(n)}}(),reflect:function(){var n;return function(t){return n===undefined&&(n=new THREE.Vector3),this.sub(n.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(n){var t=this.dot(n)/(this.length()*n.length());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(n){return Math.sqrt(this.distanceToSquared(n))},distanceToSquared:function(n){var t=this.x-n.x,i=this.y-n.y,r=this.z-n.z;return t*t+i*i+r*r},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(n){return console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code."),this.setFromMatrixPosition(n)},getScaleFromMatrix:function(n){return console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code."),this.setFromMatrixScale(n)},getColumnFromMatrix:function(n,t){return console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code."),this.setFromMatrixColumn(n,t)},setFromMatrixPosition:function(n){return this.x=n.elements[12],this.y=n.elements[13],this.z=n.elements[14],this},setFromMatrixScale:function(n){var t=this.set(n.elements[0],n.elements[1],n.elements[2]).length(),i=this.set(n.elements[4],n.elements[5],n.elements[6]).length(),r=this.set(n.elements[8],n.elements[9],n.elements[10]).length();return this.x=t,this.y=i,this.z=r,this},setFromMatrixColumn:function(n,t){var i=n*4,r=t.elements;return this.x=r[i],this.y=r[i+1],this.z=r[i+2],this},equals:function(n){return n.x===this.x&&n.y===this.y&&n.z===this.z},fromArray:function(n){return this.x=n[0],this.y=n[1],this.z=n[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(n,t,i,r){this.x=n||0;this.y=t||0;this.z=i||0;this.w=r!==undefined?r:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(n,t,i,r){return this.x=n,this.y=t,this.z=i,this.w=r,this},setX:function(n){return this.x=n,this},setY:function(n){return this.y=n,this},setZ:function(n){return this.z=n,this},setW:function(n){return this.w=n,this},setComponent:function(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+n);}},getComponent:function(n){switch(n){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+n);}},copy:function(n){return this.x=n.x,this.y=n.y,this.z=n.z,this.w=n.w!==undefined?n.w:1,this},add:function(n,t){return t!==undefined?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,t)):(this.x+=n.x,this.y+=n.y,this.z+=n.z,this.w+=n.w,this)},addScalar:function(n){return this.x+=n,this.y+=n,this.z+=n,this.w+=n,this},addVectors:function(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this.z=n.z+t.z,this.w=n.w+t.w,this},sub:function(n,t){return t!==undefined?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,t)):(this.x-=n.x,this.y-=n.y,this.z-=n.z,this.w-=n.w,this)},subVectors:function(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this.z=n.z-t.z,this.w=n.w-t.w,this},multiplyScalar:function(n){return this.x*=n,this.y*=n,this.z*=n,this.w*=n,this},applyMatrix4:function(n){var i=this.x,r=this.y,u=this.z,f=this.w,t=n.elements;return this.x=t[0]*i+t[4]*r+t[8]*u+t[12]*f,this.y=t[1]*i+t[5]*r+t[9]*u+t[13]*f,this.z=t[2]*i+t[6]*r+t[10]*u+t[14]*f,this.w=t[3]*i+t[7]*r+t[11]*u+t[15]*f,this},divideScalar:function(n){if(n!==0){var t=1/n;this.x*=t;this.y*=t;this.z*=t;this.w*=t}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(n){this.w=2*Math.acos(n.w);var t=Math.sqrt(1-n.w*n.w);return t<.0001?(this.x=1,this.y=0,this.z=0):(this.x=n.x/t,this.y=n.y/t,this.z=n.z/t),this},setAxisAngleFromRotationMatrix:function(n){var g,t,i,r,f=.01,v=.1,u=n.elements,b=u[0],e=u[4],o=u[8],s=u[1],k=u[5],h=u[9],c=u[2],l=u[6],d=u[10],a;if(Math.abs(e-s)<f&&Math.abs(o-c)<f&&Math.abs(h-l)<f){if(Math.abs(e+s)<v&&Math.abs(o+c)<v&&Math.abs(h+l)<v&&Math.abs(b+k+d-3)<v)return this.set(1,0,0,0),this;g=Math.PI;var y=(b+1)/2,p=(k+1)/2,w=(d+1)/2,nt=(e+s)/4,tt=(o+c)/4,it=(h+l)/4;return y>p&&y>w?y<f?(t=0,i=.707106781,r=.707106781):(t=Math.sqrt(y),i=nt/t,r=tt/t):p>w?p<f?(t=.707106781,i=0,r=.707106781):(i=Math.sqrt(p),t=nt/i,r=it/i):w<f?(t=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),t=tt/r,i=it/r),this.set(t,i,r,g),this}return a=Math.sqrt((l-h)*(l-h)+(o-c)*(o-c)+(s-e)*(s-e)),Math.abs(a)<.001&&(a=1),this.x=(l-h)/a,this.y=(o-c)/a,this.z=(s-e)/a,this.w=Math.acos((b+k+d-1)/2),this},min:function(n){return this.x>n.x&&(this.x=n.x),this.y>n.y&&(this.y=n.y),this.z>n.z&&(this.z=n.z),this.w>n.w&&(this.w=n.w),this},max:function(n){return this.x<n.x&&(this.x=n.x),this.y<n.y&&(this.y=n.y),this.z<n.z&&(this.z=n.z),this.w<n.w&&(this.w=n.w),this},clamp:function(n,t){return this.x<n.x?this.x=n.x:this.x>t.x&&(this.x=t.x),this.y<n.y?this.y=n.y:this.y>t.y&&(this.y=t.y),this.z<n.z?this.z=n.z:this.z>t.z&&(this.z=t.z),this.w<n.w?this.w=n.w:this.w>t.w&&(this.w=t.w),this},clampScalar:function(){var n,t;return function(i,r){return n===undefined&&(n=new THREE.Vector4,t=new THREE.Vector4),n.set(i,i,i,i),t.set(r,r,r,r),this.clamp(n,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(n){return this.x*n.x+this.y*n.y+this.z*n.z+this.w*n.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(n){var t=this.length();return t!==0&&n!==t&&this.multiplyScalar(n/t),this},lerp:function(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this.z+=(n.z-this.z)*t,this.w+=(n.w-this.w)*t,this},equals:function(n){return n.x===this.x&&n.y===this.y&&n.z===this.z&&n.w===this.w},fromArray:function(n){return this.x=n[0],this.y=n[1],this.z=n[2],this.w=n[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(n,t,i,r){this._x=n||0;this._y=t||0;this._z=i||0;this._order=r||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(n){this._x=n;this.onChangeCallback()},get y(){return this._y},set y(n){this._y=n;this.onChangeCallback()},get z(){return this._z},set z(n){this._z=n;this.onChangeCallback()},get order(){return this._order},set order(n){this._order=n;this.onChangeCallback()},set:function(n,t,i,r){return this._x=n,this._y=t,this._z=i,this._order=r||this._order,this.onChangeCallback(),this},copy:function(n){return this._x=n._x,this._y=n._y,this._z=n._z,this._order=n._order,this.onChangeCallback(),this},setFromRotationMatrix:function(n,t){var r=THREE.Math.clamp,i=n.elements,u=i[0],o=i[4],s=i[8],h=i[1],f=i[5],c=i[9],l=i[2],a=i[6],e=i[10];return t=t||this._order,t==="XYZ"?(this._y=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-c,e),this._z=Math.atan2(-o,u)):(this._x=Math.atan2(a,f),this._z=0)):t==="YXZ"?(this._x=Math.asin(-r(c,-1,1)),Math.abs(c)<.99999?(this._y=Math.atan2(s,e),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-l,u),this._z=0)):t==="ZXY"?(this._x=Math.asin(r(a,-1,1)),Math.abs(a)<.99999?(this._y=Math.atan2(-l,e),this._z=Math.atan2(-o,f)):(this._y=0,this._z=Math.atan2(h,u))):t==="ZYX"?(this._y=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(a,e),this._z=Math.atan2(h,u)):(this._x=0,this._z=Math.atan2(-o,f))):t==="YZX"?(this._z=Math.asin(r(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-c,f),this._y=Math.atan2(-l,u)):(this._x=0,this._y=Math.atan2(s,e))):t==="XZY"?(this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(a,f),this._y=Math.atan2(s,u)):(this._x=Math.atan2(-c,e),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+t),this._order=t,this.onChangeCallback(),this},setFromQuaternion:function(n,t,i){var o=THREE.Math.clamp,r=n.x*n.x,u=n.y*n.y,f=n.z*n.z,e=n.w*n.w;return t=t||this._order,t==="XYZ"?(this._x=Math.atan2(2*(n.x*n.w-n.y*n.z),e-r-u+f),this._y=Math.asin(o(2*(n.x*n.z+n.y*n.w),-1,1)),this._z=Math.atan2(2*(n.z*n.w-n.x*n.y),e+r-u-f)):t==="YXZ"?(this._x=Math.asin(o(2*(n.x*n.w-n.y*n.z),-1,1)),this._y=Math.atan2(2*(n.x*n.z+n.y*n.w),e-r-u+f),this._z=Math.atan2(2*(n.x*n.y+n.z*n.w),e-r+u-f)):t==="ZXY"?(this._x=Math.asin(o(2*(n.x*n.w+n.y*n.z),-1,1)),this._y=Math.atan2(2*(n.y*n.w-n.z*n.x),e-r-u+f),this._z=Math.atan2(2*(n.z*n.w-n.x*n.y),e-r+u-f)):t==="ZYX"?(this._x=Math.atan2(2*(n.x*n.w+n.z*n.y),e-r-u+f),this._y=Math.asin(o(2*(n.y*n.w-n.x*n.z),-1,1)),this._z=Math.atan2(2*(n.x*n.y+n.z*n.w),e+r-u-f)):t==="YZX"?(this._x=Math.atan2(2*(n.x*n.w-n.z*n.y),e-r+u-f),this._y=Math.atan2(2*(n.y*n.w-n.x*n.z),e+r-u-f),this._z=Math.asin(o(2*(n.x*n.y+n.z*n.w),-1,1))):t==="XZY"?(this._x=Math.atan2(2*(n.x*n.w+n.y*n.z),e-r+u-f),this._y=Math.atan2(2*(n.x*n.z+n.y*n.w),e+r-u-f),this._z=Math.asin(o(2*(n.z*n.w-n.x*n.y),-1,1))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+t),this._order=t,i!==!1&&this.onChangeCallback(),this},reorder:function(){var n=new THREE.Quaternion;return function(t){n.setFromEuler(this);this.setFromQuaternion(n,t)}}(),equals:function(n){return n._x===this._x&&n._y===this._y&&n._z===this._z&&n._order===this._order},fromArray:function(n){return this._x=n[0],this._y=n[1],this._z=n[2],n[3]!==undefined&&(this._order=n[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(n){return this.onChangeCallback=n,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(n,t){this.start=n!==undefined?n:new THREE.Vector3;this.end=t!==undefined?t:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(n,t){return this.start.copy(n),this.end.copy(t),this},copy:function(n){return this.start.copy(n.start),this.end.copy(n.end),this},center:function(n){var t=n||new THREE.Vector3;return t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(n){var t=n||new THREE.Vector3;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(n,t){var i=t||new THREE.Vector3;return this.delta(i).multiplyScalar(n).add(this.start)},closestPointToPointParameter:function(){var t=new THREE.Vector3,n=new THREE.Vector3;return function(i,r){t.subVectors(i,this.start);n.subVectors(this.end,this.start);var f=n.dot(n),e=n.dot(t),u=e/f;return r&&(u=THREE.Math.clamp(u,0,1)),u}}(),closestPointToPoint:function(n,t,i){var r=this.closestPointToPointParameter(n,t),u=i||new THREE.Vector3;return this.delta(u).multiplyScalar(r).add(this.start)},applyMatrix4:function(n){return this.start.applyMatrix4(n),this.end.applyMatrix4(n),this},equals:function(n){return n.start.equals(this.start)&&n.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(n,t){this.min=n!==undefined?n:new THREE.Vector2(Infinity,Infinity);this.max=t!==undefined?t:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(n,t){return this.min.copy(n),this.max.copy(t),this},setFromPoints:function(n){var t,i,r;if(n.length>0)for(t=n[0],this.min.copy(t),this.max.copy(t),i=1,r=n.length;i<r;i++)t=n[i],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y);else this.makeEmpty();return this},setFromCenterAndSize:function(){var n=new THREE.Vector2;return function(t,i){var r=n.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),copy:function(n){return this.min.copy(n.min),this.max.copy(n.max),this},makeEmpty:function(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-Infinity,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(n){var t=n||new THREE.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(n){var t=n||new THREE.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(n){return this.min.min(n),this.max.max(n),this},expandByVector:function(n){return this.min.sub(n),this.max.add(n),this},expandByScalar:function(n){return this.min.addScalar(-n),this.max.addScalar(n),this},containsPoint:function(n){return n.x<this.min.x||n.x>this.max.x||n.y<this.min.y||n.y>this.max.y?!1:!0},containsBox:function(n){return this.min.x<=n.min.x&&n.max.x<=this.max.x&&this.min.y<=n.min.y&&n.max.y<=this.max.y?!0:!1},getParameter:function(n,t){var i=t||new THREE.Vector2;return i.set((n.x-this.min.x)/(this.max.x-this.min.x),(n.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(n){return n.max.x<this.min.x||n.min.x>this.max.x||n.max.y<this.min.y||n.min.y>this.max.y?!1:!0},clampPoint:function(n,t){var i=t||new THREE.Vector2;return i.copy(n).clamp(this.min,this.max)},distanceToPoint:function(){var n=new THREE.Vector2;return function(t){var i=n.copy(t).clamp(this.min,this.max);return i.sub(t).length()}}(),intersect:function(n){return this.min.max(n.min),this.max.min(n.max),this},union:function(n){return this.min.min(n.min),this.max.max(n.max),this},translate:function(n){return this.min.add(n),this.max.add(n),this},equals:function(n){return n.min.equals(this.min)&&n.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(n,t){this.min=n!==undefined?n:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=t!==undefined?t:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(n,t){return this.min.copy(n),this.max.copy(t),this},addPoint:function(n){return n.x<this.min.x?this.min.x=n.x:n.x>this.max.x&&(this.max.x=n.x),n.y<this.min.y?this.min.y=n.y:n.y>this.max.y&&(this.max.y=n.y),n.z<this.min.z?this.min.z=n.z:n.z>this.max.z&&(this.max.z=n.z),this},setFromPoints:function(n){var i,t,r;if(n.length>0)for(i=n[0],this.min.copy(i),this.max.copy(i),t=1,r=n.length;t<r;t++)this.addPoint(n[t]);else this.makeEmpty();return this},setFromCenterAndSize:function(){var n=new THREE.Vector3;return function(t,i){var r=n.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(){var n=new THREE.Vector3;return function(t){var i=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){var u,r,f;if(t.geometry!==undefined&&t.geometry.vertices!==undefined)for(u=t.geometry.vertices,r=0,f=u.length;r<f;r++)n.copy(u[r]),n.applyMatrix4(t.matrixWorld),i.expandByPoint(n)}),this}}(),copy:function(n){return this.min.copy(n.min),this.max.copy(n.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(n){var t=n||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(n){var t=n||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(n){return this.min.min(n),this.max.max(n),this},expandByVector:function(n){return this.min.sub(n),this.max.add(n),this},expandByScalar:function(n){return this.min.addScalar(-n),this.max.addScalar(n),this},containsPoint:function(n){return n.x<this.min.x||n.x>this.max.x||n.y<this.min.y||n.y>this.max.y||n.z<this.min.z||n.z>this.max.z?!1:!0},containsBox:function(n){return this.min.x<=n.min.x&&n.max.x<=this.max.x&&this.min.y<=n.min.y&&n.max.y<=this.max.y&&this.min.z<=n.min.z&&n.max.z<=this.max.z?!0:!1},getParameter:function(n,t){var i=t||new THREE.Vector3;return i.set((n.x-this.min.x)/(this.max.x-this.min.x),(n.y-this.min.y)/(this.max.y-this.min.y),(n.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(n){return n.max.x<this.min.x||n.min.x>this.max.x||n.max.y<this.min.y||n.min.y>this.max.y||n.max.z<this.min.z||n.min.z>this.max.z?!1:!0},clampPoint:function(n,t){var i=t||new THREE.Vector3;return i.copy(n).clamp(this.min,this.max)},distanceToPoint:function(){var n=new THREE.Vector3;return function(t){var i=n.copy(t).clamp(this.min,this.max);return i.sub(t).length()}}(),getBoundingSphere:function(){var n=new THREE.Vector3;return function(t){var i=t||new THREE.Sphere;return i.center=this.center(),i.radius=this.size(n).length()*.5,i}}(),intersect:function(n){return this.min.max(n.min),this.max.min(n.max),this},union:function(n){return this.min.min(n.min),this.max.max(n.max),this},applyMatrix4:function(){var n=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return n[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),n[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),n[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),n[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),n[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),n[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),n[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),n[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(n),this}}(),translate:function(n){return this.min.add(n),this.max.add(n),this},equals:function(n){return n.min.equals(this.min)&&n.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(n,t,i,r,u,f,e,o,s){this.elements=new Float32Array(9);var h=this.elements;h[0]=n!==undefined?n:1;h[3]=t||0;h[6]=i||0;h[1]=r||0;h[4]=u!==undefined?u:1;h[7]=f||0;h[2]=e||0;h[5]=o||0;h[8]=s!==undefined?s:1};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(n,t,i,r,u,f,e,o,s){var h=this.elements;return h[0]=n,h[3]=t,h[6]=i,h[1]=r,h[4]=u,h[7]=f,h[2]=e,h[5]=o,h[8]=s,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(n){var t=n.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(n){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),n.applyMatrix3(this)},multiplyVector3Array:function(n){return console.warn("DEPRECATED: Matrix3's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(n)},applyToVector3Array:function(){var n=new THREE.Vector3;return function(t,i,r){i===undefined&&(i=0);r===undefined&&(r=t.length);for(var f=0,u=i;f<r;f+=3,u+=3)n.x=t[u],n.y=t[u+1],n.z=t[u+2],n.applyMatrix3(this),t[u]=n.x,t[u+1]=n.y,t[u+2]=n.z;return t}}(),multiplyScalar:function(n){var t=this.elements;return t[0]*=n,t[3]*=n,t[6]*=n,t[1]*=n,t[4]*=n,t[7]*=n,t[2]*=n,t[5]*=n,t[8]*=n,this},determinant:function(){var n=this.elements,t=n[0],i=n[1],r=n[2],u=n[3],f=n[4],e=n[5],o=n[6],s=n[7],h=n[8];return t*f*h-t*e*s-i*u*h+i*e*o+r*u*s-r*f*o},getInverse:function(n,t){var i=n.elements,r=this.elements,u,f;if(r[0]=i[10]*i[5]-i[6]*i[9],r[1]=-i[10]*i[1]+i[2]*i[9],r[2]=i[6]*i[1]-i[2]*i[5],r[3]=-i[10]*i[4]+i[6]*i[8],r[4]=i[10]*i[0]-i[2]*i[8],r[5]=-i[6]*i[0]+i[2]*i[4],r[6]=i[9]*i[4]-i[5]*i[8],r[7]=-i[9]*i[0]+i[1]*i[8],r[8]=i[5]*i[0]-i[1]*i[4],u=i[0]*r[0]+i[1]*r[3]+i[2]*r[6],u===0){if(f="Matrix3.getInverse(): can't invert matrix, determinant is 0",t||!1)throw new Error(f);else console.warn(f);return this.identity(),this}return this.multiplyScalar(1/u),this},transpose:function(){var t,n=this.elements;return t=n[1],n[1]=n[3],n[3]=t,t=n[2],n[2]=n[6],n[6]=t,t=n[5],n[5]=n[7],n[7]=t,this},flattenToArrayOffset:function(n,t){var i=this.elements;return n[t]=i[0],n[t+1]=i[1],n[t+2]=i[2],n[t+3]=i[3],n[t+4]=i[4],n[t+5]=i[5],n[t+6]=i[6],n[t+7]=i[7],n[t+8]=i[8],n},getNormalMatrix:function(n){return this.getInverse(n).transpose(),this},transposeIntoArray:function(n){var t=this.elements;return n[0]=t[0],n[1]=t[3],n[2]=t[6],n[3]=t[1],n[4]=t[4],n[5]=t[7],n[6]=t[2],n[7]=t[5],n[8]=t[8],this},fromArray:function(n){return this.elements.set(n),this},toArray:function(){var n=this.elements;return[n[0],n[1],n[2],n[3],n[4],n[5],n[6],n[7],n[8]]},clone:function(){var n=this.elements;return new THREE.Matrix3(n[0],n[3],n[6],n[1],n[4],n[7],n[2],n[5],n[8])}};THREE.Matrix4=function(n,t,i,r,u,f,e,o,s,h,c,l,a,v,y,p){this.elements=new Float32Array(16);var w=this.elements;w[0]=n!==undefined?n:1;w[4]=t||0;w[8]=i||0;w[12]=r||0;w[1]=u||0;w[5]=f!==undefined?f:1;w[9]=e||0;w[13]=o||0;w[2]=s||0;w[6]=h||0;w[10]=c!==undefined?c:1;w[14]=l||0;w[3]=a||0;w[7]=v||0;w[11]=y||0;w[15]=p!==undefined?p:1};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(n,t,i,r,u,f,e,o,s,h,c,l,a,v,y,p){var w=this.elements;return w[0]=n,w[4]=t,w[8]=i,w[12]=r,w[1]=u,w[5]=f,w[9]=e,w[13]=o,w[2]=s,w[6]=h,w[10]=c,w[14]=l,w[3]=a,w[7]=v,w[11]=y,w[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(n){return this.elements.set(n.elements),this},extractPosition:function(n){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(n)},copyPosition:function(n){var t=this.elements,i=n.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this},extractRotation:function(){var n=new THREE.Vector3;return function(t){var r=this.elements,i=t.elements,u=1/n.set(i[0],i[1],i[2]).length(),f=1/n.set(i[4],i[5],i[6]).length(),e=1/n.set(i[8],i[9],i[10]).length();return r[0]=i[0]*u,r[1]=i[1]*u,r[2]=i[2]*u,r[4]=i[4]*f,r[5]=i[5]*f,r[6]=i[6]*f,r[8]=i[8]*e,r[9]=i[9]*e,r[10]=i[10]*e,this}}(),makeRotationFromEuler:function(n){n instanceof THREE.Euler==!1&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var t=this.elements,g=n.x,nt=n.y,tt=n.z,f=Math.cos(g),i=Math.sin(g),e=Math.cos(nt),r=Math.sin(nt),o=Math.cos(tt),u=Math.sin(tt);if(n.order==="XYZ"){var s=f*o,h=f*u,c=i*o,l=i*u;t[0]=e*o;t[4]=-e*u;t[8]=r;t[1]=h+c*r;t[5]=s-l*r;t[9]=-i*e;t[2]=l-s*r;t[6]=c+h*r;t[10]=f*e}else if(n.order==="YXZ"){var a=e*o,v=e*u,y=r*o,p=r*u;t[0]=a+p*i;t[4]=y*i-v;t[8]=f*r;t[1]=f*u;t[5]=f*o;t[9]=-i;t[2]=v*i-y;t[6]=p+a*i;t[10]=f*e}else if(n.order==="ZXY"){var a=e*o,v=e*u,y=r*o,p=r*u;t[0]=a-p*i;t[4]=-f*u;t[8]=y+v*i;t[1]=v+y*i;t[5]=f*o;t[9]=p-a*i;t[2]=-f*r;t[6]=i;t[10]=f*e}else if(n.order==="ZYX"){var s=f*o,h=f*u,c=i*o,l=i*u;t[0]=e*o;t[4]=c*r-h;t[8]=s*r+l;t[1]=e*u;t[5]=l*r+s;t[9]=h*r-c;t[2]=-r;t[6]=i*e;t[10]=f*e}else if(n.order==="YZX"){var w=f*e,b=f*r,k=i*e,d=i*r;t[0]=e*o;t[4]=d-w*u;t[8]=k*u+b;t[1]=u;t[5]=f*o;t[9]=-i*o;t[2]=-r*o;t[6]=b*u+k;t[10]=w-d*u}else if(n.order==="XZY"){var w=f*e,b=f*r,k=i*e,d=i*r;t[0]=e*o;t[4]=-u;t[8]=r*o;t[1]=w*u+d;t[5]=f*o;t[9]=b*u-k;t[2]=k*u-b;t[6]=i*o;t[10]=d*u+w}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(n){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(n)},makeRotationFromQuaternion:function(n){var t=this.elements,i=n.x,r=n.y,f=n.z,e=n.w,s=i+i,o=r+r,u=f+f,h=i*s,c=i*o,l=i*u,a=r*o,v=r*u,y=f*u,p=e*s,w=e*o,b=e*u;return t[0]=1-(a+y),t[4]=c-b,t[8]=l+w,t[1]=c+b,t[5]=1-(h+y),t[9]=v-p,t[2]=l-w,t[6]=v+p,t[10]=1-(h+a),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var t=new THREE.Vector3,i=new THREE.Vector3,n=new THREE.Vector3;return function(r,u,f){var e=this.elements;return n.subVectors(r,u).normalize(),n.length()===0&&(n.z=1),t.crossVectors(f,n).normalize(),t.length()===0&&(n.x+=.0001,t.crossVectors(f,n).normalize()),i.crossVectors(n,t),e[0]=t.x,e[4]=i.x,e[8]=n.x,e[1]=t.y,e[5]=i.y,e[9]=n.y,e[2]=t.z,e[6]=i.z,e[10]=n.z,this}}(),multiply:function(n,t){return t!==undefined?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(n,t)):this.multiplyMatrices(this,n)},multiplyMatrices:function(n,t){var i=n.elements,r=t.elements,u=this.elements,f=i[0],e=i[4],o=i[8],s=i[12],h=i[1],c=i[5],l=i[9],a=i[13],v=i[2],y=i[6],p=i[10],w=i[14],b=i[3],k=i[7],d=i[11],g=i[15],nt=r[0],tt=r[4],it=r[8],rt=r[12],ut=r[1],ft=r[5],et=r[9],ot=r[13],st=r[2],ht=r[6],ct=r[10],lt=r[14],at=r[3],vt=r[7],yt=r[11],pt=r[15];return u[0]=f*nt+e*ut+o*st+s*at,u[4]=f*tt+e*ft+o*ht+s*vt,u[8]=f*it+e*et+o*ct+s*yt,u[12]=f*rt+e*ot+o*lt+s*pt,u[1]=h*nt+c*ut+l*st+a*at,u[5]=h*tt+c*ft+l*ht+a*vt,u[9]=h*it+c*et+l*ct+a*yt,u[13]=h*rt+c*ot+l*lt+a*pt,u[2]=v*nt+y*ut+p*st+w*at,u[6]=v*tt+y*ft+p*ht+w*vt,u[10]=v*it+y*et+p*ct+w*yt,u[14]=v*rt+y*ot+p*lt+w*pt,u[3]=b*nt+k*ut+d*st+g*at,u[7]=b*tt+k*ft+d*ht+g*vt,u[11]=b*it+k*et+d*ct+g*yt,u[15]=b*rt+k*ot+d*lt+g*pt,this},multiplyToArray:function(n,t,i){var r=this.elements;return this.multiplyMatrices(n,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(n){var t=this.elements;return t[0]*=n,t[4]*=n,t[8]*=n,t[12]*=n,t[1]*=n,t[5]*=n,t[9]*=n,t[13]*=n,t[2]*=n,t[6]*=n,t[10]*=n,t[14]*=n,t[3]*=n,t[7]*=n,t[11]*=n,t[15]*=n,this},multiplyVector3:function(n){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),n.applyProjection(this)},multiplyVector4:function(n){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},multiplyVector3Array:function(n){return console.warn("DEPRECATED: Matrix4's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(n)},applyToVector3Array:function(){var n=new THREE.Vector3;return function(t,i,r){i===undefined&&(i=0);r===undefined&&(r=t.length);for(var f=0,u=i;f<r;f+=3,u+=3)n.x=t[u],n.y=t[u+1],n.z=t[u+2],n.applyMatrix4(this),t[u]=n.x,t[u+1]=n.y,t[u+2]=n.z;return t}}(),rotateAxis:function(n){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");n.transformDirection(this)},crossVector:function(n){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),n.applyMatrix4(this)},determinant:function(){var n=this.elements,t=n[0],i=n[4],r=n[8],u=n[12],f=n[1],e=n[5],o=n[9],s=n[13],h=n[2],c=n[6],l=n[10],a=n[14],v=n[3],y=n[7],p=n[11],w=n[15];return v*(+u*o*c-r*s*c-u*e*l+i*s*l+r*e*a-i*o*a)+y*(+t*o*a-t*s*l+u*f*l-r*f*a+r*s*h-u*o*h)+p*(+t*s*c-t*e*a-u*f*c+i*f*a+u*e*h-i*s*h)+w*(-r*e*h-t*o*c+t*e*l+r*f*c-i*f*l+i*o*h)},transpose:function(){var n=this.elements,t;return t=n[1],n[1]=n[4],n[4]=t,t=n[2],n[2]=n[8],n[8]=t,t=n[6],n[6]=n[9],n[9]=t,t=n[3],n[3]=n[12],n[12]=t,t=n[7],n[7]=n[13],n[13]=t,t=n[11],n[11]=n[14],n[14]=t,this},flattenToArrayOffset:function(n,t){var i=this.elements;return n[t]=i[0],n[t+1]=i[1],n[t+2]=i[2],n[t+3]=i[3],n[t+4]=i[4],n[t+5]=i[5],n[t+6]=i[6],n[t+7]=i[7],n[t+8]=i[8],n[t+9]=i[9],n[t+10]=i[10],n[t+11]=i[11],n[t+12]=i[12],n[t+13]=i[13],n[t+14]=i[14],n[t+15]=i[15],n},getPosition:function(){var n=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return n.set(t[12],t[13],t[14])}}(),setPosition:function(n){var t=this.elements;return t[12]=n.x,t[13]=n.y,t[14]=n.z,this},getInverse:function(n,t){var i=this.elements,d=n.elements,r=d[0],o=d[4],s=d[8],h=d[12],u=d[1],c=d[5],l=d[9],a=d[13],f=d[2],v=d[6],y=d[10],p=d[14],e=d[3],w=d[7],b=d[11],k=d[15],g,nt;if(i[0]=l*p*w-a*y*w+a*v*b-c*p*b-l*v*k+c*y*k,i[4]=h*y*w-s*p*w-h*v*b+o*p*b+s*v*k-o*y*k,i[8]=s*a*w-h*l*w+h*c*b-o*a*b-s*c*k+o*l*k,i[12]=h*l*v-s*a*v-h*c*y+o*a*y+s*c*p-o*l*p,i[1]=a*y*e-l*p*e-a*f*b+u*p*b+l*f*k-u*y*k,i[5]=s*p*e-h*y*e+h*f*b-r*p*b-s*f*k+r*y*k,i[9]=h*l*e-s*a*e-h*u*b+r*a*b+s*u*k-r*l*k,i[13]=s*a*f-h*l*f+h*u*y-r*a*y-s*u*p+r*l*p,i[2]=c*p*e-a*v*e+a*f*w-u*p*w-c*f*k+u*v*k,i[6]=h*v*e-o*p*e-h*f*w+r*p*w+o*f*k-r*v*k,i[10]=o*a*e-h*c*e+h*u*w-r*a*w-o*u*k+r*c*k,i[14]=h*c*f-o*a*f-h*u*v+r*a*v+o*u*p-r*c*p,i[3]=l*v*e-c*y*e-l*f*w+u*y*w+c*f*b-u*v*b,i[7]=o*y*e-s*v*e+s*f*w-r*y*w-o*f*b+r*v*b,i[11]=s*c*e-o*l*e-s*u*w+r*l*w+o*u*b-r*c*b,i[15]=o*l*f-s*c*f+s*u*v-r*l*v-o*u*y+r*c*y,g=r*i[0]+u*i[4]+f*i[8]+e*i[12],g==0){if(nt="Matrix4.getInverse(): can't invert matrix, determinant is 0",t||!1)throw new Error(nt);else console.warn(nt);return this.identity(),this}return this.multiplyScalar(1/g),this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(n){var t=this.elements,i=n.x,r=n.y,u=n.z;return t[0]*=i,t[4]*=r,t[8]*=u,t[1]*=i,t[5]*=r,t[9]*=u,t[2]*=i,t[6]*=r,t[10]*=u,t[3]*=i,t[7]*=r,t[11]*=u,this},getMaxScaleOnAxis:function(){var n=this.elements,t=n[0]*n[0]+n[1]*n[1]+n[2]*n[2],i=n[4]*n[4]+n[5]*n[5]+n[6]*n[6],r=n[8]*n[8]+n[9]*n[9]+n[10]*n[10];return Math.sqrt(Math.max(t,Math.max(i,r)))},makeTranslation:function(n,t,i){return this.set(1,0,0,n,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(n){var t=Math.cos(n),i=Math.sin(n);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this},makeRotationY:function(n){var t=Math.cos(n),i=Math.sin(n);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this},makeRotationZ:function(n){var t=Math.cos(n),i=Math.sin(n);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(n,t){var e=Math.cos(t),r=Math.sin(t),s=1-e,o=n.x,u=n.y,i=n.z,f=s*o,h=s*u;return this.set(f*o+e,f*u-r*i,f*i+r*u,0,f*u+r*i,h*u+e,h*i-r*o,0,f*i-r*u,h*i+r*o,s*i*i+e,0,0,0,0,1),this},makeScale:function(n,t,i){return this.set(n,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},compose:function(n,t,i){return this.makeRotationFromQuaternion(t),this.scale(i),this.setPosition(n),this},decompose:function(){var t=new THREE.Vector3,n=new THREE.Matrix4;return function(i,r,u){var f=this.elements,e=t.set(f[0],f[1],f[2]).length(),c=t.set(f[4],f[5],f[6]).length(),l=t.set(f[8],f[9],f[10]).length(),a=this.determinant();a<0&&(e=-e);i.x=f[12];i.y=f[13];i.z=f[14];n.elements.set(this.elements);var o=1/e,s=1/c,h=1/l;return n.elements[0]*=o,n.elements[1]*=o,n.elements[2]*=o,n.elements[4]*=s,n.elements[5]*=s,n.elements[6]*=s,n.elements[8]*=h,n.elements[9]*=h,n.elements[10]*=h,r.setFromRotationMatrix(n),u.x=e,u.y=c,u.z=l,this}}(),makeFrustum:function(n,t,i,r,u,f){var e=this.elements,o=2*u/(t-n),s=2*u/(r-i),h=(t+n)/(t-n),c=(r+i)/(r-i),l=-(f+u)/(f-u),a=-2*f*u/(f-u);return e[0]=o,e[4]=0,e[8]=h,e[12]=0,e[1]=0,e[5]=s,e[9]=c,e[13]=0,e[2]=0,e[6]=0,e[10]=l,e[14]=a,e[3]=0,e[7]=0,e[11]=-1,e[15]=0,this},makePerspective:function(n,t,i,r){var u=i*Math.tan(THREE.Math.degToRad(n*.5)),f=-u,e=f*t,o=u*t;return this.makeFrustum(e,o,f,u,i,r)},makeOrthographic:function(n,t,i,r,u,f){var e=this.elements,o=t-n,s=i-r,h=f-u,c=(t+n)/o,l=(i+r)/s,a=(f+u)/h;return e[0]=2/o,e[4]=0,e[8]=0,e[12]=-c,e[1]=0,e[5]=2/s,e[9]=0,e[13]=-l,e[2]=0,e[6]=0,e[10]=-2/h,e[14]=-a,e[3]=0,e[7]=0,e[11]=0,e[15]=1,this},fromArray:function(n){return this.elements.set(n),this},toArray:function(){var n=this.elements;return[n[0],n[1],n[2],n[3],n[4],n[5],n[6],n[7],n[8],n[9],n[10],n[11],n[12],n[13],n[14],n[15]]},clone:function(){var n=this.elements;return new THREE.Matrix4(n[0],n[4],n[8],n[12],n[1],n[5],n[9],n[13],n[2],n[6],n[10],n[14],n[3],n[7],n[11],n[15])}};THREE.Ray=function(n,t){this.origin=n!==undefined?n:new THREE.Vector3;this.direction=t!==undefined?t:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(n,t){return this.origin.copy(n),this.direction.copy(t),this},copy:function(n){return this.origin.copy(n.origin),this.direction.copy(n.direction),this},at:function(n,t){var i=t||new THREE.Vector3;return i.copy(this.direction).multiplyScalar(n).add(this.origin)},recast:function(){var n=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,n)),this}}(),closestPointToPoint:function(n,t){var i=t||new THREE.Vector3,r;return(i.subVectors(n,this.origin),r=i.dot(this.direction),r<0)?i.copy(this.origin):i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(){var n=new THREE.Vector3;return function(t){var i=n.subVectors(t,this.origin).dot(this.direction);return i<0?this.origin.distanceTo(t):(n.copy(this.direction).multiplyScalar(i).add(this.origin),n.distanceTo(t))}}(),distanceSqToSegment:function(n,t,i,r){var b=n.clone().add(t).multiplyScalar(.5),v=t.clone().sub(n).normalize(),e=n.distanceTo(t)*.5,y=this.origin.clone().sub(b),o=-this.direction.dot(v),h=y.dot(this.direction),s=-y.dot(v),l=y.lengthSq(),p=Math.abs(1-o*o),f,u,c,a,w;return p>=0?(f=o*s-h,u=o*h-s,a=e*p,f>=0?u>=-a?u<=a?(w=1/p,f*=w,u*=w,c=f*(f+o*u+2*h)+u*(o*f+u+2*s)+l):(u=e,f=Math.max(0,-(o*u+h)),c=-f*f+u*(u+2*s)+l):(u=-e,f=Math.max(0,-(o*u+h)),c=-f*f+u*(u+2*s)+l):u<=-a?(f=Math.max(0,-(-o*e+h)),u=f>0?-e:Math.min(Math.max(-e,-s),e),c=-f*f+u*(u+2*s)+l):u<=a?(f=0,u=Math.min(Math.max(-e,-s),e),c=u*(u+2*s)+l):(f=Math.max(0,-(o*e+h)),u=f>0?e:Math.min(Math.max(-e,-s),e),c=-f*f+u*(u+2*s)+l)):(u=o>0?-e:e,f=Math.max(0,-(o*u+h)),c=-f*f+u*(u+2*s)+l),i&&i.copy(this.direction.clone().multiplyScalar(f).add(this.origin)),r&&r.copy(v.clone().multiplyScalar(u).add(b)),c},isIntersectionSphere:function(n){return this.distanceToPoint(n.center)<=n.radius},isIntersectionPlane:function(n){var t=n.distanceToPoint(this.origin),i;return t===0?!0:(i=n.normal.dot(this.direction),i*t<0)?!0:!1},distanceToPlane:function(n){var i=n.normal.dot(this.direction),t;return i==0?n.distanceToPoint(this.origin)==0?0:null:(t=-(this.origin.dot(n.normal)+n.constant)/i,t>=0?t:null)},intersectPlane:function(n,t){var i=this.distanceToPlane(n);return i===null?null:this.at(i,t)},isIntersectionBox:function(){var n=new THREE.Vector3;return function(t){return this.intersectBox(t,n)!==null}}(),intersectBox:function(n,t){var i,r,f,e,o,s,h=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,u=this.origin;return(h>=0?(i=(n.min.x-u.x)*h,r=(n.max.x-u.x)*h):(i=(n.max.x-u.x)*h,r=(n.min.x-u.x)*h),c>=0?(f=(n.min.y-u.y)*c,e=(n.max.y-u.y)*c):(f=(n.max.y-u.y)*c,e=(n.min.y-u.y)*c),i>e||f>r)?null:((f>i||i!==i)&&(i=f),(e<r||r!==r)&&(r=e),l>=0?(o=(n.min.z-u.z)*l,s=(n.max.z-u.z)*l):(o=(n.max.z-u.z)*l,s=(n.min.z-u.z)*l),i>s||o>r)?null:((o>i||i!==i)&&(i=o),(s<r||r!==r)&&(r=s),r<0)?null:this.at(i>=0?i:r,t)},intersectTriangle:function(){var n=new THREE.Vector3,i=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;return function(u,f,e,o,s){var h,c,l,a,v;if(i.subVectors(f,u),t.subVectors(e,u),r.crossVectors(i,t),h=this.direction.dot(r),h>0){if(o)return null;c=1}else if(h<0)c=-1,h=-h;else return null;return(n.subVectors(this.origin,u),l=c*this.direction.dot(t.crossVectors(n,t)),l<0)?null:(a=c*this.direction.dot(i.cross(n)),a<0)?null:l+a>h?null:(v=-c*n.dot(r),v<0)?null:this.at(v/h,s)}}(),applyMatrix4:function(n){return this.direction.add(this.origin).applyMatrix4(n),this.origin.applyMatrix4(n),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(n){return n.origin.equals(this.origin)&&n.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(n,t){this.center=n!==undefined?n:new THREE.Vector3;this.radius=t!==undefined?t:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(n,t){return this.center.copy(n),this.radius=t,this},setFromPoints:function(){var n=new THREE.Box3;return function(t,i){var f=this.center,r,u,e;for(i!==undefined?f.copy(i):n.setFromPoints(t).center(f),r=0,u=0,e=t.length;u<e;u++)r=Math.max(r,f.distanceToSquared(t[u]));return this.radius=Math.sqrt(r),this}}(),copy:function(n){return this.center.copy(n.center),this.radius=n.radius,this},empty:function(){return this.radius<=0},containsPoint:function(n){return n.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(n){return n.distanceTo(this.center)-this.radius},intersectsSphere:function(n){var t=this.radius+n.radius;return n.center.distanceToSquared(this.center)<=t*t},clampPoint:function(n,t){var r=this.center.distanceToSquared(n),i=t||new THREE.Vector3;return i.copy(n),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(n){var t=n||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(n){return this.center.applyMatrix4(n),this.radius=this.radius*n.getMaxScaleOnAxis(),this},translate:function(n){return this.center.add(n),this},equals:function(n){return n.center.equals(this.center)&&n.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(n,t,i,r,u,f){this.planes=[n!==undefined?n:new THREE.Plane,t!==undefined?t:new THREE.Plane,i!==undefined?i:new THREE.Plane,r!==undefined?r:new THREE.Plane,u!==undefined?u:new THREE.Plane,f!==undefined?f:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(n,t,i,r,u,f){var e=this.planes;return e[0].copy(n),e[1].copy(t),e[2].copy(i),e[3].copy(r),e[4].copy(u),e[5].copy(f),this},copy:function(n){for(var i=this.planes,t=0;t<6;t++)i[t].copy(n.planes[t]);return this},setFromMatrix:function(n){var i=this.planes,t=n.elements,o=t[0],s=t[1],h=t[2],r=t[3],c=t[4],l=t[5],a=t[6],u=t[7],v=t[8],y=t[9],p=t[10],f=t[11],w=t[12],b=t[13],k=t[14],e=t[15];return i[0].setComponents(r-o,u-c,f-v,e-w).normalize(),i[1].setComponents(r+o,u+c,f+v,e+w).normalize(),i[2].setComponents(r+s,u+l,f+y,e+b).normalize(),i[3].setComponents(r-s,u-l,f-y,e-b).normalize(),i[4].setComponents(r-h,u-a,f-p,e-k).normalize(),i[5].setComponents(r+h,u+a,f+p,e+k).normalize(),this},intersectsObject:function(){var n=new THREE.Sphere;return function(t){var i=t.geometry;return i.boundingSphere===null&&i.computeBoundingSphere(),n.copy(i.boundingSphere),n.applyMatrix4(t.matrixWorld),this.intersectsSphere(n)}}(),intersectsSphere:function(n){for(var i,r=this.planes,u=n.center,f=-n.radius,t=0;t<6;t++)if(i=r[t].distanceToPoint(u),i<f)return!1;return!0},intersectsBox:function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(i){for(var r,f,e,o=this.planes,u=0;u<6;u++)if(r=o[u],n.x=r.normal.x>0?i.min.x:i.max.x,t.x=r.normal.x>0?i.max.x:i.min.x,n.y=r.normal.y>0?i.min.y:i.max.y,t.y=r.normal.y>0?i.max.y:i.min.y,n.z=r.normal.z>0?i.min.z:i.max.z,t.z=r.normal.z>0?i.max.z:i.min.z,f=r.distanceToPoint(n),e=r.distanceToPoint(t),f<0&&e<0)return!1;return!0}}(),containsPoint:function(n){for(var i=this.planes,t=0;t<6;t++)if(i[t].distanceToPoint(n)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(n,t){this.normal=n!==undefined?n:new THREE.Vector3(1,0,0);this.constant=t!==undefined?t:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(n,t){return this.normal.copy(n),this.constant=t,this},setComponents:function(n,t,i,r){return this.normal.set(n,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(n,t){return this.normal.copy(n),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(i,r,u){var f=n.subVectors(u,r).cross(t.subVectors(i,r)).normalize();return this.setFromNormalAndCoplanarPoint(f,i),this}}(),copy:function(n){return this.normal.copy(n.normal),this.constant=n.constant,this},normalize:function(){var n=1/this.normal.length();return this.normal.multiplyScalar(n),this.constant*=n,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(n){return this.normal.dot(n)+this.constant},distanceToSphere:function(n){return this.distanceToPoint(n.center)-n.radius},projectPoint:function(n,t){return this.orthoPoint(n,t).sub(n).negate()},orthoPoint:function(n,t){var i=this.distanceToPoint(n),r=t||new THREE.Vector3;return r.copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(n){var t=this.distanceToPoint(n.start),i=this.distanceToPoint(n.end);return t<0&&i>0||i<0&&t>0},intersectLine:function(){var n=new THREE.Vector3;return function(t,i){var u=i||new THREE.Vector3,f=t.delta(n),e=this.normal.dot(f),r;return e==0?this.distanceToPoint(t.start)==0?u.copy(t.start):undefined:(r=-(t.start.dot(this.normal)+this.constant)/e,r<0||r>1)?undefined:u.copy(f).multiplyScalar(r).add(t.start)}}(),coplanarPoint:function(n){var t=n||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var n=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Matrix3;return function(r,u){var e=u||i.getNormalMatrix(r),o=n.copy(this.normal).applyMatrix3(e),f=this.coplanarPoint(t);return f.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(o,f),this}}(),translate:function(n){return this.constant=this.constant-n.dot(this.normal),this},equals:function(n){return n.normal.equals(this.normal)&&n.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={generateUUID:function(){var r="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),t=new Array(36),n=0,i;return function(){for(var u=0;u<36;u++)u==8||u==13||u==18||u==23?t[u]="-":u==14?t[u]="4":(n<=2&&(n=33554432+Math.random()*16777216|0),i=n&15,n=n>>4,t[u]=r[u==19?i&3|8:i]);return t.join("")}}(),clamp:function(n,t,i){return n<t?t:n>i?i:n},clampBottom:function(n,t){return n<t?t:n},mapLinear:function(n,t,i,r,u){return r+(n-t)*(u-r)/(i-t)},smoothstep:function(n,t,i){return n<=t?0:n>=i?1:(n=(n-t)/(i-t),n*n*(3-2*n))},smootherstep:function(n,t,i){return n<=t?0:n>=i?1:(n=(n-t)/(i-t),n*n*n*(n*(n*6-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(n,t){return n+Math.floor(Math.random()*(t-n+1))},randFloat:function(n,t){return n+Math.random()*(t-n)},randFloatSpread:function(n){return n*(.5-Math.random())},sign:function(n){return n<0?-1:n>0?1:0},degToRad:function(){var n=Math.PI/180;return function(t){return t*n}}(),radToDeg:function(){var n=180/Math.PI;return function(t){return t*n}}(),isPowerOfTwo:function(n){return(n&n-1)==0&&n!==0}};THREE.Spline=function(n){function a(n,t,i,r,u,f,e){var o=(i-n)*.5,s=(r-t)*.5;return(2*(t-i)+o+s)*e+(-3*(t-i)-2*o-s)*f+o*u+t}this.points=n;var i=[],f={x:0,y:0,z:0},l,t,r,u,e,o,s,h,c;this.initFromArray=function(n){this.points=[];for(var t=0;t<n.length;t++)this.points[t]={x:n[t][0],y:n[t][1],z:n[t][2]}};this.getPoint=function(n){return l=(this.points.length-1)*n,t=Math.floor(l),r=l-t,i[0]=t===0?t:t-1,i[1]=t,i[2]=t>this.points.length-2?this.points.length-1:t+1,i[3]=t>this.points.length-3?this.points.length-1:t+2,o=this.points[i[0]],s=this.points[i[1]],h=this.points[i[2]],c=this.points[i[3]],u=r*r,e=r*u,f.x=a(o.x,s.x,h.x,c.x,r,u,e),f.y=a(o.y,s.y,h.y,c.y,r,u,e),f.z=a(o.z,s.z,h.z,c.z,r,u,e),f};this.getControlPointsArray=function(){for(var t,r=this.points.length,i=[],n=0;n<r;n++)t=this.points[n],i[n]=[t.x,t.y,t.z];return i};this.getLength=function(n){var i,f,e,o,h=0,r=0,c=0,s=new THREE.Vector3,l=new THREE.Vector3,t=[],u=0;for(t[0]=0,n||(n=100),e=this.points.length*n,s.copy(this.points[0]),i=1;i<e;i++)f=i/e,o=this.getPoint(f),l.copy(o),u+=l.distanceTo(s),s.copy(o),h=(this.points.length-1)*f,r=Math.floor(h),r!=c&&(t[r]=u,c=r);return t[t.length]=u,{chunks:t,total:u}};this.reparametrizeByArcLength=function(n){var t,i,s,u,h,c,f,l,r=[],e=new THREE.Vector3,o=this.getLength();for(r.push(e.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(c=o.chunks[t]-o.chunks[t-1],f=Math.ceil(n*c/o.total),u=(t-1)/(this.points.length-1),h=t/(this.points.length-1),i=1;i<f-1;i++)s=u+i*(1/f)*(h-u),l=this.getPoint(s),r.push(e.copy(l).clone());r.push(e.copy(this.points[t]).clone())}this.points=r}};THREE.Triangle=function(n,t,i){this.a=n!==undefined?n:new THREE.Vector3;this.b=t!==undefined?t:new THREE.Vector3;this.c=i!==undefined?i:new THREE.Vector3};THREE.Triangle.normal=function(){var n=new THREE.Vector3;return function(t,i,r,u){var f=u||new THREE.Vector3,e;return(f.subVectors(r,i),n.subVectors(t,i),f.cross(n),e=f.lengthSq(),e>0)?f.multiplyScalar(1/Math.sqrt(e)):f.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var n=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,u,f,e,o){n.subVectors(e,u);t.subVectors(f,u);i.subVectors(r,u);var h=n.dot(n),s=n.dot(t),c=n.dot(i),l=t.dot(t),a=t.dot(i),v=h*l-s*s,y=o||new THREE.Vector3;if(v==0)return y.set(-2,-1,-1);var p=1/v,w=(l*c-s*a)*p,b=(h*a-s*c)*p;return y.set(1-w-b,b,w)}}();THREE.Triangle.containsPoint=function(){var n=new THREE.Vector3;return function(t,i,r,u){var f=THREE.Triangle.barycoordFromPoint(t,i,r,u,n);return f.x>=0&&f.y>=0&&f.x+f.y<=1}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(n,t,i){return this.a.copy(n),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(n,t,i,r){return this.a.copy(n[t]),this.b.copy(n[i]),this.c.copy(n[r]),this},copy:function(n){return this.a.copy(n.a),this.b.copy(n.b),this.c.copy(n.c),this},area:function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(){return n.subVectors(this.c,this.b),t.subVectors(this.a,this.b),n.cross(t).length()*.5}}(),midpoint:function(n){var t=n||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(n){return THREE.Triangle.normal(this.a,this.b,this.c,n)},plane:function(n){var t=n||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(n,t){return THREE.Triangle.barycoordFromPoint(n,this.a,this.b,this.c,t)},containsPoint:function(n){return THREE.Triangle.containsPoint(n,this.a,this.b,this.c)},equals:function(n){return n.a.equals(this.a)&&n.b.equals(this.b)&&n.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(n){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),n};THREE.Clock=function(n){this.autoStart=n!==undefined?n:!0;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=!1};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=self.performance!==undefined&&self.performance.now!==undefined?self.performance.now():Date.now();this.oldTime=this.startTime;this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var n=0,t;return this.autoStart&&!this.running&&this.start(),this.running&&(t=self.performance!==undefined&&self.performance.now!==undefined?self.performance.now():Date.now(),n=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=n),n}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(n){n.addEventListener=THREE.EventDispatcher.prototype.addEventListener;n.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;n.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;n.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(n,t){this._listeners===undefined&&(this._listeners={});var i=this._listeners;i[n]===undefined&&(i[n]=[]);i[n].indexOf(t)===-1&&i[n].push(t)},hasEventListener:function(n,t){if(this._listeners===undefined)return!1;var i=this._listeners;return i[n]!==undefined&&i[n].indexOf(t)!==-1?!0:!1},removeEventListener:function(n,t){var u,i,r;this._listeners!==undefined&&(u=this._listeners,i=u[n],i!==undefined&&(r=i.indexOf(t),r!==-1&&i.splice(r,1)))},dispatchEvent:function(n){var f,i,r,u,t;if(this._listeners!==undefined&&(f=this._listeners,i=f[n.type],i!==undefined)){for(n.target=this,r=[],u=i.length,t=0;t<u;t++)r[t]=i[t];for(t=0;t<u;t++)r[t].call(this,n)}}},function(n){n.Raycaster=function(t,i,r,u){this.ray=new n.Ray(t,i);this.near=r||0;this.far=u||Infinity};var f=new n.Sphere,u=new n.Ray,l=new n.Plane,a=new n.Vector3,e=new n.Vector3,o=new n.Matrix4,h=function(n,t){return n.distance-t.distance},t=new n.Vector3,i=new n.Vector3,r=new n.Vector3,s=function(h,c,l){var v,ut,p,w,b,ft,et,yt,rt,y,ct,st,bt,g,nt,vt,kt,ht,dt,tt,it,d,k,ti,a;if(h instanceof n.Sprite){if(e.setFromMatrixPosition(h.matrixWorld),a=c.ray.distanceToPoint(e),a>h.scale.x)return l;l.push({distance:a,point:h.position,face:null,object:h})}else if(h instanceof n.LOD)e.setFromMatrixPosition(h.matrixWorld),a=c.ray.origin.distanceTo(e),s(h.getObjectForDistance(a),c,l);else if(h instanceof n.Mesh){if((v=h.geometry,v.boundingSphere===null&&v.computeBoundingSphere(),f.copy(v.boundingSphere),f.applyMatrix4(h.matrixWorld),c.ray.isIntersectionSphere(f)===!1)||(o.getInverse(h.matrixWorld),u.copy(c.ray).applyMatrix4(o),v.boundingBox!==null&&u.isIntersectionBox(v.boundingBox)===!1))return l;if(v instanceof n.BufferGeometry){if(nt=h.material,nt===undefined)return l;if(ut=v.attributes,ft=c.precision,ut.index!==undefined){var lt=ut.index.array,y=ut.position.array,rt=v.offsets;for(rt.length===0&&(rt=[{start:0,count:y.length,index:0}]),et=0,yt=rt.length;et<yt;++et){var pt=rt[et].start,ii=rt[et].count,at=rt[et].index;for(k=pt,ct=pt+ii;k<ct;k+=3)(p=at+lt[k],w=at+lt[k+1],b=at+lt[k+2],t.set(y[p*3],y[p*3+1],y[p*3+2]),i.set(y[w*3],y[w*3+1],y[w*3+2]),r.set(y[b*3],y[b*3+1],y[b*3+2]),d=nt.side===n.BackSide?u.intersectTriangle(r,i,t,!0):u.intersectTriangle(t,i,r,nt.side!==n.DoubleSide),d!==null)&&((d.applyMatrix4(h.matrixWorld),a=c.ray.origin.distanceTo(d),a<ft||a<c.near||a>c.far)||l.push({distance:a,point:d,indices:[p,w,b],face:null,faceIndex:null,object:h}))}}else for(rt=v.offsets,y=ut.position.array,k=0,ct=ut.position.array.length;k<ct;k+=3)(p=k,w=k+1,b=k+2,t.set(y[p*3],y[p*3+1],y[p*3+2]),i.set(y[w*3],y[w*3+1],y[w*3+2]),r.set(y[b*3],y[b*3+1],y[b*3+2]),d=nt.side===n.BackSide?u.intersectTriangle(r,i,t,!0):u.intersectTriangle(t,i,r,nt.side!==n.DoubleSide),d!==null)&&((d.applyMatrix4(h.matrixWorld),a=c.ray.origin.distanceTo(d),a<ft||a<c.near||a>c.far)||l.push({distance:a,point:d,indices:[p,w,b],face:null,faceIndex:null,object:h}))}else if(v instanceof n.Geometry){var wt=h.material instanceof n.MeshFaceMaterial,ri=wt===!0?h.material.materials:null,p,w,b,ft=c.precision,ot=v.vertices;for(st=0,bt=v.faces.length;st<bt;st++)if(g=v.faces[st],nt=wt===!0?ri[g.materialIndex]:h.material,nt!==undefined){if(p=ot[g.a],w=ot[g.b],b=ot[g.c],nt.morphTargets===!0){for(vt=v.morphTargets,kt=h.morphTargetInfluences,t.set(0,0,0),i.set(0,0,0),r.set(0,0,0),ht=0,dt=vt.length;ht<dt;ht++)(tt=kt[ht],tt!==0)&&(it=vt[ht].vertices,t.x+=(it[g.a].x-p.x)*tt,t.y+=(it[g.a].y-p.y)*tt,t.z+=(it[g.a].z-p.z)*tt,i.x+=(it[g.b].x-w.x)*tt,i.y+=(it[g.b].y-w.y)*tt,i.z+=(it[g.b].z-w.z)*tt,r.x+=(it[g.c].x-b.x)*tt,r.y+=(it[g.c].y-b.y)*tt,r.z+=(it[g.c].z-b.z)*tt);t.add(p);i.add(w);r.add(b);p=t;w=i;b=r}(d=nt.side===n.BackSide?u.intersectTriangle(b,w,p,!0):u.intersectTriangle(p,w,b,nt.side!==n.DoubleSide),d!==null)&&((d.applyMatrix4(h.matrixWorld),a=c.ray.origin.distanceTo(d),a<ft||a<c.near||a>c.far)||l.push({distance:a,point:d,face:g,faceIndex:st,object:h}))}}}else if(h instanceof n.Line){var ft=c.linePrecision,ui=ft*ft,v=h.geometry;if(v.boundingSphere===null&&v.computeBoundingSphere(),f.copy(v.boundingSphere),f.applyMatrix4(h.matrixWorld),c.ray.isIntersectionSphere(f)===!1)return l;if(o.getInverse(h.matrixWorld),u.copy(c.ray).applyMatrix4(o),v instanceof n.Geometry){var ot=v.vertices,fi=ot.length,gt=new n.Vector3,ni=new n.Vector3,ei=h.type===n.LineStrip?1:2;for(k=0;k<fi-1;k=k+ei)(ti=u.distanceSqToSegment(ot[k],ot[k+1],ni,gt),ti>ui)||(a=u.origin.distanceTo(ni),a<c.near||a>c.far)||l.push({distance:a,point:gt.clone().applyMatrix4(h.matrixWorld),face:null,faceIndex:null,object:h})}}},c=function(n,t,i){for(var u=n.getDescendants(),r=0,f=u.length;r<f;r++)s(u[r],t,i)};n.Raycaster.prototype.precision=.0001;n.Raycaster.prototype.linePrecision=1;n.Raycaster.prototype.set=function(n,t){this.ray.set(n,t)};n.Raycaster.prototype.intersectObject=function(n,t){var i=[];return t===!0&&c(n,this,i),s(n,this,i),i.sort(h),i};n.Raycaster.prototype.intersectObjects=function(n,t){for(var i=[],r=0,u=n.length;r<u;r++)s(n[r],this,i),t===!0&&c(n[r],this,i);return i.sort(h),i}}(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=undefined;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;var n=this;Object.defineProperties(this,{rotation:{enumerable:!0,value:(new THREE.Euler).onChange(function(){n.quaternion.setFromEuler(n.rotation,!1)})},quaternion:{enumerable:!0,value:(new THREE.Quaternion).onChange(function(){n.rotation.setFromQuaternion(n.quaternion,undefined,!1)})},scale:{enumerable:!0,value:new THREE.Vector3(1,1,1)}});this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=!0;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.castShadow=!1;this.receiveShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(n){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=n},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(n){this.matrix.multiplyMatrices(n,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(n,t){this.quaternion.setFromAxisAngle(n,t)},setRotationFromEuler:function(n){this.quaternion.setFromEuler(n,!0)},setRotationFromMatrix:function(n){this.quaternion.setFromRotationMatrix(n)},setRotationFromQuaternion:function(n){this.quaternion.copy(n)},rotateOnAxis:function(){var n=new THREE.Quaternion;return function(t,i){return n.setFromAxisAngle(t,i),this.quaternion.multiply(n),this}}(),rotateX:function(){var n=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(n,t)}}(),rotateY:function(){var n=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(n,t)}}(),rotateZ:function(){var n=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(n,t)}}(),translateOnAxis:function(){var n=new THREE.Vector3;return function(t,i){return n.copy(t),n.applyQuaternion(this.quaternion),this.position.add(n.multiplyScalar(i)),this}}(),translate:function(n,t){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(t,n)},translateX:function(){var n=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(n,t)}}(),translateY:function(){var n=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(n,t)}}(),translateZ:function(){var n=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(n,t)}}(),localToWorld:function(n){return n.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var n=new THREE.Matrix4;return function(t){return t.applyMatrix4(n.getInverse(this.matrixWorld))}}(),lookAt:function(){var n=new THREE.Matrix4;return function(t){n.lookAt(t,this.position,this.up);this.quaternion.setFromRotationMatrix(n)}}(),add:function(n){if(n===this){console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");return}if(n instanceof THREE.Object3D){n.parent!==undefined&&n.parent.remove(n);n.parent=this;n.dispatchEvent({type:"added"});this.children.push(n);for(var t=this;t.parent!==undefined;)t=t.parent;t!==undefined&&t instanceof THREE.Scene&&t.__addObject(n)}},remove:function(n){var i=this.children.indexOf(n),t;if(i!==-1){for(n.parent=undefined,n.dispatchEvent({type:"removed"}),this.children.splice(i,1),t=this;t.parent!==undefined;)t=t.parent;t!==undefined&&t instanceof THREE.Scene&&t.__removeObject(n)}},traverse:function(n){n(this);for(var t=0,i=this.children.length;t<i;t++)this.children[t].traverse(n)},getObjectById:function(n,t){for(var i,r=0,u=this.children.length;r<u;r++)if((i=this.children[r],i.id===n)||t===!0&&(i=i.getObjectById(n,t),i!==undefined))return i;return undefined},getObjectByName:function(n,t){for(var i,r=0,u=this.children.length;r<u;r++)if((i=this.children[r],i.name===n)||t===!0&&(i=i.getObjectByName(n,t),i!==undefined))return i;return undefined},getChildByName:function(n,t){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(n,t)},getDescendants:function(n){n===undefined&&(n=[]);Array.prototype.push.apply(n,this.children);for(var t=0,i=this.children.length;t<i;t++)this.children[t].getDescendants(n);return n},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(n){this.matrixAutoUpdate===!0&&this.updateMatrix();(this.matrixWorldNeedsUpdate===!0||n===!0)&&(this.parent===undefined?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,n=!0);for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(n)},clone:function(n,t){var i,r;if(n===undefined&&(n=new THREE.Object3D),t===undefined&&(t=!0),n.name=this.name,n.up.copy(this.up),n.position.copy(this.position),n.quaternion.copy(this.quaternion),n.scale.copy(this.scale),n.renderDepth=this.renderDepth,n.rotationAutoUpdate=this.rotationAutoUpdate,n.matrix.copy(this.matrix),n.matrixWorld.copy(this.matrixWorld),n.matrixAutoUpdate=this.matrixAutoUpdate,n.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,n.visible=this.visible,n.castShadow=this.castShadow,n.receiveShadow=this.receiveShadow,n.frustumCulled=this.frustumCulled,n.userData=JSON.parse(JSON.stringify(this.userData)),t===!0)for(i=0;i<this.children.length;i++)r=this.children[i],n.add(r.clone());return n}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){function ri(){if(w===et){var n=new THREE.RenderableObject;return ft.push(n),et++,w++,n}return ft[w++]}function ut(){if(a===ot){var n=new THREE.RenderableVertex;return e.push(n),ot++,a++,n}return e[a++]}function bt(){if(b===ht){var n=new THREE.RenderableFace;return st.push(n),ht++,b++,n}return st[b++]}function kt(){if(k===lt){var n=new THREE.RenderableLine;return ct.push(n),lt++,k++,n}return ct[k++]}function ui(){if(d===vt){var n=new THREE.RenderableSprite;return at.push(n),vt++,d++,n}return at[d++]}function dt(n,t){return n.z!==t.z?t.z-n.z:n.id!==t.id?n.id-t.id:0}function fi(n,t){var u=0,f=1,i=n.z+n.w,e=t.z+t.w,r=-n.z+n.w,o=-t.z+t.w;return i>=0&&e>=0&&r>=0&&o>=0?!0:i<0&&e<0||r<0&&o<0?!1:(i<0?u=Math.max(u,i/(i-e)):e<0&&(f=Math.min(f,i/(i-e))),r<0?u=Math.max(u,r/(r-o)):o<0&&(f=Math.min(f,r/(r-o))),f<u?!1:(n.lerp(t,u),t.lerp(n,1-f),!0))}var h,w,ft=[],et=0,nt,a,e=[],ot=0,n,b,st=[],ht=0,t,k,ct=[],lt=0,u,d,at=[],vt=0,r={objects:[],lights:[],elements:[]},v=new THREE.Vector3,y=new THREE.Vector3,p=new THREE.Vector3,tt=new THREE.Vector3,f=new THREE.Vector4,gt=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),ni=new THREE.Box3,g=new Array(3),ei=new Array(4),yt=new THREE.Matrix4,o=new THREE.Matrix4,s,it=new THREE.Matrix4,rt=new THREE.Matrix3,pt=new THREE.Frustum,c=new THREE.Vector4,l=new THREE.Vector4;this.projectVector=function(n,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),o.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),n.applyProjection(o)};this.unprojectVector=function(){var n=new THREE.Matrix4;return function(t,i){return n.getInverse(i.projectionMatrix),o.multiplyMatrices(i.matrixWorld,n),t.applyProjection(o)}}();this.pickingRay=function(n,t){n.z=-1;var i=new THREE.Vector3(n.x,n.y,1);return this.unprojectVector(n,t),this.unprojectVector(i,t),i.sub(n).normalize(),new THREE.Raycaster(n,i)};var wt=function(n){if(n.visible!==!1){n instanceof THREE.Light?r.lights.push(n):(n instanceof THREE.Mesh||n instanceof THREE.Line||n instanceof THREE.Sprite)&&(n.frustumCulled===!1||pt.intersectsObject(n)===!0)&&(h=ri(),h.id=n.id,h.object=n,n.renderDepth!==null?h.z=n.renderDepth:(tt.setFromMatrixPosition(n.matrixWorld),tt.applyProjection(o),h.z=tt.z),r.objects.push(h));for(var t=0,i=n.children.length;t<i;t++)wt(n.children[t])}},ti=function(n,t){w=0;r.objects.length=0;r.lights.length=0;wt(n);t===!0&&r.objects.sort(dt)},ii=function(){var u=[],f=[],i=null,h=null,c=new THREE.Matrix3,y=function(n){i=n;h=i.material;c.getNormalMatrix(i.matrixWorld);u.length=0;f.length=0},l=function(n){var u=n.position,r=n.positionWorld,t=n.positionScreen,i;r.copy(u).applyMatrix4(s);t.copy(r).applyMatrix4(o);i=1/t.w;t.x*=i;t.y*=i;t.z*=i;n.visible=t.x>=-1&&t.x<=1&&t.y>=-1&&t.y<=1&&t.z>=-1&&t.z<=1},p=function(n,t,i){nt=ut();nt.position.set(n,t,i);l(nt)},w=function(n,t,i){u.push(n,t,i)},b=function(n,t){f.push(n,t)},a=function(n,t,i){return n.visible===!0||t.visible===!0||i.visible===!0?!0:(g[0]=n.positionScreen,g[1]=t.positionScreen,g[2]=i.positionScreen,gt.isIntersectionBox(ni.setFromPoints(g)))},v=function(n,t,i){return(i.positionScreen.x-n.positionScreen.x)*(t.positionScreen.y-n.positionScreen.y)-(i.positionScreen.y-n.positionScreen.y)*(t.positionScreen.x-n.positionScreen.x)<0},k=function(n,u){var f=e[n],o=e[u];t=kt();t.id=i.id;t.v1.copy(f);t.v2.copy(o);t.z=(f.positionScreen.z+o.positionScreen.z)/2;t.material=i.material;r.elements.push(t)},d=function(t,o,s){var y=e[t],p=e[o],w=e[s],l,b,k,d,g;if(a(y,p,w)!==!1&&(h.side===THREE.DoubleSide||v(y,p,w)===!0)){for(n=bt(),n.id=i.id,n.v1.copy(y),n.v2.copy(p),n.v3.copy(w),n.z=(y.positionScreen.z+p.positionScreen.z+w.positionScreen.z)/3,l=0;l<3;l++)b=arguments[l]*3,k=n.vertexNormalsModel[l],k.set(u[b],u[b+1],u[b+2]),k.applyMatrix3(c).normalize(),d=arguments[l]*2,g=n.uvs[l],g.set(f[d],f[d+1]);n.vertexNormalsLength=3;n.material=i.material;r.elements.push(n)}};return{setObject:y,projectVertex:l,checkTriangleVisibility:a,checkBackfaceCulling:v,pushVertex:p,pushNormal:w,pushUv:b,pushLine:k,pushTriangle:d}},i=new ii;this.projectScene=function(h,w,g,nt){var ft,ht,ii,rr,ot,wi,hr,ur,cr,lr,bi,si,ki,ri,hi,di,nr,ci,ar,li,ai,yr,wt,gt,vi,yi,pr,tr,sr,pi,st,ct,lt,tt,et,wr,vt,gi,ir;for(b=0,k=0,d=0,r.elements.length=0,h.autoUpdate===!0&&h.updateMatrixWorld(),w.parent===undefined&&w.updateMatrixWorld(),yt.copy(w.matrixWorldInverse.getInverse(w.matrixWorld)),o.multiplyMatrices(w.projectionMatrix,yt),pt.setFromMatrix(o),ti(h,g),ri=0,lr=r.objects.length;ri<lr;ri++)if(ft=r.objects[ri].object,ht=ft.geometry,i.setObject(ft),s=ft.matrixWorld,a=0,ft instanceof THREE.Mesh){if(ht instanceof THREE.BufferGeometry){if(st=ht.attributes,bi=ht.offsets,st.position===undefined)continue;for(ct=st.position.array,tt=0,et=ct.length;tt<et;tt+=3)i.pushVertex(ct[tt],ct[tt+1],ct[tt+2]);if(st.normal!==undefined)for(si=st.normal.array,tt=0,et=si.length;tt<et;tt+=3)i.pushNormal(si[tt],si[tt+1],si[tt+2]);if(st.uv!==undefined)for(ki=st.uv.array,tt=0,et=ki.length;tt<et;tt+=2)i.pushUv(ki[tt],ki[tt+1]);if(st.index!==undefined)if(lt=st.index.array,bi.length>0)for(ri=0;ri<bi.length;ri++)for(hi=bi[ri],di=hi.index,tt=hi.start,et=hi.start+hi.count;tt<et;tt+=3)i.pushTriangle(lt[tt]+di,lt[tt+1]+di,lt[tt+2]+di);else for(tt=0,et=lt.length;tt<et;tt+=3)i.pushTriangle(lt[tt],lt[tt+1],lt[tt+2]);else for(tt=0,et=ct.length/3;tt<et;tt+=3)i.pushTriangle(tt,tt+1,tt+2)}else if(ht instanceof THREE.Geometry){for(ii=ht.vertices,rr=ht.faces,hr=ht.faceVertexUvs[0],rt.getNormalMatrix(s),ur=ft.material instanceof THREE.MeshFaceMaterial,cr=ur===!0?ft.material:null,vt=0,gi=ii.length;vt<gi;vt++)nr=ii[vt],i.pushVertex(nr.x,nr.y,nr.z);for(ci=0,ar=rr.length;ci<ar;ci++)if(ot=rr[ci],li=ur===!0?cr.materials[ot.materialIndex]:ft.material,li!==undefined){var ei=li.side,at=e[ot.a],ni=e[ot.b],oi=e[ot.c];if(li.morphTargets===!0){var vr=ht.morphTargets,br=ft.morphTargetInfluences,fr=at.position,er=ni.position,or=oi.position;for(v.set(0,0,0),y.set(0,0,0),p.set(0,0,0),ai=0,yr=vr.length;ai<yr;ai++)(wt=br[ai],wt!==0)&&(gt=vr[ai].vertices,v.x+=(gt[ot.a].x-fr.x)*wt,v.y+=(gt[ot.a].y-fr.y)*wt,v.z+=(gt[ot.a].z-fr.z)*wt,y.x+=(gt[ot.b].x-er.x)*wt,y.y+=(gt[ot.b].y-er.y)*wt,y.z+=(gt[ot.b].z-er.z)*wt,p.x+=(gt[ot.c].x-or.x)*wt,p.y+=(gt[ot.c].y-or.y)*wt,p.z+=(gt[ot.c].z-or.z)*wt);at.position.add(v);ni.position.add(y);oi.position.add(p);i.projectVertex(at);i.projectVertex(ni);i.projectVertex(oi)}if(i.checkTriangleVisibility(at,ni,oi)!==!1){if(vi=i.checkBackfaceCulling(at,ni,oi),ei!==THREE.DoubleSide){if(ei===THREE.FrontSide&&vi===!1)continue;if(ei===THREE.BackSide&&vi===!0)continue}for(n=bt(),n.id=ft.id,n.v1.copy(at),n.v2.copy(ni),n.v3.copy(oi),n.normalModel.copy(ot.normal),vi===!1&&(ei===THREE.BackSide||ei===THREE.DoubleSide)&&n.normalModel.negate(),n.normalModel.applyMatrix3(rt).normalize(),wi=ot.vertexNormals,yi=0,pr=Math.min(wi.length,3);yi<pr;yi++)tr=n.vertexNormalsModel[yi],tr.copy(wi[yi]),vi===!1&&(ei===THREE.BackSide||ei===THREE.DoubleSide)&&tr.negate(),tr.applyMatrix3(rt).normalize();if(n.vertexNormalsLength=wi.length,sr=hr[ci],sr!==undefined)for(pi=0;pi<3;pi++)n.uvs[pi].copy(sr[pi]);n.color=ot.color;n.material=li;n.z=(at.positionScreen.z+ni.positionScreen.z+oi.positionScreen.z)/3;r.elements.push(n)}}}}else if(ft instanceof THREE.Line){if(ht instanceof THREE.BufferGeometry){if(st=ht.attributes,st.position!==undefined){for(ct=st.position.array,tt=0,et=ct.length;tt<et;tt+=3)i.pushVertex(ct[tt],ct[tt+1],ct[tt+2]);if(st.index!==undefined)for(lt=st.index.array,tt=0,et=lt.length;tt<et;tt+=2)i.pushLine(lt[tt],lt[tt+1]);else for(tt=0,et=ct.length/3-1;tt<et;tt++)i.pushLine(tt,tt+1)}}else if(ht instanceof THREE.Geometry){if(it.multiplyMatrices(o,s),ii=ft.geometry.vertices,ii.length===0)continue;for(at=ut(),at.positionScreen.copy(ii[0]).applyMatrix4(it),wr=ft.type===THREE.LinePieces?2:1,vt=1,gi=ii.length;vt<gi;vt++)(at=ut(),at.positionScreen.copy(ii[vt]).applyMatrix4(it),(vt+1)%wr>0)||(ni=e[a-2],c.copy(at.positionScreen),l.copy(ni.positionScreen),fi(c,l)===!0&&(c.multiplyScalar(1/c.w),l.multiplyScalar(1/l.w),t=kt(),t.id=ft.id,t.v1.positionScreen.copy(c),t.v2.positionScreen.copy(l),t.z=Math.max(c.z,l.z),t.material=ft.material,ft.material.vertexColors===THREE.VertexColors&&(t.vertexColors[0].copy(ft.geometry.colors[vt]),t.vertexColors[1].copy(ft.geometry.colors[vt-1])),r.elements.push(t)))}}else ft instanceof THREE.Sprite&&(f.set(s.elements[12],s.elements[13],s.elements[14],1),f.applyMatrix4(o),ir=1/f.w,f.z*=ir,f.z>=-1&&f.z<=1&&(u=ui(),u.id=ft.id,u.x=f.x*ir,u.y=f.y*ir,u.z=f.z,u.object=ft,u.rotation=ft.rotation,u.scale.x=ft.scale.x*Math.abs(u.x-(f.x+w.projectionMatrix.elements[0])/(f.w+w.projectionMatrix.elements[12])),u.scale.y=ft.scale.y*Math.abs(u.y-(f.y+w.projectionMatrix.elements[5])/(f.w+w.projectionMatrix.elements[13])),u.material=ft.material,r.elements.push(u)));return nt===!0&&r.elements.sort(dt),r}};THREE.Face3=function(n,t,i,r,u,f){this.a=n;this.b=t;this.c=i;this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3;this.vertexNormals=r instanceof Array?r:[];this.color=u instanceof THREE.Color?u:new THREE.Color;this.vertexColors=u instanceof Array?u:[];this.vertexTangents=[];this.materialIndex=f!==undefined?f:0};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var t=new THREE.Face3(this.a,this.b,this.c),n,i;for(t.normal.copy(this.normal),t.color.copy(this.color),t.materialIndex=this.materialIndex,n=0,i=this.vertexNormals.length;n<i;n++)t.vertexNormals[n]=this.vertexNormals[n].clone();for(n=0,i=this.vertexColors.length;n<i;n++)t.vertexColors[n]=this.vertexColors[n].clone();for(n=0,i=this.vertexTangents.length;n<i;n++)t.vertexTangents[n]=this.vertexTangents[n].clone();return t}};THREE.Face4=function(n,t,i,r,u,f,e){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(n,t,i,u,f,e)};THREE.BufferAttribute=function(){};THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(n){this.array.set(n)},setX:function(n,t){this.array[n*this.itemSize]=t},setY:function(n,t){this.array[n*this.itemSize+1]=t},setZ:function(n,t){this.array[n*this.itemSize+2]=t},setXY:function(n,t,i){n*=this.itemSize;this.array[n]=t;this.array[n+1]=i},setXYZ:function(n,t,i,r){n*=this.itemSize;this.array[n]=t;this.array[n+1]=i;this.array[n+2]=r},setXYZW:function(n,t,i,r,u){n*=this.itemSize;this.array[n]=t;this.array[n+1]=i;this.array[n+2]=r;this.array[n+3]=u}};THREE.Int8Attribute=function(n,t){this.array=new Int8Array(n*t);this.itemSize=t};THREE.Int8Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint8Attribute=function(n,t){this.array=new Uint8Array(n*t);this.itemSize=t};THREE.Uint8Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint8ClampedAttribute=function(n,t){this.array=new Uint8ClampedArray(n*t);this.itemSize=t};THREE.Uint8ClampedAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Int16Attribute=function(n,t){this.array=new Int16Array(n*t);this.itemSize=t};THREE.Int16Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint16Attribute=function(n,t){this.array=new Uint16Array(n*t);this.itemSize=t};THREE.Uint16Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Int32Attribute=function(n,t){this.array=new Int32Array(n*t);this.itemSize=t};THREE.Int32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Uint32Attribute=function(n,t){this.array=new Uint32Array(n*t);this.itemSize=t};THREE.Uint32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Float32Attribute=function(n,t){this.array=new Float32Array(n*t);this.itemSize=t};THREE.Float32Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.Float64Attribute=function(n,t){this.array=new Float64Array(n*t);this.itemSize=t};THREE.Float64Attribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.drawcalls=[];this.offsets=this.drawcalls;this.boundingBox=null;this.boundingSphere=null};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(n,t){if(t instanceof THREE.BufferAttribute==!1){console.warn("DEPRECATED: BufferGeometry's addAttribute() now expects ( name, attribute ).");this.attributes[n]={array:arguments[1],itemSize:arguments[2]};return}this.attributes[n]=t},getAttribute:function(n){return this.attributes[n]},addDrawCall:function(n,t,i){this.drawcalls.push({start:n,count:t,index:i!==undefined?i:0})},applyMatrix:function(n){var i=this.attributes.position,t,r;i!==undefined&&(n.applyToVector3Array(i.array),i.needsUpdate=!0);t=this.attributes.normal;t!==undefined&&(r=(new THREE.Matrix3).getNormalMatrix(n),r.applyToVector3Array(t.array),t.needsUpdate=!0)},computeBoundingBox:function(){var t,n,i,e;if(this.boundingBox===null&&(this.boundingBox=new THREE.Box3),t=this.attributes.position.array,t)for(n=this.boundingBox,t.length>=3&&(n.min.x=n.max.x=t[0],n.min.y=n.max.y=t[1],n.min.z=n.max.z=t[2]),i=3,e=t.length;i<e;i+=3){var r=t[i],u=t[i+1],f=t[i+2];r<n.min.x?n.min.x=r:r>n.max.x&&(n.max.x=r);u<n.min.y?n.min.y=u:u>n.max.y&&(n.max.y=u);f<n.min.z?n.min.z=f:f>n.max.z&&(n.max.z=f)}(t===undefined||t.length===0)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var t=new THREE.Box3,n=new THREE.Vector3;return function(){var r,e,f,i,u;if(this.boundingSphere===null&&(this.boundingSphere=new THREE.Sphere),r=this.attributes.position.array,r){for(t.makeEmpty(),e=this.boundingSphere.center,i=0,u=r.length;i<u;i+=3)n.set(r[i],r[i+1],r[i+2]),t.addPoint(n);for(t.center(e),f=0,i=0,u=r.length;i<u;i+=3)n.set(r[i],r[i+1],r[i+2]),f=Math.max(f,e.distanceToSquared(n));this.boundingSphere.radius=Math.sqrt(f)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var n,c,l,d,g,v,y;if(this.attributes.position){if(g=this.attributes.position.array.length,this.attributes.normal===undefined)this.attributes.normal={itemSize:3,array:new Float32Array(g)};else for(n=0,c=this.attributes.normal.array.length;n<c;n++)this.attributes.normal.array[n]=0;var i=this.attributes.position.array,r=this.attributes.normal.array,o,s,h,u,f,e,p=new THREE.Vector3,a=new THREE.Vector3,w=new THREE.Vector3,t=new THREE.Vector3,b=new THREE.Vector3;if(this.attributes.index)for(v=this.attributes.index.array,y=this.offsets.length>0?this.offsets:[{start:0,count:v.length,index:0}],l=0,d=y.length;l<d;++l){var nt=y[l].start,tt=y[l].count,k=y[l].index;for(n=nt,c=nt+tt;n<c;n+=3)o=k+v[n],s=k+v[n+1],h=k+v[n+2],u=i[o*3],f=i[o*3+1],e=i[o*3+2],p.set(u,f,e),u=i[s*3],f=i[s*3+1],e=i[s*3+2],a.set(u,f,e),u=i[h*3],f=i[h*3+1],e=i[h*3+2],w.set(u,f,e),t.subVectors(w,a),b.subVectors(p,a),t.cross(b),r[o*3]+=t.x,r[o*3+1]+=t.y,r[o*3+2]+=t.z,r[s*3]+=t.x,r[s*3+1]+=t.y,r[s*3+2]+=t.z,r[h*3]+=t.x,r[h*3+1]+=t.y,r[h*3+2]+=t.z}else for(n=0,c=i.length;n<c;n+=9)u=i[n],f=i[n+1],e=i[n+2],p.set(u,f,e),u=i[n+3],f=i[n+4],e=i[n+5],a.set(u,f,e),u=i[n+6],f=i[n+7],e=i[n+8],w.set(u,f,e),t.subVectors(w,a),b.subVectors(p,a),t.cross(b),r[n]=t.x,r[n+1]=t.y,r[n+2]=t.z,r[n+3]=t.x,r[n+4]=t.y,r[n+5]=t.z,r[n+6]=t.x,r[n+7]=t.y,r[n+8]=t.z;this.normalizeNormals();this.normalsNeedUpdate=!0}},computeTangents:function(){function pi(n,t,r){ot=i[n*3];st=i[n*3+1];ht=i[n*3+2];ni=i[t*3];ti=i[t*3+1];ii=i[t*3+2];ri=i[r*3];ui=i[r*3+1];fi=i[r*3+2];ct=e[n*2];lt=e[n*2+1];ei=e[t*2];oi=e[t*2+1];si=e[r*2];hi=e[r*2+1];at=ni-ot;vt=ri-ot;yt=ti-st;pt=ui-st;wt=ii-ht;bt=fi-ht;a=ei-ct;v=si-ct;y=oi-lt;p=hi-lt;u=1/(a*p-v*y);w.set((p*at-y*vt)*u,(p*yt-y*pt)*u,(p*wt-y*bt)*u);b.set((a*vt-v*at)*u,(a*pt-v*yt)*u,(a*bt-v*wt)*u);h[n].add(w);h[t].add(w);h[r].add(w);c[n].add(b);c[t].add(b);c[r].add(b)}function kt(n){s.x=et[n*3];s.y=et[n*3+1];s.z=et[n*3+2];ai.copy(s);ft=h[n];k.copy(ft);k.sub(s.multiplyScalar(s.dot(ft))).normalize();li.crossVectors(ai,ft);yi=li.dot(c[n]);vi=yi<0?-1:1;d[n*4]=k.x;d[n*4+1]=k.y;d[n*4+2]=k.z;d[n*4+3]=vi}var gt,l,ot,st,ht,ni,ti,ii,ri,ui,fi,ct,lt,ei,oi,si,hi,at,vt,yt,pt,wt,bt,a,v,y,p,u,w,b,n,g,t,nt,tt,it,rt,r;if(this.attributes.index===undefined||this.attributes.position===undefined||this.attributes.normal===undefined||this.attributes.uv===undefined){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");return}var f=this.attributes.index.array,i=this.attributes.position.array,et=this.attributes.normal.array,e=this.attributes.uv.array,dt=i.length/3;this.attributes.tangent===undefined&&(gt=4*dt,this.attributes.tangent={itemSize:4,array:new Float32Array(gt)});var d=this.attributes.tangent.array,h=[],c=[];for(l=0;l<dt;l++)h[l]=new THREE.Vector3,c[l]=new THREE.Vector3;for(w=new THREE.Vector3,b=new THREE.Vector3,r=this.offsets,t=0,nt=r.length;t<nt;++t){var ut=r[t].start,ci=r[t].count,o=r[t].index;for(n=ut,g=ut+ci;n<g;n+=3)tt=o+f[n],it=o+f[n+1],rt=o+f[n+2],pi(tt,it,rt)}var k=new THREE.Vector3,li=new THREE.Vector3,s=new THREE.Vector3,ai=new THREE.Vector3,vi,ft,yi;for(t=0,nt=r.length;t<nt;++t){var ut=r[t].start,ci=r[t].count,o=r[t].index;for(n=ut,g=ut+ci;n<g;n+=3)tt=o+f[n],it=o+f[n+1],rt=o+f[n+2],kt(tt),kt(it),kt(rt)}},computeOffsets:function(n){var b=n,s,a,i,g,w,u,r,f;n===undefined&&(b=65535);var it=Date.now(),v=this.attributes.index.array,h=this.attributes.position.array,rt=h.length/3,nt=v.length/3,k=new Uint16Array(v.length),d=0,c=0,l=[{start:0,count:0,index:0}],e=l[0],tt=0,y=0,t=new Int32Array(6),o=new Int32Array(h.length),p=new Int32Array(h.length);for(s=0;s<h.length;s++)o[s]=-1,p[s]=-1;for(a=0;a<nt;a++){for(y=0,i=0;i<3;i++)r=v[a*3+i],o[r]==-1?(t[i*2]=r,t[i*2+1]=-1,y++):o[r]<e.index?(t[i*2]=r,t[i*2+1]=-1,tt++):(t[i*2]=r,t[i*2+1]=o[r]);if(g=c+y,g>e.index+b)for(w={start:d,count:0,index:c},l.push(w),e=w,u=0;u<6;u+=2)f=t[u+1],f>-1&&f<e.index&&(t[u+1]=-1);for(u=0;u<6;u+=2)r=t[u],f=t[u+1],f===-1&&(f=c++),o[r]=f,p[f]=r,k[d++]=f-e.index,e.count++}return this.reorderBuffers(k,p,c),this.offsets=l,l},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var t=this.attributes.normal.array,r,u,f,i,n=0,e=t.length;n<e;n+=3)r=t[n],u=t[n+1],f=t[n+2],i=1/Math.sqrt(r*r+u*u+f*f),t[n]*=i,t[n+1]*=i,t[n+2]*=i},reorderBuffers:function(n,t,i){var o={},c=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],l,e,a,s,u,v,f;for(var r in this.attributes)if(r!="index")for(l=this.attributes[r].array,e=0,a=c.length;e<a;e++)if(s=c[e],l instanceof s){o[r]=new s(this.attributes[r].itemSize*i);break}for(u=0;u<i;u++){v=t[u];for(r in this.attributes)if(r!="index"){var y=this.attributes[r].array,h=this.attributes[r].itemSize,p=o[r];for(f=0;f<h;f++)p[u*h+f]=y[v*h+f]}}this.attributes.index.array=n;for(r in this.attributes)r!="index"&&(this.attributes[r].array=o[r],this.attributes[r].numItems=this.attributes[r].itemSize*i)},clone:function(){var r=new THREE.BufferGeometry,e=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],u,f,n,t,i;for(u in this.attributes){var o=this.attributes[u],s=o.array,h={itemSize:o.itemSize,array:null};for(n=0,t=e.length;n<t;n++)if(f=e[n],s instanceof f){h.array=new f(s);break}r.attributes[u]=h}for(n=0,t=this.offsets.length;n<t;n++)i=this.offsets[n],r.offsets.push({start:i.start,index:i.index,count:i.count});return r},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.hasTangents=!1;this.dynamic=!0;this.verticesNeedUpdate=!1;this.elementsNeedUpdate=!1;this.uvsNeedUpdate=!1;this.normalsNeedUpdate=!1;this.tangentsNeedUpdate=!1;this.colorsNeedUpdate=!1;this.lineDistancesNeedUpdate=!1;this.buffersNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(n){for(var e,i,r,o,f=(new THREE.Matrix3).getNormalMatrix(n),t=0,u=this.vertices.length;t<u;t++)e=this.vertices[t],e.applyMatrix4(n);for(t=0,u=this.faces.length;t<u;t++)for(i=this.faces[t],i.normal.applyMatrix3(f).normalize(),r=0,o=i.vertexNormals.length;r<o;r++)i.vertexNormals[r].applyMatrix3(f).normalize();this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeFaceNormals:function(){for(var n=new THREE.Vector3,r=new THREE.Vector3,i=0,f=this.faces.length;i<f;i++){var t=this.faces[i],e=this.vertices[t.a],u=this.vertices[t.b],o=this.vertices[t.c];n.subVectors(o,u);r.subVectors(e,u);n.cross(r);n.normalize();t.normal.copy(n)}},computeVertexNormals:function(n){var u,o,i,f,t,r;for(r=new Array(this.vertices.length),u=0,o=this.vertices.length;u<o;u++)r[u]=new THREE.Vector3;if(n){var h,s,c,e=new THREE.Vector3,l=new THREE.Vector3,a=new THREE.Vector3,v=new THREE.Vector3,y=new THREE.Vector3;for(i=0,f=this.faces.length;i<f;i++)t=this.faces[i],h=this.vertices[t.a],s=this.vertices[t.b],c=this.vertices[t.c],e.subVectors(c,s),l.subVectors(h,s),e.cross(l),r[t.a].add(e),r[t.b].add(e),r[t.c].add(e)}else for(i=0,f=this.faces.length;i<f;i++)t=this.faces[i],r[t.a].add(t.normal),r[t.b].add(t.normal),r[t.c].add(t.normal);for(u=0,o=this.vertices.length;u<o;u++)r[u].normalize();for(i=0,f=this.faces.length;i<f;i++)t=this.faces[i],t.vertexNormals[0]=r[t.a].clone(),t.vertexNormals[1]=r[t.b].clone(),t.vertexNormals[2]=r[t.c].clone()},computeMorphNormals:function(){for(var t,e,n,f,h,c,s,o,u,i=0,r=this.faces.length;i<r;i++)for(n=this.faces[i],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;t<e;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();for(f=new THREE.Geometry,f.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t])for(this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[],h=this.morphNormals[t].faceNormals,c=this.morphNormals[t].vertexNormals,i=0,r=this.faces.length;i<r;i++)o=new THREE.Vector3,u={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},h.push(o),c.push(u);for(s=this.morphNormals[t],f.vertices=this.morphTargets[t].vertices,f.computeFaceNormals(),f.computeVertexNormals(),i=0,r=this.faces.length;i<r;i++)n=this.faces[i],o=s.faceNormals[i],u=s.vertexNormals[i],o.copy(n.normal),u.a.copy(n.vertexNormals[0]),u.b.copy(n.vertexNormals[1]),u.c.copy(n.vertexNormals[2])}for(i=0,r=this.faces.length;i<r;i++)n=this.faces[i],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){function pt(n,t,i,f,v,y,k){r=n.vertices[t];w=n.vertices[i];b=n.vertices[f];e=p[v];tt=p[y];it=p[k];rt=w.x-r.x;ut=b.x-r.x;ft=w.y-r.y;et=b.y-r.y;ot=w.z-r.z;st=b.z-r.z;o=tt.x-e.x;s=it.x-e.x;h=tt.y-e.y;c=it.y-e.y;u=1/(o*c-s*h);d.set((c*rt-h*ut)*u,(c*ft-h*et)*u,(c*ot-h*st)*u);g.set((o*ut-s*rt)*u,(o*et-s*ft)*u,(o*st-s*ot)*u);l[t].add(d);l[i].add(d);l[f].add(d);a[t].add(g);a[i].add(g);a[f].add(g)}for(var t,y,i,nt,n,p,r,w,b,e,tt,it,rt,ut,ft,et,ot,st,o,s,h,c,u,k,lt,l=[],a=[],d=new THREE.Vector3,g=new THREE.Vector3,v=new THREE.Vector3,at=new THREE.Vector3,ht=new THREE.Vector3,vt,yt,f=0,ct=this.vertices.length;f<ct;f++)l[f]=new THREE.Vector3,a[f]=new THREE.Vector3;for(t=0,y=this.faces.length;t<y;t++)n=this.faces[t],p=this.faceVertexUvs[0][t],pt(this,n.a,n.b,n.c,0,1,2);for(yt=["a","b","c","d"],t=0,y=this.faces.length;t<y;t++)for(n=this.faces[t],i=0;i<Math.min(n.vertexNormals.length,3);i++)ht.copy(n.vertexNormals[i]),nt=n[yt[i]],k=l[nt],v.copy(k),v.sub(ht.multiplyScalar(ht.dot(k))).normalize(),at.crossVectors(n.vertexNormals[i],k),lt=at.dot(a[nt]),vt=lt<0?-1:1,n.vertexTangents[i]=new THREE.Vector4(v.x,v.y,v.z,vt);this.hasTangents=!0},computeLineDistances:function(){for(var i=0,t=this.vertices,n=0,r=t.length;n<r;n++)n>0&&(i+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=i},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(n,t,i){var u,o,k,a,c,y,r,s;if(n instanceof THREE.Geometry==!1){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",n);return}var h,l=this.vertices.length,ut=this.faceVertexUvs[0].length,tt=this.vertices,p=n.vertices,it=this.faces,w=n.faces,rt=this.faceVertexUvs[0],b=n.faceVertexUvs[0];for(i===undefined&&(i=0),t!==undefined&&(h=(new THREE.Matrix3).getNormalMatrix(t)),u=0,o=p.length;u<o;u++)k=p[u],a=k.clone(),t!==undefined&&a.applyMatrix4(t),tt.push(a);for(u=0,o=w.length;u<o;u++){var f=w[u],e,v,d,g=f.vertexNormals,nt=f.vertexColors;for(e=new THREE.Face3(f.a+l,f.b+l,f.c+l),e.normal.copy(f.normal),h!==undefined&&e.normal.applyMatrix3(h).normalize(),r=0,s=g.length;r<s;r++)v=g[r].clone(),h!==undefined&&v.applyMatrix3(h).normalize(),e.vertexNormals.push(v);for(e.color.copy(f.color),r=0,s=nt.length;r<s;r++)d=nt[r],e.vertexColors.push(d.clone());e.materialIndex=f.materialIndex+i;it.push(e)}for(u=0,o=b.length;u<o;u++)if(c=b[u],y=[],c!==undefined){for(r=0,s=c.length;r<s;r++)y.push(new THREE.Vector2(c[r].x,c[r].y));rt.push(y)}},mergeVertices:function(){for(var c={},u=[],i=[],f,e,l=Math.pow(10,4),t,a,s,y,h,p,r,v,w,n=0,o=this.vertices.length;n<o;n++)f=this.vertices[n],e=Math.round(f.x*l)+"_"+Math.round(f.y*l)+"_"+Math.round(f.z*l),c[e]===undefined?(c[e]=n,u.push(this.vertices[n]),i[n]=u.length-1):i[n]=i[c[e]];for(h=[],n=0,o=this.faces.length;n<o;n++)for(t=this.faces[n],t.a=i[t.a],t.b=i[t.b],t.c=i[t.c],a=[t.a,t.b,t.c],p=-1,r=0;r<3;r++)if(a[r]==a[(r+1)%3]){p=r;h.push(n);break}for(n=h.length-1;n>=0;n--)for(v=h[n],this.faces.splice(v,1),s=0,y=this.faceVertexUvs.length;s<y;s++)this.faceVertexUvs[s].splice(v,1);return w=this.vertices.length-u.length,this.vertices=u,w},makeGroups:function(){var n=0;return function(t,i){var e,s,h,r,u,f={},c=this.morphTargets.length,l=this.morphNormals.length,o;for(this.geometryGroups={},e=0,s=this.faces.length;e<s;e++)h=this.faces[e],r=t?h.materialIndex:0,r in f||(f[r]={hash:r,counter:0}),u=f[r].hash+"_"+f[r].counter,u in this.geometryGroups||(this.geometryGroups[u]={faces3:[],materialIndex:r,vertices:0,numMorphTargets:c,numMorphNormals:l}),this.geometryGroups[u].vertices+3>i&&(f[r].counter+=1,u=f[r].hash+"_"+f[r].counter,u in this.geometryGroups||(this.geometryGroups[u]={faces3:[],materialIndex:r,vertices:0,numMorphTargets:c,numMorphNormals:l})),this.geometryGroups[u].faces3.push(e),this.geometryGroups[u].vertices+=3;this.geometryGroupsList=[];for(o in this.geometryGroups)this.geometryGroups[o].id=n++,this.geometryGroupsList.push(this.geometryGroups[o])}}(),clone:function(){for(var f,e,u,o,i,h,r=new THREE.Geometry,s=this.vertices,n=0,t=s.length;n<t;n++)r.vertices.push(s[n].clone());for(f=this.faces,n=0,t=f.length;n<t;n++)r.faces.push(f[n].clone());for(e=this.faceVertexUvs[0],n=0,t=e.length;n<t;n++){for(u=e[n],o=[],i=0,h=u.length;i<h;i++)o.push(new THREE.Vector2(u[i].x,u[i].y));r.faceVertexUvs[0].push(o)}return r},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var n=new THREE.Matrix4;return function(t){n.lookAt(this.position,t,this.up);this.quaternion.setFromRotationMatrix(n)}}();THREE.Camera.prototype.clone=function(n){return n===undefined&&(n=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,n),n.matrixWorldInverse.copy(this.matrixWorldInverse),n.projectionMatrix.copy(this.projectionMatrix),n};THREE.OrthographicCamera=function(n,t,i,r,u,f){THREE.Camera.call(this);this.left=n;this.right=t;this.top=i;this.bottom=r;this.near=u!==undefined?u:.1;this.far=f!==undefined?f:2e3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var n=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,n),n.left=this.left,n.right=this.right,n.top=this.top,n.bottom=this.bottom,n.near=this.near,n.far=this.far,n};THREE.PerspectiveCamera=function(n,t,i,r){THREE.Camera.call(this);this.fov=n!==undefined?n:50;this.aspect=t!==undefined?t:1;this.near=i!==undefined?i:.1;this.far=r!==undefined?r:2e3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(n,t){t===undefined&&(t=24);this.fov=2*THREE.Math.radToDeg(Math.atan(t/(n*2)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(n,t,i,r,u,f){this.fullWidth=n;this.fullHeight=t;this.x=i;this.y=r;this.width=u;this.height=f;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var i=this.fullWidth/this.fullHeight,n=Math.tan(THREE.Math.degToRad(this.fov*.5))*this.near,r=-n,t=i*r,e=i*n,u=Math.abs(e-t),f=Math.abs(n-r);this.projectionMatrix.makeFrustum(t+this.x*u/this.fullWidth,t+(this.x+this.width)*u/this.fullWidth,n-(this.y+this.height)*f/this.fullHeight,n-this.y*f/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.clone=function(){var n=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,n),n.fov=this.fov,n.aspect=this.aspect,n.near=this.near,n.far=this.far,n};THREE.Light=function(n){THREE.Object3D.call(this);this.color=new THREE.Color(n)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(n){return n===undefined&&(n=new THREE.Light),THREE.Object3D.prototype.clone.call(this,n),n.color.copy(this.color),n};THREE.AmbientLight=function(n){THREE.Light.call(this,n)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var n=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,n),n};THREE.AreaLight=function(n,t){THREE.Light.call(this,n);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=t!==undefined?t:1;this.width=1;this.height=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(n,t){THREE.Light.call(this,n);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=t!==undefined?t:1;this.castShadow=!1;this.onlyShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraLeft=-500;this.shadowCameraRight=500;this.shadowCameraTop=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var n=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,n),n.target=this.target.clone(),n.intensity=this.intensity,n.castShadow=this.castShadow,n.onlyShadow=this.onlyShadow,n.shadowCameraNear=this.shadowCameraNear,n.shadowCameraFar=this.shadowCameraFar,n.shadowCameraLeft=this.shadowCameraLeft,n.shadowCameraRight=this.shadowCameraRight,n.shadowCameraTop=this.shadowCameraTop,n.shadowCameraBottom=this.shadowCameraBottom,n.shadowCameraVisible=this.shadowCameraVisible,n.shadowBias=this.shadowBias,n.shadowDarkness=this.shadowDarkness,n.shadowMapWidth=this.shadowMapWidth,n.shadowMapHeight=this.shadowMapHeight,n.shadowCascade=this.shadowCascade,n.shadowCascadeOffset.copy(this.shadowCascadeOffset),n.shadowCascadeCount=this.shadowCascadeCount,n.shadowCascadeBias=this.shadowCascadeBias.slice(0),n.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),n.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),n.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),n.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),n};THREE.HemisphereLight=function(n,t,i){THREE.Light.call(this,n);this.position.set(0,100,0);this.groundColor=new THREE.Color(t);this.intensity=i!==undefined?i:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var n=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,n),n.groundColor.copy(this.groundColor),n.intensity=this.intensity,n};THREE.PointLight=function(n,t,i){THREE.Light.call(this,n);this.intensity=t!==undefined?t:1;this.distance=i!==undefined?i:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var n=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,n),n.intensity=this.intensity,n.distance=this.distance,n};THREE.SpotLight=function(n,t,i,r,u){THREE.Light.call(this,n);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=t!==undefined?t:1;this.distance=i!==undefined?i:0;this.angle=r!==undefined?r:Math.PI/3;this.exponent=u!==undefined?u:10;this.castShadow=!1;this.onlyShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var n=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,n),n.target=this.target.clone(),n.intensity=this.intensity,n.distance=this.distance,n.angle=this.angle,n.exponent=this.exponent,n.castShadow=this.castShadow,n.onlyShadow=this.onlyShadow,n.shadowCameraNear=this.shadowCameraNear,n.shadowCameraFar=this.shadowCameraFar,n.shadowCameraFov=this.shadowCameraFov,n.shadowCameraVisible=this.shadowCameraVisible,n.shadowBias=this.shadowBias,n.shadowDarkness=this.shadowDarkness,n.shadowMapWidth=this.shadowMapWidth,n.shadowMapHeight=this.shadowMapHeight,n};THREE.Cache=function(){this.files={}};THREE.Cache.prototype={constructor:THREE.Cache,add:function(n,t){this.files[n]=t},get:function(n){return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};THREE.Loader=function(n){this.showStatus=n;this.statusDomElement=n?THREE.Loader.prototype.addStatusElement():null;this.imageLoader=new THREE.ImageLoader;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:undefined,addStatusElement:function(){var n=document.createElement("div");return n.style.position="absolute",n.style.right="0px",n.style.top="0px",n.style.fontSize="0.8em",n.style.textAlign="left",n.style.background="rgba(0,0,0,0.25)",n.style.color="#fff",n.style.width="120px",n.style.padding="0.5em 0.5em 0.5em 0.5em",n.style.zIndex=1e3,n.innerHTML="Loading ...",n},updateProgress:function(n){var t="Loaded ";t+=n.total?(100*n.loaded/n.total).toFixed(0)+"%":(n.loaded/1024).toFixed(2)+" KB";this.statusDomElement.innerHTML=t},extractUrlBase:function(n){var t=n.split("/");return t.length===1?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(n,t){for(var r=[],i=0;i<n.length;++i)r[i]=this.createMaterial(n[i],t);return r},needsTangents:function(n){for(var r,t=0,i=n.length;t<i;t++)if(r=n[t],r instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(n,t){function l(n){var t=Math.log(n)/Math.LN2;return Math.pow(2,Math.round(t))}function u(n,i,r,u,f,e,o){var a=/\.dds$/i.test(r),v=t+r,c,h;a?(h=THREE.ImageUtils.loadCompressedTexture(v),n[i]=h):(h=document.createElement("canvas"),n[i]=new THREE.Texture(h));n[i].sourceFile=r;u&&(n[i].repeat.set(u[0],u[1]),u[0]!==1&&(n[i].wrapS=THREE.RepeatWrapping),u[1]!==1&&(n[i].wrapT=THREE.RepeatWrapping));f&&n[i].offset.set(f[0],f[1]);e&&(c={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},c[e[0]]!==undefined&&(n[i].wrapS=c[e[0]]),c[e[1]]!==undefined&&(n[i].wrapT=c[e[1]]));o&&(n[i].anisotropy=o);a||(h=n[i],s.imageLoader.crossOrigin=s.crossOrigin,s.imageLoader.load(v,function(n){if(THREE.Math.isPowerOfTwo(n.width)===!1||THREE.Math.isPowerOfTwo(n.height)===!1){var t=l(n.width),i=l(n.height);h.image.width=t;h.image.height=i;h.image.getContext("2d").drawImage(n,0,0,t,i)}else h.image=n;h.needsUpdate=!0}))}function e(n){return(n[0]*255<<16)+(n[1]*255<<8)+n[2]*255}var s=this,h="MeshLambertMaterial",i={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1},c,o,r,a,f;return n.shading&&(c=n.shading.toLowerCase(),c==="phong"?h="MeshPhongMaterial":c==="basic"&&(h="MeshBasicMaterial")),n.blending!==undefined&&THREE[n.blending]!==undefined&&(i.blending=THREE[n.blending]),(n.transparent!==undefined||n.opacity<1)&&(i.transparent=n.transparent),n.depthTest!==undefined&&(i.depthTest=n.depthTest),n.depthWrite!==undefined&&(i.depthWrite=n.depthWrite),n.visible!==undefined&&(i.visible=n.visible),n.flipSided!==undefined&&(i.side=THREE.BackSide),n.doubleSided!==undefined&&(i.side=THREE.DoubleSide),n.wireframe!==undefined&&(i.wireframe=n.wireframe),n.vertexColors!==undefined&&(n.vertexColors==="face"?i.vertexColors=THREE.FaceColors:n.vertexColors&&(i.vertexColors=THREE.VertexColors)),n.colorDiffuse?i.color=e(n.colorDiffuse):n.DbgColor&&(i.color=n.DbgColor),n.colorSpecular&&(i.specular=e(n.colorSpecular)),n.colorAmbient&&(i.ambient=e(n.colorAmbient)),n.colorEmissive&&(i.emissive=e(n.colorEmissive)),n.transparency&&(i.opacity=n.transparency),n.specularCoef&&(i.shininess=n.specularCoef),n.mapDiffuse&&t&&u(i,"map",n.mapDiffuse,n.mapDiffuseRepeat,n.mapDiffuseOffset,n.mapDiffuseWrap,n.mapDiffuseAnisotropy),n.mapLight&&t&&u(i,"lightMap",n.mapLight,n.mapLightRepeat,n.mapLightOffset,n.mapLightWrap,n.mapLightAnisotropy),n.mapBump&&t&&u(i,"bumpMap",n.mapBump,n.mapBumpRepeat,n.mapBumpOffset,n.mapBumpWrap,n.mapBumpAnisotropy),n.mapNormal&&t&&u(i,"normalMap",n.mapNormal,n.mapNormalRepeat,n.mapNormalOffset,n.mapNormalWrap,n.mapNormalAnisotropy),n.mapSpecular&&t&&u(i,"specularMap",n.mapSpecular,n.mapSpecularRepeat,n.mapSpecularOffset,n.mapSpecularWrap,n.mapSpecularAnisotropy),n.mapBumpScale&&(i.bumpScale=n.mapBumpScale),n.mapNormal?(o=THREE.ShaderLib.normalmap,r=THREE.UniformsUtils.clone(o.uniforms),r.tNormal.value=i.normalMap,n.mapNormalFactor&&r.uNormalScale.value.set(n.mapNormalFactor,n.mapNormalFactor),i.map&&(r.tDiffuse.value=i.map,r.enableDiffuse.value=!0),i.specularMap&&(r.tSpecular.value=i.specularMap,r.enableSpecular.value=!0),i.lightMap&&(r.tAO.value=i.lightMap,r.enableAO.value=!0),r.diffuse.value.setHex(i.color),r.specular.value.setHex(i.specular),r.ambient.value.setHex(i.ambient),r.shininess.value=i.shininess,i.opacity!==undefined&&(r.opacity.value=i.opacity),a={fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:r,lights:!0,fog:!0},f=new THREE.ShaderMaterial(a),i.transparent&&(f.transparent=!0)):f=new THREE[h](i),n.DbgName!==undefined&&(f.name=n.DbgName),f}};THREE.XHRLoader=function(n){this.cache=new THREE.Cache;this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(n,t,i,r){var f=this,e=f.cache.get(n),u;if(e!==undefined){t(e);return}u=new XMLHttpRequest;t!==undefined&&u.addEventListener("load",function(i){f.cache.add(n,i.target.responseText);t(i.target.responseText);f.manager.itemEnd(n)},!1);i!==undefined&&u.addEventListener("progress",function(n){i(n)},!1);r!==undefined&&u.addEventListener("error",function(n){r(n)},!1);this.crossOrigin!==undefined&&(u.crossOrigin=this.crossOrigin);u.open("GET",n,!0);u.send(null);f.manager.itemStart(n)},setCrossOrigin:function(n){this.crossOrigin=n}};THREE.ImageLoader=function(n){this.cache=new THREE.Cache;this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(n,t,i,r){var f=this,e=f.cache.get(n),u;if(e!==undefined){t(e);return}return u=document.createElement("img"),t!==undefined&&u.addEventListener("load",function(){f.cache.add(n,this);t(this);f.manager.itemEnd(n)},!1),i!==undefined&&u.addEventListener("progress",function(n){i(n)},!1),r!==undefined&&u.addEventListener("error",function(n){r(n)},!1),this.crossOrigin!==undefined&&(u.crossOrigin=this.crossOrigin),u.src=n,f.manager.itemStart(n),u},setCrossOrigin:function(n){this.crossOrigin=n}};THREE.JSONLoader=function(n){THREE.Loader.call(this,n);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(n,t,i){var r=this;i=i&&typeof i=="string"?i:this.extractUrlBase(n);this.onLoadStart();this.loadAjaxJSON(this,n,t,i)};THREE.JSONLoader.prototype.loadAjaxJSON=function(n,t,i,r,u){var f=new XMLHttpRequest,e=0;f.onreadystatechange=function(){var o,s;if(f.readyState===f.DONE)if(f.status===200||f.status===0){if(f.responseText){if(o=JSON.parse(f.responseText),o.metadata!==undefined&&o.metadata.type==="scene"){console.error('THREE.JSONLoader: "'+t+'" seems to be a Scene. Use THREE.SceneLoader instead.');return}s=n.parse(o,r);i(s.geometry,s.materials)}else console.error('THREE.JSONLoader: "'+t+'" seems to be unreachable or the file is empty.');n.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+t+'" ('+f.status+")");else f.readyState===f.LOADING?u&&(e===0&&(e=f.getResponseHeader("Content-Length")),u({total:e,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&u!==undefined&&(e=f.getResponseHeader("Content-Length"))};f.open("GET",t,!0);f.withCredentials=this.withCredentials;f.send(null)};THREE.JSONLoader.prototype.parse=function(n,t){function f(t){function p(n,t){return n&1<<t}var r,l,a,u,it,v,e,w,d,y,yt,st,ht,ct,lt,at,vt,g,h,s,c,b,nt,k,tt,rt,ut,f=n.faces,ft=n.vertices,o=n.normals,et=n.colors,ot=0;if(n.uvs!==undefined){for(r=0;r<n.uvs.length;r++)n.uvs[r].length&&ot++;for(r=0;r<ot;r++)i.faceVertexUvs[r]=[]}for(u=0,it=ft.length;u<it;)g=new THREE.Vector3,g.x=ft[u++]*t,g.y=ft[u++]*t,g.z=ft[u++]*t,i.vertices.push(g);for(u=0,it=f.length;u<it;)if(y=f[u++],yt=p(y,0),st=p(y,1),ht=p(y,3),ct=p(y,4),lt=p(y,5),at=p(y,6),vt=p(y,7),yt){if(s=new THREE.Face3,s.a=f[u],s.b=f[u+1],s.c=f[u+3],c=new THREE.Face3,c.a=f[u+1],c.b=f[u+2],c.c=f[u+3],u+=4,st&&(d=f[u++],s.materialIndex=d,c.materialIndex=d),a=i.faces.length,ht)for(r=0;r<ot;r++)for(k=n.uvs[r],i.faceVertexUvs[r][a]=[],i.faceVertexUvs[r][a+1]=[],l=0;l<4;l++)w=f[u++],rt=k[w*2],ut=k[w*2+1],tt=new THREE.Vector2(rt,ut),l!==2&&i.faceVertexUvs[r][a].push(tt),l!==0&&i.faceVertexUvs[r][a+1].push(tt);if(ct&&(e=f[u++]*3,s.normal.set(o[e++],o[e++],o[e]),c.normal.copy(s.normal)),lt)for(r=0;r<4;r++)e=f[u++]*3,nt=new THREE.Vector3(o[e++],o[e++],o[e]),r!==2&&s.vertexNormals.push(nt),r!==0&&c.vertexNormals.push(nt);if(at&&(v=f[u++],b=et[v],s.color.setHex(b),c.color.setHex(b)),vt)for(r=0;r<4;r++)v=f[u++],b=et[v],r!==2&&s.vertexColors.push(new THREE.Color(b)),r!==0&&c.vertexColors.push(new THREE.Color(b));i.faces.push(s);i.faces.push(c)}else{if(h=new THREE.Face3,h.a=f[u++],h.b=f[u++],h.c=f[u++],st&&(d=f[u++],h.materialIndex=d),a=i.faces.length,ht)for(r=0;r<ot;r++)for(k=n.uvs[r],i.faceVertexUvs[r][a]=[],l=0;l<3;l++)w=f[u++],rt=k[w*2],ut=k[w*2+1],tt=new THREE.Vector2(rt,ut),i.faceVertexUvs[r][a].push(tt);if(ct&&(e=f[u++]*3,h.normal.set(o[e++],o[e++],o[e])),lt)for(r=0;r<3;r++)e=f[u++]*3,nt=new THREE.Vector3(o[e++],o[e++],o[e]),h.vertexNormals.push(nt);if(at&&(v=f[u++],h.color.setHex(et[v])),vt)for(r=0;r<3;r++)v=f[u++],h.vertexColors.push(new THREE.Color(et[v]));i.faces.push(h)}}function e(){var r=n.influencesPerVertex!==undefined?n.influencesPerVertex:2,t,u;if(n.skinWeights)for(t=0,u=n.skinWeights.length;t<u;t+=r){var f=n.skinWeights[t],e=r>1?n.skinWeights[t+1]:0,o=r>2?n.skinWeights[t+2]:0,s=r>3?n.skinWeights[t+3]:0;i.skinWeights.push(new THREE.Vector4(f,e,o,s))}if(n.skinIndices)for(t=0,u=n.skinIndices.length;t<u;t+=r){var h=n.skinIndices[t],c=r>1?n.skinIndices[t+1]:0,l=r>2?n.skinIndices[t+2]:0,a=r>3?n.skinIndices[t+3]:0;i.skinIndices.push(new THREE.Vector4(h,c,l,a))}i.bones=n.bones;i.bones&&i.bones.length>0&&(i.skinWeights.length!==i.skinIndices.length||i.skinIndices.length!==i.vertices.length)&&console.warn("When skinning, number of vertices ("+i.vertices.length+"), skinIndices ("+i.skinIndices.length+"), and skinWeights ("+i.skinWeights.length+") should match.");i.animation=n.animation;i.animations=n.animations}function o(t){var u,l,a,e,o,r,h,f,v,y,s,c;if(n.morphTargets!==undefined)for(r=0,h=n.morphTargets.length;r<h;r++)for(i.morphTargets[r]={},i.morphTargets[r].name=n.morphTargets[r].name,i.morphTargets[r].vertices=[],a=i.morphTargets[r].vertices,e=n.morphTargets[r].vertices,u=0,l=e.length;u<l;u+=3)o=new THREE.Vector3,o.x=e[u]*t,o.y=e[u+1]*t,o.z=e[u+2]*t,a.push(o);if(n.morphColors!==undefined)for(r=0,h=n.morphColors.length;r<h;r++)for(i.morphColors[r]={},i.morphColors[r].name=n.morphColors[r].name,i.morphColors[r].colors=[],y=i.morphColors[r].colors,s=n.morphColors[r].colors,f=0,v=s.length;f<v;f+=3)c=new THREE.Color(16755200),c.setRGB(s[f],s[f+1],s[f+2]),y.push(c)}var s=this,i=new THREE.Geometry,u=n.scale!==undefined?1/n.scale:1,r;return f(u),e(),o(u),i.computeFaceNormals(),i.computeBoundingSphere(),n.materials===undefined||n.materials.length===0?{geometry:i}:(r=this.initMaterials(n.materials,t),this.needsTangents(r)&&i.computeTangents(),{geometry:i,materials:r})};THREE.LoadingManager=function(n,t,i){var r=this,u=0,f=0;this.onLoad=n;this.onProgress=t;this.onError=i;this.itemStart=function(){f++};this.itemEnd=function(n){if(u++,r.onProgress!==undefined)r.onProgress(n,u,f);u===f&&r.onLoad!==undefined&&r.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(n,t){var r=this,i=new THREE.XHRLoader;i.setCrossOrigin(this.crossOrigin);i.load(n,function(n){t(r.parse(JSON.parse(n)))})},setCrossOrigin:function(n){this.crossOrigin=n},parse:function(n){var t=new THREE.BufferGeometry,f=n.attributes,e=n.offsets,i=n.boundingSphere,u,r;for(u in f)r=f[u],t.attributes[u]={itemSize:r.itemSize,array:new self[r.type](r.array)};return e!==undefined&&(t.offsets=JSON.parse(JSON.stringify(e))),i!==undefined&&(t.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(i.center!==undefined?i.center:[0,0,0]),i.radius)),t}};THREE.MaterialLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(n,t){var r=this,i=new THREE.XHRLoader;i.setCrossOrigin(this.crossOrigin);i.load(n,function(n){t(r.parse(JSON.parse(n)))})},setCrossOrigin:function(n){this.crossOrigin=n},parse:function(n){var t=new THREE[n.type],i,r;if(n.color!==undefined&&t.color.setHex(n.color),n.ambient!==undefined&&t.ambient.setHex(n.ambient),n.emissive!==undefined&&t.emissive.setHex(n.emissive),n.specular!==undefined&&t.specular.setHex(n.specular),n.shininess!==undefined&&(t.shininess=n.shininess),n.vertexColors!==undefined&&(t.vertexColors=n.vertexColors),n.blending!==undefined&&(t.blending=n.blending),n.side!==undefined&&(t.side=n.side),n.opacity!==undefined&&(t.opacity=n.opacity),n.transparent!==undefined&&(t.transparent=n.transparent),n.wireframe!==undefined&&(t.wireframe=n.wireframe),n.materials!==undefined)for(i=0,r=n.materials.length;i<r;i++)t.materials.push(this.parse(n.materials[i]));return t}};THREE.ObjectLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(n,t){var i=this,r=new THREE.XHRLoader(i.manager);r.setCrossOrigin(this.crossOrigin);r.load(n,function(n){t(i.parse(JSON.parse(n)))})},setCrossOrigin:function(n){this.crossOrigin=n},parse:function(n){var t=this.parseGeometries(n.geometries),i=this.parseMaterials(n.materials);return this.parseObject(n.object,t,i)},parseGeometries:function(n){var u={},f,e,r,o,i,t;if(n!==undefined)for(f=new THREE.JSONLoader,e=new THREE.BufferGeometryLoader,r=0,o=n.length;r<o;r++){t=n[r];switch(t.type){case"PlaneGeometry":i=new THREE.PlaneGeometry(t.width,t.height,t.widthSegments,t.heightSegments);break;case"BoxGeometry":case"CubeGeometry":i=new THREE.BoxGeometry(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments);break;case"CircleGeometry":i=new THREE.CircleGeometry(t.radius,t.segments);break;case"CylinderGeometry":i=new THREE.CylinderGeometry(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded);break;case"SphereGeometry":i=new THREE.SphereGeometry(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength);break;case"IcosahedronGeometry":i=new THREE.IcosahedronGeometry(t.radius,t.detail);break;case"TorusGeometry":i=new THREE.TorusGeometry(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc);break;case"TorusKnotGeometry":i=new THREE.TorusKnotGeometry(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.p,t.q,t.heightScale);break;case"BufferGeometry":i=e.parse(t.data);break;case"Geometry":i=f.parse(t.data).geometry}i.uuid=t.uuid;t.name!==undefined&&(i.name=t.name);u[t.uuid]=i}return u},parseMaterials:function(n){var u={},f,i,e,t,r;if(n!==undefined)for(f=new THREE.MaterialLoader,i=0,e=n.length;i<e;i++)t=n[i],r=f.parse(t),r.uuid=t.uuid,t.name!==undefined&&(r.name=t.name),u[t.uuid]=r;return u},parseObject:function(){var n=new THREE.Matrix4;return function(t,i,r){var u,e,f,o;switch(t.type){case"Scene":u=new THREE.Scene;break;case"PerspectiveCamera":u=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":u=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":u=new THREE.AmbientLight(t.color);break;case"DirectionalLight":u=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":u=new THREE.PointLight(t.color,t.intensity,t.distance);break;case"SpotLight":u=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent);break;case"HemisphereLight":u=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":e=i[t.geometry];f=r[t.material];e===undefined&&console.error("THREE.ObjectLoader: Undefined geometry "+t.geometry);f===undefined&&console.error("THREE.ObjectLoader: Undefined material "+t.material);u=new THREE.Mesh(e,f);break;case"Sprite":f=r[t.material];f===undefined&&console.error("THREE.ObjectLoader: Undefined material "+t.material);u=new THREE.Sprite(f);break;default:u=new THREE.Object3D}if(u.uuid=t.uuid,t.name!==undefined&&(u.name=t.name),t.matrix!==undefined?(n.fromArray(t.matrix),n.decompose(u.position,u.quaternion,u.scale)):(t.position!==undefined&&u.position.fromArray(t.position),t.rotation!==undefined&&u.rotation.fromArray(t.rotation),t.scale!==undefined&&u.scale.fromArray(t.scale)),t.visible!==undefined&&(u.visible=t.visible),t.userData!==undefined&&(u.userData=t.userData),t.children!==undefined)for(o in t.children)u.add(this.parseObject(t.children[o],i,r));return u}}()};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(n,t){var i=this,r=new THREE.XHRLoader(i.manager);r.setCrossOrigin(this.crossOrigin);r.load(n,function(r){i.parse(JSON.parse(r),t,n)})},setCrossOrigin:function(n){this.crossOrigin=n},addGeometryHandler:function(n,t){this.geometryHandlers[n]={loaderClass:t}},addHierarchyHandler:function(n,t){this.hierarchyHandlers[n]={loaderClass:t}},parse:function(n,t,i){function it(n,t){return t=="relativeToHTML"?n:gi+n}function gt(){si(r.scene,o.objects)}function si(n,t){var f,b,p,rt,s,e,u,i,ht,ot,ut,ft,g,st,ct,v,et;for(e in t){if(u=r.objects[e],i=t[e],u===undefined){if(i.type&&i.type in y.hierarchyHandlers){if(i.loading===undefined){ht={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};ot={};for(ut in i)ut in ht||(ot[ut]=i[ut]);a=r.materials[i.material];i.loading=!0;ft=y.hierarchyHandlers[i.type].loaderObject;ft.options?ft.load(it(i.url,o.urlBaseType),hi(e,n,a,i)):ft.load(it(i.url,o.urlBaseType),hi(e,n,a,i),ot)}}else if(i.geometry!==undefined){if(h=r.geometries[i.geometry],h){if(g=!1,a=r.materials[i.material],g=a instanceof THREE.ShaderMaterial,b=i.position,p=i.rotation,rt=i.scale,f=i.matrix,s=i.quaternion,i.material||(a=new THREE.MeshFaceMaterial(r.face_materials[i.geometry])),a instanceof THREE.MeshFaceMaterial&&a.materials.length===0&&(a=new THREE.MeshFaceMaterial(r.face_materials[i.geometry])),a instanceof THREE.MeshFaceMaterial)for(v=0;v<a.materials.length;v++)g=g||a.materials[v]instanceof THREE.ShaderMaterial;g&&h.computeTangents();i.skin?u=new THREE.SkinnedMesh(h,a):i.morph?(u=new THREE.MorphAnimMesh(h,a),i.duration!==undefined&&(u.duration=i.duration),i.time!==undefined&&(u.time=i.time),i.mirroredLoop!==undefined&&(u.mirroredLoop=i.mirroredLoop),a.morphNormals&&h.computeMorphNormals()):u=new THREE.Mesh(h,a);u.name=e;f?(u.matrixAutoUpdate=!1,u.matrix.set(f[0],f[1],f[2],f[3],f[4],f[5],f[6],f[7],f[8],f[9],f[10],f[11],f[12],f[13],f[14],f[15])):(u.position.fromArray(b),s?u.quaternion.fromArray(s):u.rotation.fromArray(p),u.scale.fromArray(rt));u.visible=i.visible;u.castShadow=i.castShadow;u.receiveShadow=i.receiveShadow;n.add(u);r.objects[e]=u}}else if(i.type==="AmbientLight"||i.type==="PointLight"||i.type==="DirectionalLight"||i.type==="SpotLight"||i.type==="HemisphereLight"||i.type==="AreaLight"){var k=i.color,nt=i.intensity,tt=i.distance,l=i.position,d=i.rotation;switch(i.type){case"AmbientLight":c=new THREE.AmbientLight(k);break;case"PointLight":c=new THREE.PointLight(k,nt,tt);c.position.fromArray(l);break;case"DirectionalLight":c=new THREE.DirectionalLight(k,nt);c.position.fromArray(i.direction);break;case"SpotLight":c=new THREE.SpotLight(k,nt,tt,1);c.angle=i.angle;c.position.fromArray(l);c.target.set(l[0],l[1]-tt,l[2]);c.target.applyEuler(new THREE.Euler(d[0],d[1],d[2],"XYZ"));break;case"HemisphereLight":c=new THREE.DirectionalLight(k,nt,tt);c.target.set(l[0],l[1]-tt,l[2]);c.target.applyEuler(new THREE.Euler(d[0],d[1],d[2],"XYZ"));break;case"AreaLight":c=new THREE.AreaLight(k,nt);c.position.fromArray(l);c.width=i.size;c.height=i.size_y}n.add(c);c.name=e;r.lights[e]=c;r.objects[e]=c}else i.type==="PerspectiveCamera"||i.type==="OrthographicCamera"?(b=i.position,p=i.rotation,s=i.quaternion,i.type==="PerspectiveCamera"?w=new THREE.PerspectiveCamera(i.fov,i.aspect,i.near,i.far):i.type==="OrthographicCamera"&&(w=new THREE.OrthographicCamera(i.left,i.right,i.top,i.bottom,i.near,i.far)),w.name=e,w.position.fromArray(b),s!==undefined?w.quaternion.fromArray(s):p!==undefined&&w.rotation.fromArray(p),n.add(w),r.cameras[e]=w,r.objects[e]=w):(b=i.position,p=i.rotation,rt=i.scale,s=i.quaternion,u=new THREE.Object3D,u.name=e,u.position.fromArray(b),s?u.quaternion.fromArray(s):u.rotation.fromArray(p),u.scale.fromArray(rt),u.visible=i.visible!==undefined?i.visible:!1,n.add(u),r.objects[e]=u,r.empties[e]=u);if(u){if(i.userData!==undefined)for(st in i.userData)ct=i.userData[st],u.userData[st]=ct;if(i.groups!==undefined)for(v=0;v<i.groups.length;v++)et=i.groups[v],r.groups[et]===undefined&&(r.groups[et]=[]),r.groups[et].push(e)}}u!==undefined&&i.children!==undefined&&si(u,i.children)}}function nr(n,t,i){r.geometries[i]=n;r.face_materials[i]=t;gt()}function tr(n,t,i,u,f){var s=f.position,h=f.rotation,e=f.quaternion,c=f.scale,o;n.position.fromArray(s);e?n.quaternion.fromArray(e):n.rotation.fromArray(h);n.scale.fromArray(c);u&&n.traverse(function(n){n.material=u});o=f.visible!==undefined?f.visible:!0;n.traverse(function(n){n.visible=o});i.add(n);n.name=t;r.objects[t]=n;gt()}function ir(n){return function(t,i){t.name=n;nr(t,i,n);k-=1;y.onLoadComplete();ct()}}function hi(n,t,i,r){return function(u){var f;f=u.content?u.content:u.dae?u.scene:u;tr(f,n,t,i,r);k-=1;y.onLoadComplete();ct()}}function rr(n){return function(t,i){t.name=n;r.geometries[n]=t;r.face_materials[n]=i}}function ct(){var n={totalModels:pt,totalTextures:wt,loadedModels:pt-k,loadedTextures:wt-d};y.callbackProgress(n,r);y.onLoadProgress();k===0&&d===0&&(ur(),t(r))}function ur(){for(var n,i,t=0;t<oi.length;t++)n=oi[t],i=r.objects[n.targetName],i?n.object.target=i:(n.object.target=new THREE.Object3D,r.scene.add(n.object.target)),n.object.target.userData.targetInverse=n.object}function li(n,t){if(t(n),n.children!==undefined)for(var i in n.children)li(n.children[i],t)}var y=this,gi=THREE.Loader.prototype.extractUrlBase(i),h,a,w,ot,p,st,c,k,d,pt,wt,r,oi=[],o=n,tt,ht,ci,lt,ni,g,v,f,ai,ti,rt,vi,at,yi,pi,ii,ut,e,ri,vt,ft,ui,et,nt,u,s,yt,ki,ei,b,di;for(tt in this.geometryHandlers)ht=this.geometryHandlers[tt].loaderClass,this.geometryHandlers[tt].loaderObject=new ht;for(tt in this.hierarchyHandlers)ht=this.hierarchyHandlers[tt].loaderClass,this.hierarchyHandlers[tt].loaderObject=new ht;if(k=0,d=0,r={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},o.transform){var bt=o.transform.position,kt=o.transform.rotation,dt=o.transform.scale;bt&&r.scene.position.fromArray(bt);kt&&r.scene.rotation.fromArray(kt);dt&&r.scene.scale.fromArray(dt);(bt||kt||dt)&&(r.scene.updateMatrix(),r.scene.updateMatrixWorld())}ci=function(n){d-=n;ct();y.onLoadComplete()};lt=function(n){return function(){ci(n)}};for(ni in o.fogs)g=o.fogs[ni],g.type==="linear"?ot=new THREE.Fog(0,g.near,g.far):g.type==="exp2"&&(ot=new THREE.FogExp2(0,g.density)),st=g.color,ot.color.setRGB(st[0],st[1],st[2]),r.fogs[ni]=ot;for(v in o.geometries)f=o.geometries[v],f.type in this.geometryHandlers&&(k+=1,y.onLoadStart());for(ai in o.objects)li(o.objects[ai],function(n){n.type&&n.type in y.hierarchyHandlers&&(k+=1,y.onLoadStart())});pt=k;for(v in o.geometries)if(f=o.geometries[v],f.type==="cube")h=new THREE.BoxGeometry(f.width,f.height,f.depth,f.widthSegments,f.heightSegments,f.depthSegments),h.name=v,r.geometries[v]=h;else if(f.type==="plane")h=new THREE.PlaneGeometry(f.width,f.height,f.widthSegments,f.heightSegments),h.name=v,r.geometries[v]=h;else if(f.type==="sphere")h=new THREE.SphereGeometry(f.radius,f.widthSegments,f.heightSegments),h.name=v,r.geometries[v]=h;else if(f.type==="cylinder")h=new THREE.CylinderGeometry(f.topRad,f.botRad,f.height,f.radSegs,f.heightSegs),h.name=v,r.geometries[v]=h;else if(f.type==="torus")h=new THREE.TorusGeometry(f.radius,f.tube,f.segmentsR,f.segmentsT),h.name=v,r.geometries[v]=h;else if(f.type==="icosahedron")h=new THREE.IcosahedronGeometry(f.radius,f.subdivisions),h.name=v,r.geometries[v]=h;else if(f.type in this.geometryHandlers){ti={};for(rt in f)rt!=="type"&&rt!=="url"&&(ti[rt]=f[rt]);vi=this.geometryHandlers[f.type].loaderObject;vi.load(it(f.url,o.urlBaseType),ir(v),ti)}else f.type==="embedded"&&(at=o.embeds[f.id],yi="",at.metadata=o.metadata,at&&(pi=this.geometryHandlers.ascii.loaderObject,ii=pi.parse(at,yi),rr(v)(ii.geometry,ii.materials)));for(ut in o.textures)if(e=o.textures[ut],e.url instanceof Array)for(d+=e.url.length,ri=0;ri<e.url.length;ri++)y.onLoadStart();else d+=1,y.onLoadStart();wt=d;for(ut in o.textures){if(e=o.textures[ut],e.mapping!==undefined&&THREE[e.mapping]!==undefined&&(e.mapping=new THREE[e.mapping]),e.url instanceof Array){for(vt=e.url.length,ft=[],b=0;b<vt;b++)ft[b]=it(e.url[b],o.urlBaseType);ui=/\.dds$/i.test(ft[0]);p=ui?THREE.ImageUtils.loadCompressedTextureCube(ft,e.mapping,lt(vt)):THREE.ImageUtils.loadTextureCube(ft,e.mapping,lt(vt))}else{var ui=/\.dds$/i.test(e.url),wi=it(e.url,o.urlBaseType),bi=lt(1);p=ui?THREE.ImageUtils.loadCompressedTexture(wi,e.mapping,bi):THREE.ImageUtils.loadTexture(wi,e.mapping,bi);THREE[e.minFilter]!==undefined&&(p.minFilter=THREE[e.minFilter]);THREE[e.magFilter]!==undefined&&(p.magFilter=THREE[e.magFilter]);e.anisotropy&&(p.anisotropy=e.anisotropy);e.repeat&&(p.repeat.set(e.repeat[0],e.repeat[1]),e.repeat[0]!==1&&(p.wrapS=THREE.RepeatWrapping),e.repeat[1]!==1&&(p.wrapT=THREE.RepeatWrapping));e.offset&&p.offset.set(e.offset[0],e.offset[1]);e.wrap&&(et={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},et[e.wrap[0]]!==undefined&&(p.wrapS=et[e.wrap[0]]),et[e.wrap[1]]!==undefined&&(p.wrapT=et[e.wrap[1]]))}r.textures[ut]=p}for(nt in o.materials){u=o.materials[nt];for(s in u.parameters)s==="envMap"||s==="map"||s==="lightMap"||s==="bumpMap"?u.parameters[s]=r.textures[u.parameters[s]]:s==="shading"?u.parameters[s]=u.parameters[s]==="flat"?THREE.FlatShading:THREE.SmoothShading:s==="side"?u.parameters[s]=u.parameters[s]=="double"?THREE.DoubleSide:u.parameters[s]=="back"?THREE.BackSide:THREE.FrontSide:s==="blending"?u.parameters[s]=u.parameters[s]in THREE?THREE[u.parameters[s]]:THREE.NormalBlending:s==="combine"?u.parameters[s]=u.parameters[s]in THREE?THREE[u.parameters[s]]:THREE.MultiplyOperation:s==="vertexColors"?u.parameters[s]=="face"?u.parameters[s]=THREE.FaceColors:u.parameters[s]&&(u.parameters[s]=THREE.VertexColors):s==="wrapRGB"&&(yt=u.parameters[s],u.parameters[s]=new THREE.Vector3(yt[0],yt[1],yt[2]));if(u.parameters.opacity!==undefined&&u.parameters.opacity<1&&(u.parameters.transparent=!0),u.parameters.normalMap){var fi=THREE.ShaderLib.normalmap,l=THREE.UniformsUtils.clone(fi.uniforms),fr=u.parameters.color,er=u.parameters.specular,or=u.parameters.ambient,sr=u.parameters.shininess;l.tNormal.value=r.textures[u.parameters.normalMap];u.parameters.normalScale&&l.uNormalScale.value.set(u.parameters.normalScale[0],u.parameters.normalScale[1]);u.parameters.map&&(l.tDiffuse.value=u.parameters.map,l.enableDiffuse.value=!0);u.parameters.envMap&&(l.tCube.value=u.parameters.envMap,l.enableReflection.value=!0,l.reflectivity.value=u.parameters.reflectivity);u.parameters.lightMap&&(l.tAO.value=u.parameters.lightMap,l.enableAO.value=!0);u.parameters.specularMap&&(l.tSpecular.value=r.textures[u.parameters.specularMap],l.enableSpecular.value=!0);u.parameters.displacementMap&&(l.tDisplacement.value=r.textures[u.parameters.displacementMap],l.enableDisplacement.value=!0,l.uDisplacementBias.value=u.parameters.displacementBias,l.uDisplacementScale.value=u.parameters.displacementScale);l.diffuse.value.setHex(fr);l.specular.value.setHex(er);l.ambient.value.setHex(or);l.shininess.value=sr;u.parameters.opacity&&(l.opacity.value=u.parameters.opacity);ki={fragmentShader:fi.fragmentShader,vertexShader:fi.vertexShader,uniforms:l,lights:!0,fog:!0};a=new THREE.ShaderMaterial(ki)}else a=new THREE[u.type](u.parameters);a.name=nt;r.materials[nt]=a}for(nt in o.materials)if(u=o.materials[nt],u.parameters.materials){for(ei=[],b=0;b<u.parameters.materials.length;b++)di=u.parameters.materials[b],ei.push(r.materials[di]);r.materials[nt].materials=ei}gt();r.cameras&&o.defaults.camera&&(r.currentCamera=r.cameras[o.defaults.camera]);r.fogs&&o.defaults.fog&&(r.scene.fog=r.fogs[o.defaults.fog]);y.callbackSync(r);ct()}};THREE.TextureLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(n,t){var r=this,i=new THREE.ImageLoader(r.manager);i.setCrossOrigin(this.crossOrigin);i.load(n,function(n){var i=new THREE.Texture(n);i.needsUpdate=!0;t!==undefined&&t(i)})},setCrossOrigin:function(n){this.crossOrigin=n}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthTest=!0;this.depthWrite=!0;this.polygonOffset=!1;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.overdraw=0;this.visible=!0;this.needsUpdate=!0};THREE.Material.prototype={constructor:THREE.Material,setValues:function(n){var t,i,r;if(n!==undefined)for(t in n){if(i=n[t],i===undefined){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}t in this&&(r=this[t],r instanceof THREE.Color?r.set(i):r instanceof THREE.Vector3&&i instanceof THREE.Vector3?r.copy(i):this[t]=t=="overdraw"?Number(i):i)}},clone:function(n){return n===undefined&&(n=new THREE.Material),n.name=this.name,n.side=this.side,n.opacity=this.opacity,n.transparent=this.transparent,n.blending=this.blending,n.blendSrc=this.blendSrc,n.blendDst=this.blendDst,n.blendEquation=this.blendEquation,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.polygonOffset=this.polygonOffset,n.polygonOffsetFactor=this.polygonOffsetFactor,n.polygonOffsetUnits=this.polygonOffsetUnits,n.alphaTest=this.alphaTest,n.overdraw=this.overdraw,n.visible=this.visible,n},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(n){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.vertexColors=!1;this.fog=!0;this.setValues(n)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var n=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.linewidth=this.linewidth,n.linecap=this.linecap,n.linejoin=this.linejoin,n.vertexColors=this.vertexColors,n.fog=this.fog,n};THREE.LineDashedMaterial=function(n){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.scale=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(n)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var n=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.linewidth=this.linewidth,n.scale=this.scale,n.dashSize=this.dashSize,n.gapSize=this.gapSize,n.vertexColors=this.vertexColors,n.fog=this.fog,n};THREE.MeshBasicMaterial=function(n){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=!1;this.morphTargets=!1;this.setValues(n)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var n=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.map=this.map,n.lightMap=this.lightMap,n.specularMap=this.specularMap,n.envMap=this.envMap,n.combine=this.combine,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,n.fog=this.fog,n.shading=this.shading,n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n.wireframeLinecap=this.wireframeLinecap,n.wireframeLinejoin=this.wireframeLinejoin,n.vertexColors=this.vertexColors,n.skinning=this.skinning,n.morphTargets=this.morphTargets,n};THREE.MeshLambertMaterial=function(n){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=!1;this.morphTargets=!1;this.morphNormals=!1;this.setValues(n)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var n=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.ambient.copy(this.ambient),n.emissive.copy(this.emissive),n.wrapAround=this.wrapAround,n.wrapRGB.copy(this.wrapRGB),n.map=this.map,n.lightMap=this.lightMap,n.specularMap=this.specularMap,n.envMap=this.envMap,n.combine=this.combine,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,n.fog=this.fog,n.shading=this.shading,n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n.wireframeLinecap=this.wireframeLinecap,n.wireframeLinejoin=this.wireframeLinejoin,n.vertexColors=this.vertexColors,n.skinning=this.skinning,n.morphTargets=this.morphTargets,n.morphNormals=this.morphNormals,n};THREE.MeshPhongMaterial=function(n){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=!1;this.morphTargets=!1;this.morphNormals=!1;this.setValues(n)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var n=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.ambient.copy(this.ambient),n.emissive.copy(this.emissive),n.specular.copy(this.specular),n.shininess=this.shininess,n.metal=this.metal,n.wrapAround=this.wrapAround,n.wrapRGB.copy(this.wrapRGB),n.map=this.map,n.lightMap=this.lightMap,n.bumpMap=this.bumpMap,n.bumpScale=this.bumpScale,n.normalMap=this.normalMap,n.normalScale.copy(this.normalScale),n.specularMap=this.specularMap,n.envMap=this.envMap,n.combine=this.combine,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,n.fog=this.fog,n.shading=this.shading,n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n.wireframeLinecap=this.wireframeLinecap,n.wireframeLinejoin=this.wireframeLinejoin,n.vertexColors=this.vertexColors,n.skinning=this.skinning,n.morphTargets=this.morphTargets,n.morphNormals=this.morphNormals,n};THREE.MeshDepthMaterial=function(n){THREE.Material.call(this);this.morphTargets=!1;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(n)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var n=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,n),n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n};THREE.MeshNormalMaterial=function(n){THREE.Material.call(this,n);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(n)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var n=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,n),n.shading=this.shading,n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n};THREE.MeshFaceMaterial=function(n){this.materials=n instanceof Array?n:[]};THREE.MeshFaceMaterial.prototype.clone=function(){for(var t=new THREE.MeshFaceMaterial,n=0;n<this.materials.length;n++)t.materials.push(this.materials[n].clone());return t};THREE.ParticleSystemMaterial=function(n){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(n)};THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleSystemMaterial.prototype.clone=function(){var n=new THREE.ParticleSystemMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.map=this.map,n.size=this.size,n.sizeAttenuation=this.sizeAttenuation,n.vertexColors=this.vertexColors,n.fog=this.fog,n};THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial;THREE.ShaderMaterial=function(n){THREE.Material.call(this);this.fragmentShader="void main() {}";this.vertexShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.fog=!1;this.lights=!1;this.vertexColors=THREE.NoColors;this.skinning=!1;this.morphTargets=!1;this.morphNormals=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=undefined;this.setValues(n)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var n=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,n),n.fragmentShader=this.fragmentShader,n.vertexShader=this.vertexShader,n.uniforms=THREE.UniformsUtils.clone(this.uniforms),n.attributes=this.attributes,n.defines=this.defines,n.shading=this.shading,n.wireframe=this.wireframe,n.wireframeLinewidth=this.wireframeLinewidth,n.fog=this.fog,n.lights=this.lights,n.vertexColors=this.vertexColors,n.skinning=this.skinning,n.morphTargets=this.morphTargets,n.morphNormals=this.morphNormals,n};THREE.RawShaderMaterial=function(n){THREE.ShaderMaterial.call(this,n)};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.clone=function(){var n=new THREE.RawShaderMaterial;return THREE.ShaderMaterial.prototype.clone.call(this,n),n};THREE.SpriteMaterial=function(n){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(n)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var n=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.map=this.map,n.rotation=this.rotation,n.fog=this.fog,n};THREE.SpriteCanvasMaterial=function(n){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(n)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteCanvasMaterial.prototype.clone=function(){var n=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,n),n.color.copy(this.color),n.program=this.program,n};THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial;THREE.Texture=function(n,t,i,r,u,f,e,o,s){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=n;this.mipmaps=[];this.mapping=t!==undefined?t:new THREE.UVMapping;this.wrapS=i!==undefined?i:THREE.ClampToEdgeWrapping;this.wrapT=r!==undefined?r:THREE.ClampToEdgeWrapping;this.magFilter=u!==undefined?u:THREE.LinearFilter;this.minFilter=f!==undefined?f:THREE.LinearMipMapLinearFilter;this.anisotropy=s!==undefined?s:1;this.format=e!==undefined?e:THREE.RGBAFormat;this.type=o!==undefined?o:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(n){n===!0&&this.update();this._needsUpdate=n},clone:function(n){return n===undefined&&(n=new THREE.Texture),n.image=this.image,n.mipmaps=this.mipmaps.slice(0),n.mapping=this.mapping,n.wrapS=this.wrapS,n.wrapT=this.wrapT,n.magFilter=this.magFilter,n.minFilter=this.minFilter,n.anisotropy=this.anisotropy,n.format=this.format,n.type=this.type,n.offset.copy(this.offset),n.repeat.copy(this.repeat),n.generateMipmaps=this.generateMipmaps,n.premultiplyAlpha=this.premultiplyAlpha,n.flipY=this.flipY,n.unpackAlignment=this.unpackAlignment,n},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(n,t,i,r,u,f,e,o,s,h,c){THREE.Texture.call(this,null,f,e,o,s,h,r,u,c);this.image={width:t,height:i};this.mipmaps=n;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var n=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,n),n};THREE.DataTexture=function(n,t,i,r,u,f,e,o,s,h,c){THREE.Texture.call(this,null,f,e,o,s,h,r,u,c);this.image={data:n,width:t,height:i}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var n=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,n),n};THREE.ParticleSystem=function(n,t){THREE.Object3D.call(this);this.geometry=n!==undefined?n:new THREE.Geometry;this.material=t!==undefined?t:new THREE.ParticleSystemMaterial({color:Math.random()*16777215});this.sortParticles=!1;this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(n){return n===undefined&&(n=new THREE.ParticleSystem(this.geometry,this.material)),n.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,n),n};THREE.Line=function(n,t,i){THREE.Object3D.call(this);this.geometry=n!==undefined?n:new THREE.Geometry;this.material=t!==undefined?t:new THREE.LineBasicMaterial({color:Math.random()*16777215});this.type=i!==undefined?i:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(n){return n===undefined&&(n=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,n),n};THREE.Mesh=function(n,t){THREE.Object3D.call(this);this.geometry=n!==undefined?n:new THREE.Geometry;this.material=t!==undefined?t:new THREE.MeshBasicMaterial({color:Math.random()*16777215});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets!==undefined&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var n=0,t=this.geometry.morphTargets.length;n<t;n++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[n].name]=n}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(n){return this.morphTargetDictionary[n]!==undefined?this.morphTargetDictionary[n]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+n+" does not exist. Returning 0."),0)};THREE.Mesh.prototype.clone=function(n,t){return n===undefined&&(n=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,n,t),n};THREE.Bone=function(n){THREE.Object3D.call(this);this.skin=n;this.skinMatrix=new THREE.Matrix4;this.accumulatedRotWeight=0;this.accumulatedPosWeight=0;this.accumulatedSclWeight=0};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(n,t){this.matrixAutoUpdate&&(t|=this.updateMatrix());(t||this.matrixWorldNeedsUpdate)&&(n?this.skinMatrix.multiplyMatrices(n,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0,this.accumulatedRotWeight=0,this.accumulatedPosWeight=0,this.accumulatedSclWeight=0);for(var i=0,r=this.children.length;i<r;i++)this.children[i].update(this.skinMatrix,t)};THREE.Skeleton=function(n,t){var u,r,s,f,e,i,o,h;if(this.useVertexTexture=t!==undefined?t:!0,this.bones=[],this.boneMatrices=[],n!==undefined){for(i=0;i<n.length;++i)r=n[i],s=r.pos,f=r.rotq,e=r.scl,u=this.addBone(),u.name=r.name,u.position.set(s[0],s[1],s[2]),u.quaternion.set(f[0],f[1],f[2],f[3]),e!==undefined?u.scale.set(e[0],e[1],e[2]):u.scale.set(1,1,1);for(i=0;i<n.length;++i)r=n[i],r.parent!==-1&&this.bones[r.parent].add(this.bones[i]);o=this.bones.length;this.useVertexTexture?(h=o>256?64:o>64?32:o>16?16:8,this.boneTextureWidth=h,this.boneTextureHeight=h,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*o)}};THREE.Skeleton.prototype=Object.create(THREE.Mesh.prototype);THREE.Skeleton.prototype.addBone=function(n){return n===undefined&&(n=new THREE.Bone(this)),this.bones.push(n),n};THREE.Skeleton.prototype.calculateInverses=function(){var n,i,t;for(this.boneInverses=[],n=0,i=this.bones.length;n<i;++n)t=new THREE.Matrix4,t.getInverse(this.bones[n].skinMatrix),this.boneInverses.push(t)};THREE.SkinnedMesh=function(n,t,i){var r,u;for(THREE.Mesh.call(this,n,t),this.skeleton=new THREE.Skeleton(this.geometry&&this.geometry.bones,i),r=0;r<this.skeleton.bones.length;++r)u=this.skeleton.bones[r],u.parent===undefined&&this.add(u);this.identityMatrix=new THREE.Matrix4;this.pose()};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var n=new THREE.Matrix4;return function(t){var r,f,u,i,e;for(this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0),r=0,f=this.children.length;r<f;r++)u=this.children[r],u instanceof THREE.Bone?u.update(this.identityMatrix,!1):u.updateMatrixWorld(!0);for(this.skeleton.boneInverses===undefined&&this.skeleton.calculateInverses(),i=0,e=this.skeleton.bones.length;i<e;i++)n.multiplyMatrices(this.skeleton.bones[i].skinMatrix,this.skeleton.boneInverses[i]),n.flattenToArrayOffset(this.skeleton.boneMatrices,i*16);this.skeleton.useVertexTexture&&(this.skeleton.boneTexture.needsUpdate=!0)}}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);this.normalizeSkinWeights()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){var n,t,i;if(this.geometry instanceof THREE.Geometry)for(n=0;n<this.geometry.skinIndices.length;n++)t=this.geometry.skinWeights[n],i=1/t.lengthManhattan(),i!==Infinity?t.multiplyScalar(i):t.set(1)};THREE.SkinnedMesh.prototype.clone=function(n){return n===undefined&&(n=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,n),n};THREE.MorphAnimMesh=function(n,t){THREE.Mesh.call(this,n,t);this.duration=1e3;this.mirroredLoop=!1;this.time=0;this.lastKeyframe=0;this.currentKeyframe=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(n,t){this.startKeyframe=n;this.endKeyframe=t;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var t=this.geometry,e,f,o,n,s,h,i,r,c,u;for(t.animations||(t.animations={}),f=t.animations,o=/([a-z]+)(\d+)/,n=0,s=t.morphTargets.length;n<s;n++)h=t.morphTargets[n],i=h.name.match(o),i&&i.length>1&&(r=i[1],c=i[2],f[r]||(f[r]={start:Infinity,end:-Infinity}),u=f[r],n<u.start&&(u.start=n),n>u.end&&(u.end=n),e||(e=r));t.firstAnimation=e};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(n,t,i){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[n]={start:t,end:i}};THREE.MorphAnimMesh.prototype.playAnimation=function(n,t){var i=this.geometry.animations[n];i?(this.setFrameRange(i.start,i.end),this.duration=1e3*((i.end-i.start)/t),this.time=0):console.warn("animation["+n+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(n){var r=this.duration/this.length,i,t;this.time+=this.direction*n;this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));i=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/r),0,this.length-1);i!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[i]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=i);t=this.time%r/r;this.directionBackwards&&(t=1-t);this.morphTargetInfluences[this.currentKeyframe]=t;this.morphTargetInfluences[this.lastKeyframe]=1-t};THREE.MorphAnimMesh.prototype.clone=function(n){return n===undefined&&(n=new THREE.MorphAnimMesh(this.geometry,this.material)),n.duration=this.duration,n.mirroredLoop=this.mirroredLoop,n.time=this.time,n.lastKeyframe=this.lastKeyframe,n.currentKeyframe=this.currentKeyframe,n.direction=this.direction,n.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,n),n};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(n,t){t===undefined&&(t=0);t=Math.abs(t);for(var i=0;i<this.objects.length;i++)if(t<this.objects[i].distance)break;this.objects.splice(i,0,{distance:t,object:n});this.add(n)};THREE.LOD.prototype.getObjectForDistance=function(n){for(var t=1,i=this.objects.length;t<i;t++)if(n<this.objects[t].distance)break;return this.objects[t-1].object};THREE.LOD.prototype.update=function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(i){var f,r,u;if(this.objects.length>1){for(n.setFromMatrixPosition(i.matrixWorld),t.setFromMatrixPosition(this.matrixWorld),f=n.distanceTo(t),this.objects[0].object.visible=!0,r=1,u=this.objects.length;r<u;r++)if(f>=this.objects[r].distance)this.objects[r-1].object.visible=!1,this.objects[r].object.visible=!0;else break;for(;r<u;r++)this.objects[r].object.visible=!1}}}();THREE.LOD.prototype.clone=function(n){var t,r,i;for(n===undefined&&(n=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,n),t=0,r=this.objects.length;t<r;t++)i=this.objects[t].object.clone(),i.visible=t===0,n.addLevel(i,this.objects[t].distance);return n};THREE.Sprite=function(){var t=new THREE.Float32Attribute(3,3),n;return t.set([-.5,-.5,0,.5,-.5,0,.5,.5,0]),n=new THREE.BufferGeometry,n.addAttribute("position",t),function(t){THREE.Object3D.call(this);this.geometry=n;this.material=t!==undefined?t:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(n){return n===undefined&&(n=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,n),n};THREE.Particle=THREE.Sprite;THREE.Scene=function(){THREE.Object3D.call(this);this.fog=null;this.overrideMaterial=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(n){var i,t;for(n instanceof THREE.Light?(this.__lights.indexOf(n)===-1&&this.__lights.push(n),n.target&&n.target.parent===undefined&&this.add(n.target)):n instanceof THREE.Camera||n instanceof THREE.Bone||(this.__objectsAdded.push(n),i=this.__objectsRemoved.indexOf(n),i!==-1&&this.__objectsRemoved.splice(i,1)),this.dispatchEvent({type:"objectAdded",object:n}),n.dispatchEvent({type:"addedToScene",scene:this}),t=0;t<n.children.length;t++)this.__addObject(n.children[t])};THREE.Scene.prototype.__removeObject=function(n){var i,t,r;if(n instanceof THREE.Light){if(t=this.__lights.indexOf(n),t!==-1&&this.__lights.splice(t,1),n.shadowCascadeArray)for(i=0;i<n.shadowCascadeArray.length;i++)this.__removeObject(n.shadowCascadeArray[i])}else n instanceof THREE.Camera||(this.__objectsRemoved.push(n),t=this.__objectsAdded.indexOf(n),t!==-1&&this.__objectsAdded.splice(t,1));for(this.dispatchEvent({type:"objectRemoved",object:n}),n.dispatchEvent({type:"removedFromScene",scene:this}),r=0;r<n.children.length;r++)this.__removeObject(n.children[r])};THREE.Scene.prototype.clone=function(n){return n===undefined&&(n=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,n),this.fog!==null&&(n.fog=this.fog.clone()),this.overrideMaterial!==null&&(n.overrideMaterial=this.overrideMaterial.clone()),n.autoUpdate=this.autoUpdate,n.matrixAutoUpdate=this.matrixAutoUpdate,n};THREE.Fog=function(n,t,i){this.name="";this.color=new THREE.Color(n);this.near=t!==undefined?t:1;this.far=i!==undefined?i:1e3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(n,t){this.name="";this.color=new THREE.Color(n);this.density=t!==undefined?t:.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(n){function or(){var t,r,n,i;for(li.setRGB(0,0,0),ir.setRGB(0,0,0),rr.setRGB(0,0,0),t=0,r=b.length;t<r;t++)n=b[t],i=n.color,n instanceof THREE.AmbientLight?li.add(i):n instanceof THREE.DirectionalLight?ir.add(i):n instanceof THREE.PointLight&&rr.add(i)}function sr(n,t,i){for(var r,f,u,e=0,o=b.length;e<o;e++)if(r=b[e],hi.copy(r.color),r instanceof THREE.DirectionalLight){if(f=ai.setFromMatrixPosition(r.matrixWorld).normalize(),u=t.dot(f),u<=0)continue;u*=r.intensity;i.add(hi.multiplyScalar(u))}else if(r instanceof THREE.PointLight){if(f=ai.setFromMatrixPosition(r.matrixWorld),u=t.dot(ai.subVectors(f,n).normalize()),u<=0)continue;if(u*=r.distance==0?1:1-Math.min(n.distanceTo(f)/r.distance,1),u==0)continue;u*=r.intensity;i.add(hi.multiplyScalar(u))}}function hr(n,i,r){var u,a;bt(r.opacity);kt(r.blending);var f=i.scale.x*e,s=i.scale.y*o,c=.5*Math.sqrt(f*f+s*s);if(h.min.set(n.x-c,n.y-c),h.max.set(n.x+c,n.y+c),r instanceof THREE.SpriteMaterial||r instanceof THREE.ParticleSystemMaterial)if(u=r.map,u!==null){u.hasEventListener("update",wt)===!1&&(u.image!==undefined&&u.image.width>0&&vi(u),u.addEventListener("update",wt));a=ci[u.id];a!==undefined?v(a):v("rgba( 0, 0, 0, 1 )");var l=u.image,y=l.width*u.offset.x,p=l.height*u.offset.y,b=l.width*u.repeat.x,k=l.height*u.repeat.y,d=f/b,g=s/k;t.save();t.translate(n.x,n.y);r.rotation!==0&&t.rotate(r.rotation);t.translate(-f/2,-s/2);t.scale(d,g);t.translate(-y,-p);t.fillRect(y,p,b,k);t.restore()}else v(r.color.getStyle()),t.save(),t.translate(n.x,n.y),r.rotation!==0&&t.rotate(r.rotation),t.scale(f,-s),t.fillRect(-.5,-.5,1,1),t.restore();else r instanceof THREE.SpriteCanvasMaterial&&(w(r.color.getStyle()),v(r.color.getStyle()),t.save(),t.translate(n.x,n.y),r.rotation!==0&&t.rotate(r.rotation),t.scale(f,s),r.program(t),t.restore())}function cr(n,i,r,u){var f,o,e;if(bt(u.opacity),kt(u.blending),t.beginPath(),t.moveTo(n.positionScreen.x,n.positionScreen.y),t.lineTo(i.positionScreen.x,i.positionScreen.y),u instanceof THREE.LineBasicMaterial){if(wi(u.linewidth),bi(u.linecap),ki(u.linejoin),u.vertexColors!==THREE.VertexColors)w(u.color.getStyle());else if(f=r.vertexColors[0].getStyle(),o=r.vertexColors[1].getStyle(),f===o)w(f);else{try{e=t.createLinearGradient(n.positionScreen.x,n.positionScreen.y,i.positionScreen.x,i.positionScreen.y);e.addColorStop(0,f);e.addColorStop(1,o)}catch(s){e=f}w(e)}t.stroke();h.expandByScalar(u.linewidth*2)}else u instanceof THREE.LineDashedMaterial&&(wi(u.linewidth),bi(u.linecap),ki(u.linejoin),w(u.color.getStyle()),fr(u.dashSize,u.gapSize),t.stroke(),h.expandByScalar(u.linewidth*2),fr(null,null))}function lr(n,t,r,f,e,o,s,h){ot.info.render.vertices+=3;ot.info.render.faces++;bt(h.opacity);kt(h.blending);d=n.positionScreen.x;g=n.positionScreen.y;nt=t.positionScreen.x;tt=t.positionScreen.y;it=r.positionScreen.x;rt=r.positionScreen.y;ar(d,g,nt,tt,it,rt);(h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial)&&h.map===null?(si.copy(h.color),tr.copy(h.emissive),h.vertexColors===THREE.FaceColors&&si.multiply(s.color),u.copy(li),ur.copy(n.positionWorld).add(t.positionWorld).add(r.positionWorld).divideScalar(3),sr(ur,s.normalModel,u),u.multiply(si).add(tr),h.wireframe===!0?ft(u,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):et(u)):h instanceof THREE.MeshBasicMaterial||h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial?h.map!==null?h.map.mapping instanceof THREE.UVMapping&&(y=s.uvs,yi(d,g,nt,tt,it,rt,y[f].x,y[f].y,y[e].x,y[e].y,y[o].x,y[o].y,h.map)):h.envMap!==null?h.envMap.mapping instanceof THREE.SphericalReflectionMapping?(i.copy(s.vertexNormalsModel[f]).applyMatrix3(a),ct=.5*i.x+.5,lt=.5*i.y+.5,i.copy(s.vertexNormalsModel[e]).applyMatrix3(a),at=.5*i.x+.5,vt=.5*i.y+.5,i.copy(s.vertexNormalsModel[o]).applyMatrix3(a),yt=.5*i.x+.5,pt=.5*i.y+.5,yi(d,g,nt,tt,it,rt,ct,lt,at,vt,yt,pt,h.envMap)):h.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(i.copy(s.vertexNormalsModel[f]).applyMatrix3(a),ct=-.5*i.x+.5,lt=-.5*i.y+.5,i.copy(s.vertexNormalsModel[e]).applyMatrix3(a),at=-.5*i.x+.5,vt=-.5*i.y+.5,i.copy(s.vertexNormalsModel[o]).applyMatrix3(a),yt=-.5*i.x+.5,pt=-.5*i.y+.5,yi(d,g,nt,tt,it,rt,ct,lt,at,vt,yt,pt,h.envMap)):(u.copy(h.color),h.vertexColors===THREE.FaceColors&&u.multiply(s.color),h.wireframe===!0?ft(u,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):et(u)):h instanceof THREE.MeshDepthMaterial?(u.r=u.g=u.b=1-di(n.positionScreen.z*n.positionScreen.w,oi.near,oi.far),h.wireframe===!0?ft(u,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):et(u)):h instanceof THREE.MeshNormalMaterial?(i.copy(s.normalModel).applyMatrix3(a),u.setRGB(i.x,i.y,i.z).multiplyScalar(.5).addScalar(.5),h.wireframe===!0?ft(u,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):et(u)):(u.setRGB(1,1,1),h.wireframe===!0?ft(u,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):et(u))}function ar(n,i,r,u,f,e){t.beginPath();t.moveTo(n,i);t.lineTo(r,u);t.lineTo(f,e);t.closePath()}function ft(n,i,r,u){wi(i);bi(r);ki(u);w(n.getStyle());t.stroke();h.expandByScalar(i*2)}function et(n){v(n.getStyle());t.fill()}function wt(n){vi(n.target)}function vi(n){var u=n.wrapS===THREE.RepeatWrapping,f=n.wrapT===THREE.RepeatWrapping,i=n.image,r=document.createElement("canvas"),e;r.width=i.width;r.height=i.height;e=r.getContext("2d");e.setTransform(1,0,0,-1,0,i.height);e.drawImage(i,0,0);ci[n.id]=t.createPattern(r,u===!0&&f===!0?"repeat":u===!0&&f===!1?"repeat-x":u===!1&&f===!0?"repeat-y":"no-repeat")}function yi(n,i,r,u,f,e,o,s,h,c,l,a,y){var w;if(!(y instanceof THREE.DataTexture)){if(y.hasEventListener("update",wt)===!1&&(y.image!==undefined&&y.image.width>0&&vi(y),y.addEventListener("update",wt)),w=ci[y.id],w!==undefined)v(w);else{v("rgba(0,0,0,1)");t.fill();return}var b,k,d,g,ft,et,nt,p,tt=y.offset.x/y.repeat.x,it=y.offset.y/y.repeat.y,rt=y.image.width*y.repeat.x,ut=y.image.height*y.repeat.y;(o=(o+tt)*rt,s=(s+it)*ut,h=(h+tt)*rt,c=(c+it)*ut,l=(l+tt)*rt,a=(a+it)*ut,r-=n,u-=i,f-=n,e-=i,h-=o,c-=s,l-=o,a-=s,nt=h*a-l*c,nt!==0)&&(p=1/nt,b=(a*r-c*f)*p,k=(a*u-c*e)*p,d=(h*f-l*r)*p,g=(h*e-l*u)*p,ft=n-b*o-d*s,et=i-k*o-g*s,t.save(),t.transform(b,k,d,g,ft,et),t.fill(),t.restore())}}function pi(n,t,i){var r=t.x-n.x,u=t.y-n.y,e=r*r+u*u,f;e!==0&&(f=i/Math.sqrt(e),r*=f,u*=f,t.x+=r,t.y+=u,n.x-=r,n.y-=u)}function bt(n){ni!==n&&(t.globalAlpha=n,ni=n)}function kt(n){ti!==n&&(n===THREE.NormalBlending?t.globalCompositeOperation="source-over":n===THREE.AdditiveBlending?t.globalCompositeOperation="lighter":n===THREE.SubtractiveBlending&&(t.globalCompositeOperation="darker"),ti=n)}function wi(n){ui!==n&&(t.lineWidth=n,ui=n)}function bi(n){fi!==n&&(t.lineCap=n,fi=n)}function ki(n){ei!==n&&(t.lineJoin=n,ei=n)}function w(n){ii!==n&&(t.strokeStyle=n,ii=n)}function v(n){ri!==n&&(t.fillStyle=n,ri=n)}function fr(n,i){(gi!==n||nr!==i)&&(t.setLineDash([n,i]),gi=n,nr=i)}var di;console.log("THREE.CanvasRenderer",THREE.REVISION);di=THREE.Math.smoothstep;n=n||{};var ot=this,dt,gt,b,er=new THREE.Projector,l=n.canvas!==undefined?n.canvas:document.createElement("canvas"),k=l.width,p=l.height,e=Math.floor(k/2),o=Math.floor(p/2),t=l.getContext("2d",{alpha:n.alpha===!0}),st=new THREE.Color(0),ht=0,ni=1,ti=0,ii=null,ri=null,ui=null,fi=null,ei=null,gi=null,nr=0,oi,f,s,c,vr=new THREE.RenderableVertex,yr=new THREE.RenderableVertex,d,g,nt,tt,it,rt,u=new THREE.Color,pr=new THREE.Color,wr=new THREE.Color,br=new THREE.Color,kr=new THREE.Color,si=new THREE.Color,tr=new THREE.Color,hi=new THREE.Color,ci={},y,ct,lt,at,vt,yt,pt,ut=new THREE.Box2,r=new THREE.Box2,h=new THREE.Box2,li=new THREE.Color,ir=new THREE.Color,rr=new THREE.Color,ai=new THREE.Vector3,ur=new THREE.Vector3,i=new THREE.Vector3,a=new THREE.Matrix3;t.setLineDash===undefined&&(t.setLineDash=function(){});this.domElement=l;this.devicePixelRatio=n.devicePixelRatio!==undefined?n.devicePixelRatio:self.devicePixelRatio!==undefined?self.devicePixelRatio:1;this.autoClear=!0;this.sortObjects=!0;this.sortElements=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(n,t,i){k=n*this.devicePixelRatio;p=t*this.devicePixelRatio;l.width=k;l.height=p;e=Math.floor(k/2);o=Math.floor(p/2);i!==!1&&(l.style.width=n+"px",l.style.height=t+"px");ut.min.set(-e,-o);ut.max.set(e,o);r.min.set(-e,-o);r.max.set(e,o);ni=1;ti=0;ii=null;ri=null;ui=null;fi=null;ei=null;this.setViewport(0,0,n,t)};this.setViewport=function(n,i,r,u){var f=n*this.devicePixelRatio,s=i*this.devicePixelRatio,h=r*this.devicePixelRatio,c=u*this.devicePixelRatio;t.setTransform(h/k,0,0,-c/p,f,p-s);t.translate(e,o)};this.setScissor=function(){};this.enableScissorTest=function(){};this.setClearColor=function(n,t){st.set(n);ht=t!==undefined?t:1;r.min.set(-e,-o);r.max.set(e,o)};this.setClearColorHex=function(n,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(n,t)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){r.empty()===!1&&(r.intersect(ut),r.expandByScalar(2),ht<1&&t.clearRect(r.min.x|0,r.min.y|0,r.max.x-r.min.x|0,r.max.y-r.min.y|0),ht>0&&(kt(THREE.NormalBlending),bt(1),v("rgba("+Math.floor(st.r*255)+","+Math.floor(st.g*255)+","+Math.floor(st.b*255)+","+ht+")"),t.fillRect(r.min.x|0,r.min.y|0,r.max.x-r.min.x|0,r.max.y-r.min.y|0)),r.makeEmpty())};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=function(n,t){var l,v,i,u;if(t instanceof THREE.Camera==!1){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");return}for(this.autoClear===!0&&this.clear(),ot.info.render.vertices=0,ot.info.render.faces=0,dt=er.projectScene(n,t,this.sortObjects,this.sortElements),gt=dt.elements,b=dt.lights,oi=t,a.getNormalMatrix(t.matrixWorldInverse),or(),l=0,v=gt.length;l<v;l++)if(i=gt[l],u=i.material,u!==undefined&&u.opacity!==0){if(h.makeEmpty(),i instanceof THREE.RenderableSprite)f=i,f.x*=e,f.y*=o,hr(f,i,u);else if(i instanceof THREE.RenderableLine)f=i.v1,s=i.v2,f.positionScreen.x*=e,f.positionScreen.y*=o,s.positionScreen.x*=e,s.positionScreen.y*=o,h.setFromPoints([f.positionScreen,s.positionScreen]),ut.isIntersectionBox(h)===!0&&cr(f,s,i,u);else if(i instanceof THREE.RenderableFace){if(f=i.v1,s=i.v2,c=i.v3,f.positionScreen.z<-1||f.positionScreen.z>1)continue;if(s.positionScreen.z<-1||s.positionScreen.z>1)continue;if(c.positionScreen.z<-1||c.positionScreen.z>1)continue;f.positionScreen.x*=e;f.positionScreen.y*=o;s.positionScreen.x*=e;s.positionScreen.y*=o;c.positionScreen.x*=e;c.positionScreen.y*=o;u.overdraw>0&&(pi(f.positionScreen,s.positionScreen,u.overdraw),pi(s.positionScreen,c.positionScreen,u.overdraw),pi(c.positionScreen,f.positionScreen,u.overdraw));h.setFromPoints([f.positionScreen,s.positionScreen,c.positionScreen]);ut.isIntersectionBox(h)===!0&&lr(f,s,c,0,1,2,i,u)}r.union(h)}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\tuniform samplerCube envMap;\n\tuniform float flipEnvMap;\n\tuniform int combine;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\t\tuniform bool useRefract;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\n\tvec3 reflectVec;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\t\tif ( useRefract ) {\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t} else { \n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\n\t\t}\n\t#else\n\t\treflectVec = vReflect;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#endif\n\t#ifdef GAMMA_INPUT\n\t\tcubeColor.xyz *= cubeColor.xyz;\n\t#endif\n\tif ( combine == 1 ) {\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\t} else if ( combine == 2 ) {\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\t} else {\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\t}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\tvarying vec3 vReflect;\n\tuniform float refractionRatio;\n\tuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#endif\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\t#endif\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\t#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\tif ( useRefract ) {\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t} else {\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\t#ifdef GAMMA_INPUT\n\t\ttexelColor.xyz *= texelColor.xyz;\n\t#endif\n\tgl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\n\tvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\n\tvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\t#ifdef DOUBLE_SIDED\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\t\t#ifdef WRAP_AROUND\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t#endif\n\t#endif\n\t#ifdef WRAP_AROUND\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\t\t#endif\n\t#endif\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\t#ifdef DOUBLE_SIDED\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\t#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef WRAP_AROUND\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\t\t\t#endif\n\t\t#endif\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\t\t#endif\n\t}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\tspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\t\tlVector = normalize( lVector );\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\t\t\t\t#ifdef WRAP_AROUND\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\t\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\t\t\t#ifdef DOUBLE_SIDED\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\t\t\t#endif\n\t\t}\n\t}\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\t\t#endif\n\t}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\tvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\tvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\tvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\n\tuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\n\tvec3 pointDiffuse  = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\t#ifdef WRAP_AROUND\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\t\t#else\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\t\t#endif\n\t\tpointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\t}\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\tvec3 spotDiffuse  = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\t\tlVector = normalize( lVector );\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\t\t\tspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\t\t\t#ifdef WRAP_AROUND\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\t\t\t#else\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\t\t\t#endif\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\t\t}\n\t}\n#endif\n#if MAX_DIR_LIGHTS > 0\n\tvec3 dirDiffuse  = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\t\tfloat dotProduct = dot( normal, dirVector );\n\t\t#ifdef WRAP_AROUND\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\t\t#else\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\t\t#endif\n\t\tdirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\t}\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\tvec3 hemiDiffuse  = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\t\themiDiffuse += diffuse * hemiColor;\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\n\t\tvec3 lVectorGround = -lVector;\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\t}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\t#ifdef GAMMA_INPUT\n\t\tvColor = color * color;\n\t#else\n\t\tvColor = color;\n\t#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\t#ifdef USE_MORPHTARGETS\n\tvec4 skinVertex = vec4( morphed, 1.0 );\n\t#else\n\tvec4 skinVertex = vec4( position, 1.0 );\n\t#endif\n\tvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\n\tskinned      += boneMatY * skinVertex * skinWeight.y;\n\tskinned      += boneMatZ * skinVertex * skinWeight.z;\n\tskinned      += boneMatW * skinVertex * skinWeight.w;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n\tmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\n\tmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tvec3 morphedNormal = vec3( 0.0 );\n\tmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\tmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = skinWeight.x * boneMatX;\n\tskinMatrix \t+= skinWeight.y * boneMatY;\n\tskinMatrix \t+= skinWeight.z * boneMatZ;\n\tskinMatrix \t+= skinWeight.w * boneMatW;\n\t#ifdef USE_MORPHNORMALS\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\t#else\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\t#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\n\tobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\tobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\tobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\t}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n\t#ifdef SHADOWMAP_DEBUG\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\t#endif\n\t#ifdef SHADOWMAP_CASCADE\n\t\tint inFrustumCount = 0;\n\t#endif\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\t#ifdef SHADOWMAP_CASCADE\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\t\t#else\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\t#endif\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\t\tfloat shadow = 0.0;\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\t\tfloat shadow = 0.0;\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\t\t\t#else\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\t\t\t#endif\n\t\t}\n\t\t#ifdef SHADOWMAP_DEBUG\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\t\t\t#else\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\t\t\t#endif\n\t\t#endif\n\t}\n\t#ifdef GAMMA_OUTPUT\n\t\tshadowColor *= shadowColor;\n\t#endif\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\t}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif",logdepthbuf_pars_vertex:["#ifdef USE_LOGDEPTHBUF","\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tvarying float vFragDepth;","\t#endif","\tuniform float logDepthBufFC;","#endif",].join("\n"),logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\t#endif\n#endif",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif"};THREE.UniformsUtils={merge:function(n){for(var i,r,u={},t=0;t<n.length;t++){r=this.clone(n[t]);for(i in r)u[i]=r[i]}return u},clone:function(n){var i,r,t,u={};for(i in n){u[i]={};for(r in n[i])t=n[i][r],u[i][r]=t instanceof THREE.Color||t instanceof THREE.Vector2||t instanceof THREE.Vector3||t instanceof THREE.Vector4||t instanceof THREE.Matrix4||t instanceof THREE.Texture?t.clone():t instanceof Array?t.slice():t}return u}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED","\t\tif ( gl_FrontFacing )","\t\t\tgl_FragColor.xyz *= vLightFront;","\t\telse","\t\t\tgl_FragColor.xyz *= vLightBack;","\t#else","\t\tgl_FragColor.xyz *= vLightFront;","\t#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\t#ifdef USE_SIZEATTENUATION","\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );","\t#else","\t\tgl_PointSize = size;","\t#endif","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;","\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tif ( mod( vLineDistance, totalSize ) > dashSize ) {","\t\tdiscard;","\t}","\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;","\t#else","\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;","\t#endif","\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );","\tgl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float refractionRatio;","uniform float reflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","\tuniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );","\tvec3 specularTex = vec3( 1.0 );","\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","\tnormalTex.xy *= uNormalScale;","\tnormalTex = normalize( normalTex );","\tif( enableDiffuse ) {","\t\t#ifdef GAMMA_INPUT","\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );","\t\t\ttexelColor.xyz *= texelColor.xyz;","\t\t\tgl_FragColor = gl_FragColor * texelColor;","\t\t#else","\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","\t\t#endif","\t}","\tif( enableAO ) {","\t\t#ifdef GAMMA_INPUT","\t\t\tvec4 aoColor = texture2D( tAO, vUv );","\t\t\taoColor.xyz *= aoColor.xyz;","\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","\t\t#else","\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","\t\t#endif","\t}","\tif( enableSpecular )","\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;","\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","\tvec3 finalNormal = tsb * normalTex;","\t#ifdef FLIP_SIDED","\t\tfinalNormal = -finalNormal;","\t#endif","\tvec3 normal = normalize( finalNormal );","\tvec3 viewPosition = normalize( vViewPosition );","\t#if MAX_POINT_LIGHTS > 0","\t\tvec3 pointDiffuse = vec3( 0.0 );","\t\tvec3 pointSpecular = vec3( 0.0 );","\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;","\t\t\tfloat pointDistance = 1.0;","\t\t\tif ( pointLightDistance[ i ] > 0.0 )","\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","\t\t\tpointVector = normalize( pointVector );","\t\t\t#ifdef WRAP_AROUND","\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","\t\t\t#else","\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","\t\t\t#endif","\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;","\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );","\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );","\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;","\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","\t\t}","\t#endif","\t#if MAX_SPOT_LIGHTS > 0","\t\tvec3 spotDiffuse = vec3( 0.0 );","\t\tvec3 spotSpecular = vec3( 0.0 );","\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;","\t\t\tfloat spotDistance = 1.0;","\t\t\tif ( spotLightDistance[ i ] > 0.0 )","\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","\t\t\tspotVector = normalize( spotVector );","\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {","\t\t\t\tspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","\t\t\t\t#ifdef WRAP_AROUND","\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","\t\t\t\t#else","\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","\t\t\t\t#endif","\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;","\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );","\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );","\t\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;","\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","\t\t\t}","\t\t}","\t#endif","\t#if MAX_DIR_LIGHTS > 0","\t\tvec3 dirDiffuse = vec3( 0.0 );","\t\tvec3 dirSpecular = vec3( 0.0 );","\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","\t\t\tvec3 dirVector = normalize( lDirection.xyz );","\t\t\t#ifdef WRAP_AROUND","\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","\t\t\t#else","\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","\t\t\t#endif","\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;","\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );","\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );","\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;","\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","\t\t}","\t#endif","\t#if MAX_HEMI_LIGHTS > 0","\t\tvec3 hemiDiffuse  = vec3( 0.0 );","\t\tvec3 hemiSpecular = vec3( 0.0 );","\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","\t\t\tvec3 lVector = normalize( lDirection.xyz );","\t\t\tfloat dotProduct = dot( normal, lVector );","\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","\t\t\themiDiffuse += diffuse * hemiColor;","\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","\t\t\tvec3 lVectorGround = -lVector;","\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","\t\t\tfloat dotProductGround = dot( normal, lVectorGround );","\t\t\tfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;","\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","\t\t}","\t#endif","\tvec3 totalDiffuse = vec3( 0.0 );","\tvec3 totalSpecular = vec3( 0.0 );","\t#if MAX_DIR_LIGHTS > 0","\t\ttotalDiffuse += dirDiffuse;","\t\ttotalSpecular += dirSpecular;","\t#endif","\t#if MAX_HEMI_LIGHTS > 0","\t\ttotalDiffuse += hemiDiffuse;","\t\ttotalSpecular += hemiSpecular;","\t#endif","\t#if MAX_POINT_LIGHTS > 0","\t\ttotalDiffuse += pointDiffuse;","\t\ttotalSpecular += pointSpecular;","\t#endif","\t#if MAX_SPOT_LIGHTS > 0","\t\ttotalDiffuse += spotDiffuse;","\t\ttotalSpecular += spotSpecular;","\t#endif","\t#ifdef METAL","\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );","\t#else","\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","\t#endif","\tif ( enableReflection ) {","\t\tvec3 vReflect;","\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","\t\tif ( useRefract ) {","\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );","\t\t} else {","\t\t\tvReflect = reflect( cameraToVertex, normal );","\t\t}","\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","\t\t#ifdef GAMMA_INPUT","\t\t\tcubeColor.xyz *= cubeColor.xyz;","\t\t#endif","\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );","\t}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","\tuniform sampler2D tDisplacement;","\tuniform float uDisplacementScale;","\tuniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING","\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );","\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );","\t#else","\t\tvNormal = normalize( normalMatrix * normal );","\t\tvTangent = normalize( normalMatrix * tangent.xyz );","\t#endif","\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","\tvUv = uv * uRepeat + uOffset;","\tvec3 displacedPosition;","\t#ifdef VERTEX_TEXTURES","\t\tif ( enableDisplacement ) {","\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;","\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;","\t\t\tdisplacedPosition = position + normalize( normal ) * df;","\t\t} else {","\t\t\t#ifdef USE_SKINNING","\t\t\t\tvec4 skinVertex = vec4( position, 1.0 );","\t\t\t\tvec4 skinned  = boneMatX * skinVertex * skinWeight.x;","\t\t\t\tskinned \t  += boneMatY * skinVertex * skinWeight.y;","\t\t\t\tskinned \t  += boneMatZ * skinVertex * skinWeight.z;","\t\t\t\tskinned \t  += boneMatW * skinVertex * skinWeight.w;","\t\t\t\tdisplacedPosition  = skinned.xyz;","\t\t\t#else","\t\t\t\tdisplacedPosition = position;","\t\t\t#endif","\t\t}","\t#else","\t\t#ifdef USE_SKINNING","\t\t\tvec4 skinVertex = vec4( position, 1.0 );","\t\t\tvec4 skinned  = boneMatX * skinVertex * skinWeight.x;","\t\t\tskinned \t  += boneMatY * skinVertex * skinWeight.y;","\t\t\tskinned \t  += boneMatZ * skinVertex * skinWeight.z;","\t\t\tskinned \t  += boneMatW * skinVertex * skinWeight.w;","\t\t\tdisplacedPosition  = skinned.xyz;","\t\t#else","\t\t\tdisplacedPosition = position;","\t\t#endif","\t#endif","\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;","\tvViewPosition = -mvPosition.xyz;","\t#ifdef USE_SHADOWMAP","\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {","\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","\t\t}","\t#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );","\tvWorldPosition = worldPosition.xyz;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","\tconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","\tres -= res.xxyz * bit_mask;","\treturn res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","\t#else","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","\t#endif","}"].join("\n")}};THREE.WebGLRenderer=function(n){function uf(n){n.__webglVertexBuffer=t.createBuffer();n.__webglColorBuffer=t.createBuffer();i.info.memory.geometries++}function ff(n){n.__webglVertexBuffer=t.createBuffer();n.__webglColorBuffer=t.createBuffer();n.__webglLineDistanceBuffer=t.createBuffer();i.info.memory.geometries++}function ef(n){n.__webglVertexBuffer=t.createBuffer();n.__webglNormalBuffer=t.createBuffer();n.__webglTangentBuffer=t.createBuffer();n.__webglColorBuffer=t.createBuffer();n.__webglUVBuffer=t.createBuffer();n.__webglUV2Buffer=t.createBuffer();n.__webglSkinIndicesBuffer=t.createBuffer();n.__webglSkinWeightsBuffer=t.createBuffer();n.__webglFaceBuffer=t.createBuffer();n.__webglLineBuffer=t.createBuffer();var r,u;if(n.numMorphTargets)for(n.__webglMorphTargetsBuffers=[],r=0,u=n.numMorphTargets;r<u;r++)n.__webglMorphTargetsBuffers.push(t.createBuffer());if(n.numMorphNormals)for(n.__webglMorphNormalsBuffers=[],r=0,u=n.numMorphNormals;r<u;r++)n.__webglMorphNormalsBuffers.push(t.createBuffer());i.info.memory.geometries++}function yr(n,i){var o=n.vertices.length,f=i.material,e,r,u;if(f.attributes){n.__webglCustomAttributesList===undefined&&(n.__webglCustomAttributesList=[]);for(e in f.attributes)r=f.attributes[e],(!r.__webglInitialized||r.createUniqueBuffers)&&(r.__webglInitialized=!0,u=1,r.type==="v2"?u=2:r.type==="v3"?u=3:r.type==="v4"?u=4:r.type==="c"&&(u=3),r.size=u,r.array=new Float32Array(o*u),r.buffer=t.createBuffer(),r.buffer.belongsToAttribute=e,r.needsUpdate=!0),n.__webglCustomAttributesList.push(r)}}function cf(n,t){var i=n.vertices.length;n.__vertexArray=new Float32Array(i*3);n.__colorArray=new Float32Array(i*3);n.__sortArray=[];n.__webglParticleCount=i;yr(n,t)}function lf(n,t){var i=n.vertices.length;n.__vertexArray=new Float32Array(i*3);n.__colorArray=new Float32Array(i*3);n.__lineDistanceArray=new Float32Array(i*1);n.__webglLineCount=i;yr(n,t)}function pr(n,i){var l=i.geometry,a=n.faces3,u=a.length*3,v=a.length*1,w=a.length*3,e=pt(i,n),b=kr(e),k=wr(e),d=br(e),h,o,c,y,s,r,p,f;if(n.__vertexArray=new Float32Array(u*3),k&&(n.__normalArray=new Float32Array(u*3)),l.hasTangents&&(n.__tangentArray=new Float32Array(u*4)),d&&(n.__colorArray=new Float32Array(u*3)),b&&(l.faceVertexUvs.length>0&&(n.__uvArray=new Float32Array(u*2)),l.faceVertexUvs.length>1&&(n.__uv2Array=new Float32Array(u*2))),i.geometry.skinWeights.length&&i.geometry.skinIndices.length&&(n.__skinIndexArray=new Float32Array(u*4),n.__skinWeightArray=new Float32Array(u*4)),h=yt!==null&&v>21845?Uint32Array:Uint16Array,n.__typeArray=h,n.__faceArray=new h(v*3),n.__lineArray=new h(w*2),n.numMorphTargets)for(n.__morphTargetsArrays=[],o=0,c=n.numMorphTargets;o<c;o++)n.__morphTargetsArrays.push(new Float32Array(u*3));if(n.numMorphNormals)for(n.__morphNormalsArrays=[],o=0,c=n.numMorphNormals;o<c;o++)n.__morphNormalsArrays.push(new Float32Array(u*3));if(n.__webglFaceCount=v*3,n.__webglLineCount=w*2,e.attributes){n.__webglCustomAttributesList===undefined&&(n.__webglCustomAttributesList=[]);for(y in e.attributes){s=e.attributes[y];r={};for(p in s)r[p]=s[p];(!r.__webglInitialized||r.createUniqueBuffers)&&(r.__webglInitialized=!0,f=1,r.type==="v2"?f=2:r.type==="v3"?f=3:r.type==="v4"?f=4:r.type==="c"&&(f=3),r.size=f,r.array=new Float32Array(u*f),r.buffer=t.createBuffer(),r.buffer.belongsToAttribute=y,s.needsUpdate=!0,r.__original=s);n.__webglCustomAttributesList.push(r)}}n.__inittedArrays=!0}function pt(n,t){return n.material instanceof THREE.MeshFaceMaterial?n.material.materials[t.materialIndex]:n.material}function af(n){return n&&n.shading!==undefined&&n.shading===THREE.SmoothShading}function wr(n){return n instanceof THREE.MeshBasicMaterial&&!n.envMap||n instanceof THREE.MeshDepthMaterial?!1:af(n)?THREE.SmoothShading:THREE.FlatShading}function br(n){return n.vertexColors?n.vertexColors:!1}function kr(n){return n.map||n.lightMap||n.bumpMap||n.normalMap||n.specularMap||n instanceof THREE.ShaderMaterial?!0:!1}function vf(n){var r,u,i;for(r in n.attributes)u=r==="index"?t.ELEMENT_ARRAY_BUFFER:t.ARRAY_BUFFER,i=n.attributes[r],i.buffer=t.createBuffer(),t.bindBuffer(u,i.buffer),t.bufferData(u,i.array,t.STATIC_DRAW)}function yf(n,i,u){var h,a,v,e,y,b,nt=n.vertices,tt=nt.length,it=n.colors,rt=it.length,k=n.__vertexArray,d=n.__colorArray,p=n.__sortArray,ut=n.verticesNeedUpdate,et=n.elementsNeedUpdate,ft=n.colorsNeedUpdate,w=n.__webglCustomAttributesList,c,g,o,l,s,f;if(u.sortParticles){for(ii.copy(at),ii.multiply(u.matrixWorld),h=0;h<tt;h++)v=nt[h],r.copy(v),r.applyProjection(ii),p[h]=[r.z,h];for(p.sort(hi),h=0;h<tt;h++)v=nt[p[h][1]],e=h*3,k[e]=v.x,k[e+1]=v.y,k[e+2]=v.z;for(a=0;a<rt;a++)e=a*3,b=it[p[a][1]],d[e]=b.r,d[e+1]=b.g,d[e+2]=b.b;if(w)for(c=0,g=w.length;c<g;c++)if(f=w[c],f.boundTo===undefined||f.boundTo==="vertices")if(e=0,l=f.value.length,f.size===1)for(o=0;o<l;o++)y=p[o][1],f.array[o]=f.value[y];else if(f.size===2)for(o=0;o<l;o++)y=p[o][1],s=f.value[y],f.array[e]=s.x,f.array[e+1]=s.y,e+=2;else if(f.size===3)if(f.type==="c")for(o=0;o<l;o++)y=p[o][1],s=f.value[y],f.array[e]=s.r,f.array[e+1]=s.g,f.array[e+2]=s.b,e+=3;else for(o=0;o<l;o++)y=p[o][1],s=f.value[y],f.array[e]=s.x,f.array[e+1]=s.y,f.array[e+2]=s.z,e+=3;else if(f.size===4)for(o=0;o<l;o++)y=p[o][1],s=f.value[y],f.array[e]=s.x,f.array[e+1]=s.y,f.array[e+2]=s.z,f.array[e+3]=s.w,e+=4}else{if(ut)for(h=0;h<tt;h++)v=nt[h],e=h*3,k[e]=v.x,k[e+1]=v.y,k[e+2]=v.z;if(ft)for(a=0;a<rt;a++)b=it[a],e=a*3,d[e]=b.r,d[e+1]=b.g,d[e+2]=b.b;if(w)for(c=0,g=w.length;c<g;c++)if(f=w[c],f.needsUpdate&&(f.boundTo===undefined||f.boundTo==="vertices"))if(l=f.value.length,e=0,f.size===1)for(o=0;o<l;o++)f.array[o]=f.value[o];else if(f.size===2)for(o=0;o<l;o++)s=f.value[o],f.array[e]=s.x,f.array[e+1]=s.y,e+=2;else if(f.size===3)if(f.type==="c")for(o=0;o<l;o++)s=f.value[o],f.array[e]=s.r,f.array[e+1]=s.g,f.array[e+2]=s.b,e+=3;else for(o=0;o<l;o++)s=f.value[o],f.array[e]=s.x,f.array[e+1]=s.y,f.array[e+2]=s.z,e+=3;else if(f.size===4)for(o=0;o<l;o++)s=f.value[o],f.array[e]=s.x,f.array[e+1]=s.y,f.array[e+2]=s.z,f.array[e+3]=s.w,e+=4}if((ut||u.sortParticles)&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglVertexBuffer),t.bufferData(t.ARRAY_BUFFER,k,i)),(ft||u.sortParticles)&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglColorBuffer),t.bufferData(t.ARRAY_BUFFER,d,i)),w)for(c=0,g=w.length;c<g;c++)f=w[c],(f.needsUpdate||u.sortParticles)&&(t.bindBuffer(t.ARRAY_BUFFER,f.buffer),t.bufferData(t.ARRAY_BUFFER,f.array,i))}function pf(n,i){var s,h,c,l,u,a,b=n.vertices,k=n.colors,d=n.lineDistances,tt=b.length,it=k.length,rt=d.length,v=n.__vertexArray,y=n.__colorArray,g=n.__lineDistanceArray,ut=n.verticesNeedUpdate,ft=n.colorsNeedUpdate,et=n.lineDistancesNeedUpdate,w=n.__webglCustomAttributesList,p,nt,f,o,e,r;if(ut){for(s=0;s<tt;s++)l=b[s],u=s*3,v[u]=l.x,v[u+1]=l.y,v[u+2]=l.z;t.bindBuffer(t.ARRAY_BUFFER,n.__webglVertexBuffer);t.bufferData(t.ARRAY_BUFFER,v,i)}if(ft){for(h=0;h<it;h++)a=k[h],u=h*3,y[u]=a.r,y[u+1]=a.g,y[u+2]=a.b;t.bindBuffer(t.ARRAY_BUFFER,n.__webglColorBuffer);t.bufferData(t.ARRAY_BUFFER,y,i)}if(et){for(c=0;c<rt;c++)g[c]=d[c];t.bindBuffer(t.ARRAY_BUFFER,n.__webglLineDistanceBuffer);t.bufferData(t.ARRAY_BUFFER,g,i)}if(w)for(p=0,nt=w.length;p<nt;p++)if(r=w[p],r.needsUpdate&&(r.boundTo===undefined||r.boundTo==="vertices")){if(u=0,o=r.value.length,r.size===1)for(f=0;f<o;f++)r.array[f]=r.value[f];else if(r.size===2)for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.x,r.array[u+1]=e.y,u+=2;else if(r.size===3)if(r.type==="c")for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.r,r.array[u+1]=e.g,r.array[u+2]=e.b,u+=3;else for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.x,r.array[u+1]=e.y,r.array[u+2]=e.z,u+=3;else if(r.size===4)for(f=0;f<o;f++)e=r.value[f],r.array[u]=e.x,r.array[u+1]=e.y,r.array[u+2]=e.z,r.array[u+3]=e.w,u+=4;t.bindBuffer(t.ARRAY_BUFFER,r.buffer);t.bufferData(t.ARRAY_BUFFER,r.array,i)}}function wf(n,i,r,u,f){var p;if(n.__inittedArrays){var yr=wr(f),pr=br(f),dr=kr(f),gr=yr===THREE.SmoothShading,s,v,ai,a,ur,vi,kt,yi,pi,fr,er,h,c,l,dt,gt,ni,yt,ti,ii,ri,ui,fi,ei,oi,si,hi,ci,li,d,nu,wi,or,sr,nt,tu,et,ot,bi,ki,st=0,ht=0,di=0,gi=0,nr=0,vt=0,tt=0,pt=0,ft=0,w=0,k=0,o=0,su=0,b,ct=n.__vertexArray,hr=n.__uvArray,cr=n.__uv2Array,wt=n.__normalArray,it=n.__tangentArray,lt=n.__colorArray,rt=n.__skinIndexArray,ut=n.__skinWeightArray,iu=n.__morphTargetsArrays,ru=n.__morphNormalsArrays,lr=n.__webglCustomAttributesList,e,tr=n.__faceArray,bt=n.__lineArray,g=i.geometry,hu=g.verticesNeedUpdate,cu=g.elementsNeedUpdate,uu=g.uvsNeedUpdate,lu=g.normalsNeedUpdate,au=g.tangentsNeedUpdate,vu=g.colorsNeedUpdate,yu=g.morphTargetsNeedUpdate,ar=g.vertices,y=n.faces3,at=g.faces,fu=g.faceVertexUvs[0],eu=g.faceVertexUvs[1],pu=g.colors,vr=g.skinIndices,ir=g.skinWeights,rr=g.morphTargets,ou=g.morphNormals;if(hu){for(s=0,v=y.length;s<v;s++)a=at[y[s]],h=ar[a.a],c=ar[a.b],l=ar[a.c],ct[ht]=h.x,ct[ht+1]=h.y,ct[ht+2]=h.z,ct[ht+3]=c.x,ct[ht+4]=c.y,ct[ht+5]=c.z,ct[ht+6]=l.x,ct[ht+7]=l.y,ct[ht+8]=l.z,ht+=9;t.bindBuffer(t.ARRAY_BUFFER,n.__webglVertexBuffer);t.bufferData(t.ARRAY_BUFFER,ct,r)}if(yu)for(nt=0,tu=rr.length;nt<tu;nt++){for(k=0,s=0,v=y.length;s<v;s++)bi=y[s],a=at[bi],h=rr[nt].vertices[a.a],c=rr[nt].vertices[a.b],l=rr[nt].vertices[a.c],et=iu[nt],et[k]=h.x,et[k+1]=h.y,et[k+2]=h.z,et[k+3]=c.x,et[k+4]=c.y,et[k+5]=c.z,et[k+6]=l.x,et[k+7]=l.y,et[k+8]=l.z,f.morphNormals&&(gr?(ki=ou[nt].vertexNormals[bi],yt=ki.a,ti=ki.b,ii=ki.c):(yt=ou[nt].faceNormals[bi],ti=yt,ii=yt),ot=ru[nt],ot[k]=yt.x,ot[k+1]=yt.y,ot[k+2]=yt.z,ot[k+3]=ti.x,ot[k+4]=ti.y,ot[k+5]=ti.z,ot[k+6]=ii.x,ot[k+7]=ii.y,ot[k+8]=ii.z),k+=9;t.bindBuffer(t.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[nt]);t.bufferData(t.ARRAY_BUFFER,iu[nt],r);f.morphNormals&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[nt]),t.bufferData(t.ARRAY_BUFFER,ru[nt],r))}if(ir.length){for(s=0,v=y.length;s<v;s++)a=at[y[s]],ei=ir[a.a],oi=ir[a.b],si=ir[a.c],ut[w]=ei.x,ut[w+1]=ei.y,ut[w+2]=ei.z,ut[w+3]=ei.w,ut[w+4]=oi.x,ut[w+5]=oi.y,ut[w+6]=oi.z,ut[w+7]=oi.w,ut[w+8]=si.x,ut[w+9]=si.y,ut[w+10]=si.z,ut[w+11]=si.w,hi=vr[a.a],ci=vr[a.b],li=vr[a.c],rt[w]=hi.x,rt[w+1]=hi.y,rt[w+2]=hi.z,rt[w+3]=hi.w,rt[w+4]=ci.x,rt[w+5]=ci.y,rt[w+6]=ci.z,rt[w+7]=ci.w,rt[w+8]=li.x,rt[w+9]=li.y,rt[w+10]=li.z,rt[w+11]=li.w,w+=12;w>0&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),t.bufferData(t.ARRAY_BUFFER,rt,r),t.bindBuffer(t.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),t.bufferData(t.ARRAY_BUFFER,ut,r))}if(vu&&pr){for(s=0,v=y.length;s<v;s++)a=at[y[s]],kt=a.vertexColors,yi=a.color,kt.length===3&&pr===THREE.VertexColors?(ri=kt[0],ui=kt[1],fi=kt[2]):(ri=yi,ui=yi,fi=yi),lt[ft]=ri.r,lt[ft+1]=ri.g,lt[ft+2]=ri.b,lt[ft+3]=ui.r,lt[ft+4]=ui.g,lt[ft+5]=ui.b,lt[ft+6]=fi.r,lt[ft+7]=fi.g,lt[ft+8]=fi.b,ft+=9;ft>0&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglColorBuffer),t.bufferData(t.ARRAY_BUFFER,lt,r))}if(au&&g.hasTangents){for(s=0,v=y.length;s<v;s++)a=at[y[s]],pi=a.vertexTangents,dt=pi[0],gt=pi[1],ni=pi[2],it[tt]=dt.x,it[tt+1]=dt.y,it[tt+2]=dt.z,it[tt+3]=dt.w,it[tt+4]=gt.x,it[tt+5]=gt.y,it[tt+6]=gt.z,it[tt+7]=gt.w,it[tt+8]=ni.x,it[tt+9]=ni.y,it[tt+10]=ni.z,it[tt+11]=ni.w,tt+=12;t.bindBuffer(t.ARRAY_BUFFER,n.__webglTangentBuffer);t.bufferData(t.ARRAY_BUFFER,it,r)}if(lu&&yr){for(s=0,v=y.length;s<v;s++)if(a=at[y[s]],ur=a.vertexNormals,vi=a.normal,ur.length===3&&gr)for(d=0;d<3;d++)wi=ur[d],wt[vt]=wi.x,wt[vt+1]=wi.y,wt[vt+2]=wi.z,vt+=3;else for(d=0;d<3;d++)wt[vt]=vi.x,wt[vt+1]=vi.y,wt[vt+2]=vi.z,vt+=3;t.bindBuffer(t.ARRAY_BUFFER,n.__webglNormalBuffer);t.bufferData(t.ARRAY_BUFFER,wt,r)}if(uu&&fu&&dr){for(s=0,v=y.length;s<v;s++)if(ai=y[s],fr=fu[ai],fr!==undefined)for(d=0;d<3;d++)or=fr[d],hr[di]=or.x,hr[di+1]=or.y,di+=2;di>0&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglUVBuffer),t.bufferData(t.ARRAY_BUFFER,hr,r))}if(uu&&eu&&dr){for(s=0,v=y.length;s<v;s++)if(ai=y[s],er=eu[ai],er!==undefined)for(d=0;d<3;d++)sr=er[d],cr[gi]=sr.x,cr[gi+1]=sr.y,gi+=2;gi>0&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglUV2Buffer),t.bufferData(t.ARRAY_BUFFER,cr,r))}if(cu){for(s=0,v=y.length;s<v;s++)tr[nr]=st,tr[nr+1]=st+1,tr[nr+2]=st+2,nr+=3,bt[pt]=st,bt[pt+1]=st+1,bt[pt+2]=st,bt[pt+3]=st+2,bt[pt+4]=st+1,bt[pt+5]=st+2,pt+=6,st+=3;t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer);t.bufferData(t.ELEMENT_ARRAY_BUFFER,tr,r);t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer);t.bufferData(t.ELEMENT_ARRAY_BUFFER,bt,r)}if(lr)for(d=0,nu=lr.length;d<nu;d++)if(e=lr[d],e.__original.needsUpdate){if(o=0,su=0,e.size===1){if(e.boundTo===undefined||e.boundTo==="vertices")for(s=0,v=y.length;s<v;s++)a=at[y[s]],e.array[o]=e.value[a.a],e.array[o+1]=e.value[a.b],e.array[o+2]=e.value[a.c],o+=3;else if(e.boundTo==="faces")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],e.array[o]=b,e.array[o+1]=b,e.array[o+2]=b,o+=3}else if(e.size===2){if(e.boundTo===undefined||e.boundTo==="vertices")for(s=0,v=y.length;s<v;s++)a=at[y[s]],h=e.value[a.a],c=e.value[a.b],l=e.value[a.c],e.array[o]=h.x,e.array[o+1]=h.y,e.array[o+2]=c.x,e.array[o+3]=c.y,e.array[o+4]=l.x,e.array[o+5]=l.y,o+=6;else if(e.boundTo==="faces")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],h=b,c=b,l=b,e.array[o]=h.x,e.array[o+1]=h.y,e.array[o+2]=c.x,e.array[o+3]=c.y,e.array[o+4]=l.x,e.array[o+5]=l.y,o+=6}else if(e.size===3){if(p=e.type==="c"?["r","g","b"]:["x","y","z"],e.boundTo===undefined||e.boundTo==="vertices")for(s=0,v=y.length;s<v;s++)a=at[y[s]],h=e.value[a.a],c=e.value[a.b],l=e.value[a.c],e.array[o]=h[p[0]],e.array[o+1]=h[p[1]],e.array[o+2]=h[p[2]],e.array[o+3]=c[p[0]],e.array[o+4]=c[p[1]],e.array[o+5]=c[p[2]],e.array[o+6]=l[p[0]],e.array[o+7]=l[p[1]],e.array[o+8]=l[p[2]],o+=9;else if(e.boundTo==="faces")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],h=b,c=b,l=b,e.array[o]=h[p[0]],e.array[o+1]=h[p[1]],e.array[o+2]=h[p[2]],e.array[o+3]=c[p[0]],e.array[o+4]=c[p[1]],e.array[o+5]=c[p[2]],e.array[o+6]=l[p[0]],e.array[o+7]=l[p[1]],e.array[o+8]=l[p[2]],o+=9;else if(e.boundTo==="faceVertices")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],h=b[0],c=b[1],l=b[2],e.array[o]=h[p[0]],e.array[o+1]=h[p[1]],e.array[o+2]=h[p[2]],e.array[o+3]=c[p[0]],e.array[o+4]=c[p[1]],e.array[o+5]=c[p[2]],e.array[o+6]=l[p[0]],e.array[o+7]=l[p[1]],e.array[o+8]=l[p[2]],o+=9}else if(e.size===4)if(e.boundTo===undefined||e.boundTo==="vertices")for(s=0,v=y.length;s<v;s++)a=at[y[s]],h=e.value[a.a],c=e.value[a.b],l=e.value[a.c],e.array[o]=h.x,e.array[o+1]=h.y,e.array[o+2]=h.z,e.array[o+3]=h.w,e.array[o+4]=c.x,e.array[o+5]=c.y,e.array[o+6]=c.z,e.array[o+7]=c.w,e.array[o+8]=l.x,e.array[o+9]=l.y,e.array[o+10]=l.z,e.array[o+11]=l.w,o+=12;else if(e.boundTo==="faces")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],h=b,c=b,l=b,e.array[o]=h.x,e.array[o+1]=h.y,e.array[o+2]=h.z,e.array[o+3]=h.w,e.array[o+4]=c.x,e.array[o+5]=c.y,e.array[o+6]=c.z,e.array[o+7]=c.w,e.array[o+8]=l.x,e.array[o+9]=l.y,e.array[o+10]=l.z,e.array[o+11]=l.w,o+=12;else if(e.boundTo==="faceVertices")for(s=0,v=y.length;s<v;s++)b=e.value[y[s]],h=b[0],c=b[1],l=b[2],e.array[o]=h.x,e.array[o+1]=h.y,e.array[o+2]=h.z,e.array[o+3]=h.w,e.array[o+4]=c.x,e.array[o+5]=c.y,e.array[o+6]=c.z,e.array[o+7]=c.w,e.array[o+8]=l.x,e.array[o+9]=l.y,e.array[o+10]=l.z,e.array[o+11]=l.w,o+=12;t.bindBuffer(t.ARRAY_BUFFER,e.buffer);t.bufferData(t.ARRAY_BUFFER,e.array,r)}u&&(delete n.__inittedArrays,delete n.__colorArray,delete n.__normalArray,delete n.__tangentArray,delete n.__uvArray,delete n.__uv2Array,delete n.__faceArray,delete n.__vertexArray,delete n.__lineArray,delete n.__skinIndexArray,delete n.__skinWeightArray)}}function bf(n,i){var f=n.attributes,u,r;for(u in f)r=f[u],r.needsUpdate&&(u==="index"?(t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r.buffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,r.array,i)):(t.bindBuffer(t.ARRAY_BUFFER,r.buffer),t.bufferData(t.ARRAY_BUFFER,r.array,i)),r.needsUpdate=!1)}function v(n,i,r,u){var e,o,s,h;for(e in i)o=i[e],s=r[e],o>=0&&(s?(h=s.itemSize,t.bindBuffer(t.ARRAY_BUFFER,s.buffer),f(o),t.vertexAttribPointer(o,h,t.FLOAT,!1,0,u*h*4)):n.defaultAttributeValues&&(n.defaultAttributeValues[e].length===2?t.vertexAttrib2fv(o,n.defaultAttributeValues[e]):n.defaultAttributeValues[e].length===3&&t.vertexAttrib3fv(o,n.defaultAttributeValues[e])));si()}function oi(){for(var n=0,t=lt.length;n<t;n++)lt[n]=0}function f(n){lt[n]=1;rt[n]===0&&(t.enableVertexAttribArray(n),rt[n]=1)}function si(){for(var n=0,i=rt.length;n<i;n++)rt[n]!==lt[n]&&(t.disableVertexAttribArray(n),rt[n]=0)}function kf(n,i,r){var e=n.program.attributes,l,u;if(r.morphTargetBase!==-1&&e.position>=0?(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[r.morphTargetBase]),f(e.position),t.vertexAttribPointer(e.position,3,t.FLOAT,!1,0,0)):e.position>=0&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglVertexBuffer),f(e.position),t.vertexAttribPointer(e.position,3,t.FLOAT,!1,0,0)),r.morphTargetForcedOrder.length)for(var u=0,h=r.morphTargetForcedOrder,c=r.morphTargetInfluences;u<n.numSupportedMorphTargets&&u<h.length;)e["morphTarget"+u]>=0&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[h[u]]),f(e["morphTarget"+u]),t.vertexAttribPointer(e["morphTarget"+u],3,t.FLOAT,!1,0,0)),e["morphNormal"+u]>=0&&n.morphNormals&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[h[u]]),f(e["morphNormal"+u]),t.vertexAttribPointer(e["morphNormal"+u],3,t.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[u]=c[h[u]],u++;else{for(var a,o=[],c=r.morphTargetInfluences,v=c.length,s=0;s<v;s++)a=c[s],a>0&&o.push([a,s]);for(o.length>n.numSupportedMorphTargets?(o.sort(hi),o.length=n.numSupportedMorphTargets):o.length>n.numSupportedMorphNormals?o.sort(hi):o.length===0&&o.push([0,0]),u=0;u<n.numSupportedMorphTargets;)o[u]?(l=o[u][1],e["morphTarget"+u]>=0&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphTargetsBuffers[l]),f(e["morphTarget"+u]),t.vertexAttribPointer(e["morphTarget"+u],3,t.FLOAT,!1,0,0)),e["morphNormal"+u]>=0&&n.morphNormals&&(t.bindBuffer(t.ARRAY_BUFFER,i.__webglMorphNormalsBuffers[l]),f(e["morphNormal"+u]),t.vertexAttribPointer(e["morphNormal"+u],3,t.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[u]=c[l]):r.__webglMorphTargetInfluences[u]=0,u++}n.program.uniforms.morphTargetInfluences!==null&&t.uniform1fv(n.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}function df(n,t){return n.z!==t.z?t.z-n.z:n.id-t.id}function hi(n,t){return t[0]-n[0]}function dr(n,t,i){if(n.length)for(var r=0,u=n.length;r<u;r++)b=null,k=null,nt=-1,tt=-1,it=-1,d=-1,g=-1,l=-1,y=-1,p=!0,n[r].render(t,i,rr,ur),b=null,k=null,nt=-1,tt=-1,it=-1,d=-1,g=-1,l=-1,y=-1,p=!0}function ci(n,t,r,u,f,e,o,s){var c,v,l,h,y,p,w,a;for(t?(y=n.length-1,p=-1,w=-1):(y=0,p=n.length,w=1),a=y;a!==p;a+=w)if(c=n[a],c.render){if(v=c.object,l=c.buffer,s)h=s;else{if(h=c[r],!h)continue;o&&i.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);i.setDepthTest(h.depthTest);i.setDepthWrite(h.depthWrite);ki(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}i.setMaterialFaces(h);l instanceof THREE.BufferGeometry?i.renderBufferDirect(u,f,e,h,l,v):i.renderBuffer(u,f,e,h,l,v)}}function li(n,t,r,u,f,e,o){for(var h,c,s,l=0,a=n.length;l<a;l++)if(h=n[l],c=h.object,c.visible){if(o)s=o;else{if(s=h[t],!s)continue;e&&i.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst);i.setDepthTest(s.depthTest);i.setDepthWrite(s.depthWrite);ki(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}i.renderImmediateObject(r,u,f,s,c)}}function gf(n){var i=n.object,t=i.material;t.transparent?(n.transparent=t,n.opaque=null):(n.opaque=t,n.transparent=null)}function ne(n){var i=n.object,u=n.buffer,f=i.geometry,t=i.material,r;t instanceof THREE.MeshFaceMaterial?(r=f instanceof THREE.BufferGeometry?0:u.materialIndex,t=t.materials[r],t.transparent?(n.transparent=t,n.opaque=null):(n.opaque=t,n.transparent=null)):t&&(t.transparent?(n.transparent=t,n.opaque=null):(n.opaque=t,n.transparent=null))}function gr(n,t){var u,i,f,r;if(n.__webglInit===undefined&&(n.__webglInit=!0,n._modelViewMatrix=new THREE.Matrix4,n._normalMatrix=new THREE.Matrix3,i=n.geometry,i!==undefined&&i.__webglInit===undefined))if(i.__webglInit=!0,i.addEventListener("dispose",hr),i instanceof THREE.BufferGeometry)vf(i);else if(n instanceof THREE.Mesh){f=n.material;i.geometryGroups===undefined&&i.makeGroups(f instanceof THREE.MeshFaceMaterial,yt?4294967296:65535);for(u in i.geometryGroups)r=i.geometryGroups[u],r.__webglVertexBuffer||(ef(r),pr(r,n),i.verticesNeedUpdate=!0,i.morphTargetsNeedUpdate=!0,i.elementsNeedUpdate=!0,i.uvsNeedUpdate=!0,i.normalsNeedUpdate=!0,i.tangentsNeedUpdate=!0,i.colorsNeedUpdate=!0)}else n instanceof THREE.Line?i.__webglVertexBuffer||(ff(i),lf(i,n),i.verticesNeedUpdate=!0,i.colorsNeedUpdate=!0,i.lineDistancesNeedUpdate=!0):n instanceof THREE.ParticleSystem&&(i.__webglVertexBuffer||(uf(i),cf(i,n),i.verticesNeedUpdate=!0,i.colorsNeedUpdate=!0));if(n.__webglActive===undefined){if(n instanceof THREE.Mesh){if(i=n.geometry,i instanceof THREE.BufferGeometry)ai(t.__webglObjects,i,n);else if(i instanceof THREE.Geometry)for(u in i.geometryGroups)r=i.geometryGroups[u],ai(t.__webglObjects,r,n)}else n instanceof THREE.Line||n instanceof THREE.ParticleSystem?(i=n.geometry,ai(t.__webglObjects,i,n)):n instanceof THREE.ImmediateRenderObject||n.immediateRenderCallback?te(t.__webglObjectsImmediate,n):n instanceof THREE.Sprite?t.__webglSprites.push(n):n instanceof THREE.LensFlare&&t.__webglFlares.push(n);n.__webglActive=!0}}function ai(n,t,i){n.push({id:null,buffer:t,object:i,opaque:null,transparent:null,z:0})}function te(n,t){n.push({id:null,object:t,opaque:null,transparent:null,z:0})}function ie(n){var i=n.geometry,f,u,r,e,o;if(i instanceof THREE.BufferGeometry)bf(i,t.DYNAMIC_DRAW);else if(n instanceof THREE.Mesh){for(e=0,o=i.geometryGroupsList.length;e<o;e++)f=i.geometryGroupsList[e],r=pt(n,f),i.buffersNeedUpdate&&pr(f,n),u=r.attributes&&vi(r),(i.verticesNeedUpdate||i.morphTargetsNeedUpdate||i.elementsNeedUpdate||i.uvsNeedUpdate||i.normalsNeedUpdate||i.colorsNeedUpdate||i.tangentsNeedUpdate||u)&&wf(f,n,t.DYNAMIC_DRAW,!i.dynamic,r);i.verticesNeedUpdate=!1;i.morphTargetsNeedUpdate=!1;i.elementsNeedUpdate=!1;i.uvsNeedUpdate=!1;i.normalsNeedUpdate=!1;i.colorsNeedUpdate=!1;i.tangentsNeedUpdate=!1;i.buffersNeedUpdate=!1;r.attributes&&yi(r)}else n instanceof THREE.Line?(r=pt(n,i),u=r.attributes&&vi(r),(i.verticesNeedUpdate||i.colorsNeedUpdate||i.lineDistancesNeedUpdate||u)&&pf(i,t.DYNAMIC_DRAW),i.verticesNeedUpdate=!1,i.colorsNeedUpdate=!1,i.lineDistancesNeedUpdate=!1,r.attributes&&yi(r)):n instanceof THREE.ParticleSystem&&(r=pt(n,i),u=r.attributes&&vi(r),(i.verticesNeedUpdate||i.colorsNeedUpdate||n.sortParticles||u)&&yf(i,t.DYNAMIC_DRAW,n),i.verticesNeedUpdate=!1,i.colorsNeedUpdate=!1,r.attributes&&yi(r))}function vi(n){for(var t in n.attributes)if(n.attributes[t].needsUpdate)return!0;return!1}function yi(n){for(var t in n.attributes)n.attributes[t].needsUpdate=!1}function nu(n,t){n instanceof THREE.Mesh||n instanceof THREE.ParticleSystem||n instanceof THREE.Line?tu(t.__webglObjects,n):n instanceof THREE.Sprite?iu(t.__webglSprites,n):n instanceof THREE.LensFlare?iu(t.__webglFlares,n):(n instanceof THREE.ImmediateRenderObject||n.immediateRenderCallback)&&tu(t.__webglObjectsImmediate,n);delete n.__webglActive}function tu(n,t){for(var i=n.length-1;i>=0;i--)n[i].object===t&&n.splice(i,1)}function iu(n,t){for(var i=n.length-1;i>=0;i--)n[i]===t&&n.splice(i,1)}function re(n,t){n.uniforms=THREE.UniformsUtils.clone(t.uniforms);n.vertexShader=t.vertexShader;n.fragmentShader=t.fragmentShader}function pi(n,u,f,e,o){var a;kt=0;e.needsUpdate&&(e.program&&vr(e),i.initMaterial(e,u,f,o),e.needsUpdate=!1);e.morphTargets&&(o.__webglMorphTargetInfluences||(o.__webglMorphTargetInfluences=new Float32Array(i.maxMorphTargets)));var l=!1,c=e.program,s=c.uniforms,h=e.uniforms;return c.id!==b&&(t.useProgram(c.program),b=c.id,l=!0),e.id!==y&&(y=e.id,l=!0),(l||n!==k)&&(t.uniformMatrix4fv(s.projectionMatrix,!1,n.projectionMatrix.elements),bt&&t.uniform1f(s.logDepthBufFC,2/(Math.log(n.far+1)/Math.LN2)),n!==k&&(k=n)),e.skinning&&(fi&&o.skeleton.useVertexTexture?(s.boneTexture!==null&&(a=wi(),t.uniform1i(s.boneTexture,a),i.setTexture(o.skeleton.boneTexture,a)),s.boneTextureWidth!==null&&t.uniform1i(s.boneTextureWidth,o.skeleton.boneTextureWidth),s.boneTextureHeight!==null&&t.uniform1i(s.boneTextureHeight,o.skeleton.boneTextureHeight)):s.boneGlobalMatrices!==null&&t.uniformMatrix4fv(s.boneGlobalMatrices,!1,o.skeleton.boneMatrices)),l&&(f&&e.fog&&oe(h,f),(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e.lights)&&(p&&(ye(c,u),p=!1),ce(h,fr)),(e instanceof THREE.MeshBasicMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.MeshPhongMaterial)&&ue(h,e),e instanceof THREE.LineBasicMaterial?ru(h,e):e instanceof THREE.LineDashedMaterial?(ru(h,e),fe(h,e)):e instanceof THREE.ParticleSystemMaterial?ee(h,e):e instanceof THREE.MeshPhongMaterial?se(h,e):e instanceof THREE.MeshLambertMaterial?he(h,e):e instanceof THREE.MeshDepthMaterial?(h.mNear.value=n.near,h.mFar.value=n.far,h.opacity.value=e.opacity):e instanceof THREE.MeshNormalMaterial&&(h.opacity.value=e.opacity),o.receiveShadow&&!e._shadowPass&&le(h,u),ve(c,e.uniformsList),(e instanceof THREE.ShaderMaterial||e instanceof THREE.MeshPhongMaterial||e.envMap)&&s.cameraPosition!==null&&(r.setFromMatrixPosition(n.matrixWorld),t.uniform3f(s.cameraPosition,r.x,r.y,r.z)),(e instanceof THREE.MeshPhongMaterial||e instanceof THREE.MeshLambertMaterial||e instanceof THREE.ShaderMaterial||e.skinning)&&s.viewMatrix!==null&&t.uniformMatrix4fv(s.viewMatrix,!1,n.matrixWorldInverse.elements)),ae(s,o),s.modelMatrix!==null&&t.uniformMatrix4fv(s.modelMatrix,!1,o.matrixWorld.elements),c}function ue(n,t){var r,u,f;n.opacity.value=t.opacity;i.gammaInput?n.diffuse.value.copyGammaToLinear(t.color):n.diffuse.value=t.color;n.map.value=t.map;n.lightMap.value=t.lightMap;n.specularMap.value=t.specularMap;t.bumpMap&&(n.bumpMap.value=t.bumpMap,n.bumpScale.value=t.bumpScale);t.normalMap&&(n.normalMap.value=t.normalMap,n.normalScale.value.copy(t.normalScale));t.map?r=t.map:t.specularMap?r=t.specularMap:t.normalMap?r=t.normalMap:t.bumpMap&&(r=t.bumpMap);r!==undefined&&(u=r.offset,f=r.repeat,n.offsetRepeat.value.set(u.x,u.y,f.x,f.y));n.envMap.value=t.envMap;n.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;n.reflectivity.value=i.gammaInput?t.reflectivity:t.reflectivity;n.refractionRatio.value=t.refractionRatio;n.combine.value=t.combine;n.useRefract.value=t.envMap&&t.envMap.mapping instanceof THREE.CubeRefractionMapping}function ru(n,t){n.diffuse.value=t.color;n.opacity.value=t.opacity}function fe(n,t){n.dashSize.value=t.dashSize;n.totalSize.value=t.dashSize+t.gapSize;n.scale.value=t.scale}function ee(n,t){n.psColor.value=t.color;n.opacity.value=t.opacity;n.size.value=t.size;n.scale.value=o.height/2;n.map.value=t.map}function oe(n,t){n.fogColor.value=t.color;t instanceof THREE.Fog?(n.fogNear.value=t.near,n.fogFar.value=t.far):t instanceof THREE.FogExp2&&(n.fogDensity.value=t.density)}function se(n,t){n.shininess.value=t.shininess;i.gammaInput?(n.ambient.value.copyGammaToLinear(t.ambient),n.emissive.value.copyGammaToLinear(t.emissive),n.specular.value.copyGammaToLinear(t.specular)):(n.ambient.value=t.ambient,n.emissive.value=t.emissive,n.specular.value=t.specular);t.wrapAround&&n.wrapRGB.value.copy(t.wrapRGB)}function he(n,t){i.gammaInput?(n.ambient.value.copyGammaToLinear(t.ambient),n.emissive.value.copyGammaToLinear(t.emissive)):(n.ambient.value=t.ambient,n.emissive.value=t.emissive);t.wrapAround&&n.wrapRGB.value.copy(t.wrapRGB)}function ce(n,t){n.ambientLightColor.value=t.ambient;n.directionalLightColor.value=t.directional.colors;n.directionalLightDirection.value=t.directional.positions;n.pointLightColor.value=t.point.colors;n.pointLightPosition.value=t.point.positions;n.pointLightDistance.value=t.point.distances;n.spotLightColor.value=t.spot.colors;n.spotLightPosition.value=t.spot.positions;n.spotLightDistance.value=t.spot.distances;n.spotLightDirection.value=t.spot.directions;n.spotLightAngleCos.value=t.spot.anglesCos;n.spotLightExponent.value=t.spot.exponents;n.hemisphereLightSkyColor.value=t.hemi.skyColors;n.hemisphereLightGroundColor.value=t.hemi.groundColors;n.hemisphereLightDirection.value=t.hemi.positions}function le(n,t){var r,u,f,i;if(n.shadowMatrix)for(r=0,u=0,f=t.length;u<f;u++)(i=t[u],i.castShadow)&&(i instanceof THREE.SpotLight||i instanceof THREE.DirectionalLight&&!i.shadowCascade)&&(n.shadowMap.value[r]=i.shadowMap,n.shadowMapSize.value[r]=i.shadowMapSize,n.shadowMatrix.value[r]=i.shadowMatrix,n.shadowDarkness.value[r]=i.shadowDarkness,n.shadowBias.value[r]=i.shadowBias,r++)}function ae(n,i){t.uniformMatrix4fv(n.modelViewMatrix,!1,i._modelViewMatrix.elements);n.normalMatrix&&t.uniformMatrix3fv(n.normalMatrix,!1,i._normalMatrix.elements)}function wi(){var n=kt;return n>=er&&console.warn("WebGLRenderer: trying to use "+n+" texture units while this GPU supports only "+er),kt+=1,n}function ve(n,r){for(var e,u,o,s,l,a,f,h,c,v=0,y=r.length;v<y;v++)if(s=n.uniforms[r[v][1]],s)if(e=r[v][0],o=e.type,u=e.value,o==="i")t.uniform1i(s,u);else if(o==="f")t.uniform1f(s,u);else if(o==="v2")t.uniform2f(s,u.x,u.y);else if(o==="v3")t.uniform3f(s,u.x,u.y,u.z);else if(o==="v4")t.uniform4f(s,u.x,u.y,u.z,u.w);else if(o==="c")t.uniform3f(s,u.r,u.g,u.b);else if(o==="iv1")t.uniform1iv(s,u);else if(o==="iv")t.uniform3iv(s,u);else if(o==="fv1")t.uniform1fv(s,u);else if(o==="fv")t.uniform3fv(s,u);else if(o==="v2v"){for(e._array===undefined&&(e._array=new Float32Array(2*u.length)),f=0,h=u.length;f<h;f++)c=f*2,e._array[c]=u[f].x,e._array[c+1]=u[f].y;t.uniform2fv(s,e._array)}else if(o==="v3v"){for(e._array===undefined&&(e._array=new Float32Array(3*u.length)),f=0,h=u.length;f<h;f++)c=f*3,e._array[c]=u[f].x,e._array[c+1]=u[f].y,e._array[c+2]=u[f].z;t.uniform3fv(s,e._array)}else if(o==="v4v"){for(e._array===undefined&&(e._array=new Float32Array(4*u.length)),f=0,h=u.length;f<h;f++)c=f*4,e._array[c]=u[f].x,e._array[c+1]=u[f].y,e._array[c+2]=u[f].z,e._array[c+3]=u[f].w;t.uniform4fv(s,e._array)}else if(o==="m3")t.uniformMatrix3fv(s,!1,u.elements);else if(o==="m3v"){for(e._array===undefined&&(e._array=new Float32Array(9*u.length)),f=0,h=u.length;f<h;f++)u[f].flattenToArrayOffset(e._array,f*9);t.uniformMatrix3fv(s,!1,e._array)}else if(o==="m4")t.uniformMatrix4fv(s,!1,u.elements);else if(o==="m4v"){for(e._array===undefined&&(e._array=new Float32Array(16*u.length)),f=0,h=u.length;f<h;f++)u[f].flattenToArrayOffset(e._array,f*16);t.uniformMatrix4fv(s,!1,e._array)}else if(o==="t"){if(l=u,a=wi(),t.uniform1i(s,a),!l)continue;l.image instanceof Array&&l.image.length===6?we(l,a):l instanceof THREE.WebGLRenderTargetCube?be(l,a):i.setTexture(l,a)}else if(o==="tv"){for(e._array===undefined&&(e._array=[]),f=0,h=e.value.length;f<h;f++)e._array[f]=wi();for(t.uniform1iv(s,e._array),f=0,h=e.value.length;f<h;f++)(l=e.value[f],a=e._array[f],l)&&i.setTexture(l,a)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+o)}function uu(n,t){n._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,n.matrixWorld);n._normalMatrix.getNormalMatrix(n._modelViewMatrix)}function ut(n,t,i,r){n[t]=i.r*i.r*r;n[t+1]=i.g*i.g*r;n[t+2]=i.b*i.b*r}function ft(n,t,i,r){n[t]=i.r*r;n[t+1]=i.g*r;n[t+2]=i.b*r}function ye(n,t){for(var f,rt=0,et=0,ot=0,s,st,ht,h,ct,lt,o=fr,k=o.directional.colors,at=o.directional.positions,d=o.point.colors,vt=o.point.positions,ni=o.point.distances,g=o.spot.colors,yt=o.spot.positions,ti=o.spot.distances,pt=o.spot.directions,ii=o.spot.anglesCos,ri=o.spot.exponents,nt=o.hemi.skyColors,tt=o.hemi.groundColors,wt=o.hemi.positions,it=0,w=0,v=0,b=0,kt=0,dt=0,gt=0,bt=0,y=0,p=0,l=0,a=0,e=0,c=t.length;e<c;e++)if(f=t[e],!f.onlyShadow)if(s=f.color,h=f.intensity,lt=f.distance,f instanceof THREE.AmbientLight){if(!f.visible)continue;i.gammaInput?(rt+=s.r*s.r,et+=s.g*s.g,ot+=s.b*s.b):(rt+=s.r,et+=s.g,ot+=s.b)}else if(f instanceof THREE.DirectionalLight){if(kt+=1,!f.visible)continue;if(u.setFromMatrixPosition(f.matrixWorld),r.setFromMatrixPosition(f.target.matrixWorld),u.sub(r),u.normalize(),u.x===0&&u.y===0&&u.z===0)continue;y=it*3;at[y]=u.x;at[y+1]=u.y;at[y+2]=u.z;i.gammaInput?ut(k,y,s,h*h):ft(k,y,s,h);it+=1}else if(f instanceof THREE.PointLight){if(dt+=1,!f.visible)continue;p=w*3;i.gammaInput?ut(d,p,s,h*h):ft(d,p,s,h);r.setFromMatrixPosition(f.matrixWorld);vt[p]=r.x;vt[p+1]=r.y;vt[p+2]=r.z;ni[w]=lt;w+=1}else if(f instanceof THREE.SpotLight){if(gt+=1,!f.visible)continue;l=v*3;i.gammaInput?ut(g,l,s,h*h):ft(g,l,s,h);r.setFromMatrixPosition(f.matrixWorld);yt[l]=r.x;yt[l+1]=r.y;yt[l+2]=r.z;ti[v]=lt;u.copy(r);r.setFromMatrixPosition(f.target.matrixWorld);u.sub(r);u.normalize();pt[l]=u.x;pt[l+1]=u.y;pt[l+2]=u.z;ii[v]=Math.cos(f.angle);ri[v]=f.exponent;v+=1}else if(f instanceof THREE.HemisphereLight){if(bt+=1,!f.visible)continue;if(u.setFromMatrixPosition(f.matrixWorld),u.normalize(),u.x===0&&u.y===0&&u.z===0)continue;a=b*3;wt[a]=u.x;wt[a+1]=u.y;wt[a+2]=u.z;st=f.color;ht=f.groundColor;i.gammaInput?(ct=h*h,ut(nt,a,st,ct),ut(tt,a,ht,ct)):(ft(nt,a,st,h),ft(tt,a,ht,h));b+=1}for(e=it*3,c=Math.max(k.length,kt*3);e<c;e++)k[e]=0;for(e=w*3,c=Math.max(d.length,dt*3);e<c;e++)d[e]=0;for(e=v*3,c=Math.max(g.length,gt*3);e<c;e++)g[e]=0;for(e=b*3,c=Math.max(nt.length,bt*3);e<c;e++)nt[e]=0;for(e=b*3,c=Math.max(tt.length,bt*3);e<c;e++)tt[e]=0;o.directional.length=it;o.point.length=w;o.spot.length=v;o.hemi.length=b;o.ambient[0]=rt;o.ambient[1]=et;o.ambient[2]=ot}function bi(n){n!==ir&&(t.lineWidth(n),ir=n)}function ki(n,i,r){gi!==n&&(n?t.enable(t.POLYGON_OFFSET_FILL):t.disable(t.POLYGON_OFFSET_FILL),gi=n);n&&(nr!==i||tr!==r)&&(t.polygonOffset(i,r),nr=i,tr=r)}function wt(n,i,r){r?(t.texParameteri(n,t.TEXTURE_WRAP_S,e(i.wrapS)),t.texParameteri(n,t.TEXTURE_WRAP_T,e(i.wrapT)),t.texParameteri(n,t.TEXTURE_MAG_FILTER,e(i.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,e(i.minFilter))):(t.texParameteri(n,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(n,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(n,t.TEXTURE_MAG_FILTER,ou(i.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,ou(i.minFilter)));w&&i.type!==THREE.FloatType&&(i.anisotropy>1||i.__oldAnisotropy)&&(t.texParameterf(n,w.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i.anisotropy,or)),i.__oldAnisotropy=i.anisotropy)}function pe(n,t){var e;if(n.width<=t&&n.height<=t)return n;var r=Math.max(n.width,n.height),u=Math.floor(n.width*t/r),f=Math.floor(n.height*t/r),i=document.createElement("canvas");return i.width=u,i.height=f,e=i.getContext("2d"),e.drawImage(n,0,0,n.width,n.height,0,0,u,f),i}function we(n,r){var c,s,u,f,l,o,p;if(n.image.length===6)if(n.needsUpdate){for(n.image.__webglTextureCube||(n.addEventListener("dispose",ei),n.image.__webglTextureCube=t.createTexture(),i.info.memory.textures++),t.activeTexture(t.TEXTURE0+r),t.bindTexture(t.TEXTURE_CUBE_MAP,n.image.__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,n.flipY),c=n instanceof THREE.CompressedTexture,s=[],u=0;u<6;u++)s[u]=i.autoScaleCubemaps&&!c?pe(n.image[u],ku):n.image[u];var a=s[0],v=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),h=e(n.format),y=e(n.type);for(wt(t.TEXTURE_CUBE_MAP,n,v),u=0;u<6;u++)if(c)for(l=s[u].mipmaps,o=0,p=l.length;o<p;o++)f=l[o],n.format!==THREE.RGBAFormat?t.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+u,o,h,f.width,f.height,0,f.data):t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+u,o,h,f.width,f.height,0,h,y,f.data);else t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,h,h,y,s[u]);n.generateMipmaps&&v&&t.generateMipmap(t.TEXTURE_CUBE_MAP);n.needsUpdate=!1;n.onUpdate&&n.onUpdate()}else t.activeTexture(t.TEXTURE0+r),t.bindTexture(t.TEXTURE_CUBE_MAP,n.image.__webglTextureCube)}function be(n,i){t.activeTexture(t.TEXTURE0+i);t.bindTexture(t.TEXTURE_CUBE_MAP,n.__webglTexture)}function fu(n,i,r){t.bindFramebuffer(t.FRAMEBUFFER,n);t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,r,i.__webglTexture,0)}function eu(n,i){t.bindRenderbuffer(t.RENDERBUFFER,n);i.depthBuffer&&!i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,n)):i.depthBuffer&&i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,n)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i.width,i.height)}function ke(n){n instanceof THREE.WebGLRenderTargetCube?(t.bindTexture(t.TEXTURE_CUBE_MAP,n.__webglTexture),t.generateMipmap(t.TEXTURE_CUBE_MAP),t.bindTexture(t.TEXTURE_CUBE_MAP,null)):(t.bindTexture(t.TEXTURE_2D,n.__webglTexture),t.generateMipmap(t.TEXTURE_2D),t.bindTexture(t.TEXTURE_2D,null))}function ou(n){return n===THREE.NearestFilter||n===THREE.NearestMipMapNearestFilter||n===THREE.NearestMipMapLinearFilter?t.NEAREST:t.LINEAR}function e(n){if(n===THREE.RepeatWrapping)return t.REPEAT;if(n===THREE.ClampToEdgeWrapping)return t.CLAMP_TO_EDGE;if(n===THREE.MirroredRepeatWrapping)return t.MIRRORED_REPEAT;if(n===THREE.NearestFilter)return t.NEAREST;if(n===THREE.NearestMipMapNearestFilter)return t.NEAREST_MIPMAP_NEAREST;if(n===THREE.NearestMipMapLinearFilter)return t.NEAREST_MIPMAP_LINEAR;if(n===THREE.LinearFilter)return t.LINEAR;if(n===THREE.LinearMipMapNearestFilter)return t.LINEAR_MIPMAP_NEAREST;if(n===THREE.LinearMipMapLinearFilter)return t.LINEAR_MIPMAP_LINEAR;if(n===THREE.UnsignedByteType)return t.UNSIGNED_BYTE;if(n===THREE.UnsignedShort4444Type)return t.UNSIGNED_SHORT_4_4_4_4;if(n===THREE.UnsignedShort5551Type)return t.UNSIGNED_SHORT_5_5_5_1;if(n===THREE.UnsignedShort565Type)return t.UNSIGNED_SHORT_5_6_5;if(n===THREE.ByteType)return t.BYTE;if(n===THREE.ShortType)return t.SHORT;if(n===THREE.UnsignedShortType)return t.UNSIGNED_SHORT;if(n===THREE.IntType)return t.INT;if(n===THREE.UnsignedIntType)return t.UNSIGNED_INT;if(n===THREE.FloatType)return t.FLOAT;if(n===THREE.AlphaFormat)return t.ALPHA;if(n===THREE.RGBFormat)return t.RGB;if(n===THREE.RGBAFormat)return t.RGBA;if(n===THREE.LuminanceFormat)return t.LUMINANCE;if(n===THREE.LuminanceAlphaFormat)return t.LUMINANCE_ALPHA;if(n===THREE.AddEquation)return t.FUNC_ADD;if(n===THREE.SubtractEquation)return t.FUNC_SUBTRACT;if(n===THREE.ReverseSubtractEquation)return t.FUNC_REVERSE_SUBTRACT;if(n===THREE.ZeroFactor)return t.ZERO;if(n===THREE.OneFactor)return t.ONE;if(n===THREE.SrcColorFactor)return t.SRC_COLOR;if(n===THREE.OneMinusSrcColorFactor)return t.ONE_MINUS_SRC_COLOR;if(n===THREE.SrcAlphaFactor)return t.SRC_ALPHA;if(n===THREE.OneMinusSrcAlphaFactor)return t.ONE_MINUS_SRC_ALPHA;if(n===THREE.DstAlphaFactor)return t.DST_ALPHA;if(n===THREE.OneMinusDstAlphaFactor)return t.ONE_MINUS_DST_ALPHA;if(n===THREE.DstColorFactor)return t.DST_COLOR;if(n===THREE.OneMinusDstColorFactor)return t.ONE_MINUS_DST_COLOR;if(n===THREE.SrcAlphaSaturateFactor)return t.SRC_ALPHA_SATURATE;if(h!==undefined){if(n===THREE.RGB_S3TC_DXT1_Format)return h.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===THREE.RGBA_S3TC_DXT1_Format)return h.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===THREE.RGBA_S3TC_DXT3_Format)return h.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===THREE.RGBA_S3TC_DXT5_Format)return h.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function de(n){if(fi&&n&&n.skeleton&&n.skeleton.useVertexTexture)return 1024;var r=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),u=Math.floor((r-20)/4),i=u;return n!==undefined&&n instanceof THREE.SkinnedMesh&&(i=Math.min(n.skeleton.bones.length,i),i<n.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+n.skeleton.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)")),i}function ge(n){for(var t,r=0,u=0,f=0,e=0,i=0,o=n.length;i<o;i++)(t=n[i],t.onlyShadow||t.visible===!1)||(t instanceof THREE.DirectionalLight&&r++,t instanceof THREE.PointLight&&u++,t instanceof THREE.SpotLight&&f++,t instanceof THREE.HemisphereLight&&e++);return{directional:r,point:u,spot:f,hemi:e}}function no(n){for(var t,i=0,r=0,u=n.length;r<u;r++)(t=n[r],t.castShadow)&&(t instanceof THREE.SpotLight&&i++,t instanceof THREE.DirectionalLight&&!t.shadowCascade&&i++);return i}function to(){try{var n={alpha:hu,depth:cu,stencil:lu,antialias:au,premultipliedAlpha:vu,preserveDrawingBuffer:yu};if(t=su||o.getContext("webgl",n)||o.getContext("experimental-webgl",n),t===null)throw"Error creating WebGL context.";}catch(i){console.error(i)}vt=t.getExtension("OES_texture_float");pu=t.getExtension("OES_texture_float_linear");ri=t.getExtension("OES_standard_derivatives");w=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");h=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");yt=t.getExtension("OES_element_index_uint");vt===null&&console.log("THREE.WebGLRenderer: Float textures not supported.");ri===null&&console.log("THREE.WebGLRenderer: Standard derivatives not supported.");w===null&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");h===null&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");yt===null&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported.");t.getShaderPrecisionFormat===undefined&&(t.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});bt&&(wu=t.getExtension("EXT_frag_depth"))}function io(){t.clearColor(0,0,0,1);t.clearDepth(1);t.clearStencil(0);t.enable(t.DEPTH_TEST);t.depthFunc(t.LEQUAL);t.frontFace(t.CCW);t.cullFace(t.BACK);t.enable(t.CULL_FACE);t.enable(t.BLEND);t.blendEquation(t.FUNC_ADD);t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA);t.viewport(ot,st,ht,ct);t.clearColor(c.r,c.g,c.b,et)}console.log("THREE.WebGLRenderer",THREE.REVISION);n=n||{};var o=n.canvas!==undefined?n.canvas:document.createElement("canvas"),su=n.context!==undefined?n.context:null,a=n.precision!==undefined?n.precision:"highp",hu=n.alpha!==undefined?n.alpha:!1,cu=n.depth!==undefined?n.depth:!0,lu=n.stencil!==undefined?n.stencil:!0,au=n.antialias!==undefined?n.antialias:!1,vu=n.premultipliedAlpha!==undefined?n.premultipliedAlpha:!0,yu=n.preserveDrawingBuffer!==undefined?n.preserveDrawingBuffer:!1,bt=n.logarithmicDepthBuffer!==undefined?n.logarithmicDepthBuffer:!1,c=new THREE.Color(0),et=0;this.domElement=o;this.context=null;this.devicePixelRatio=n.devicePixelRatio!==undefined?n.devicePixelRatio:self.devicePixelRatio!==undefined?self.devicePixelRatio:1;this.autoClear=!0;this.autoClearColor=!0;this.autoClearDepth=!0;this.autoClearStencil=!0;this.sortObjects=!0;this.autoUpdateObjects=!0;this.gammaInput=!1;this.gammaOutput=!1;this.shadowMapEnabled=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapDebug=!1;this.shadowMapCascade=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var i=this,s=[],b=null,di=null,y=-1,l=null,k=null,kt=0,d=-1,g=-1,nt=-1,dt=-1,gt=-1,ni=-1,tt=-1,it=-1,gi=null,nr=null,tr=null,ir=null,ot=0,st=0,ht=o.width,ct=o.height,rr=0,ur=0,lt=new Uint8Array(16),rt=new Uint8Array(16),ti=new THREE.Frustum,at=new THREE.Matrix4,ii=new THREE.Matrix4,r=new THREE.Vector3,u=new THREE.Vector3,p=!0,fr={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},t,vt,pu,ri,w,h,yt,wu;to();io();this.context=t;var er=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),bu=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),ro=t.getParameter(t.MAX_TEXTURE_SIZE),ku=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),or=w?t.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,ui=bu>0,fi=ui&&vt,uo=h?t.getParameter(t.COMPRESSED_TEXTURE_FORMATS):[],du=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT),gu=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT),fo=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.LOW_FLOAT),nf=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT),tf=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT),eo=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.LOW_FLOAT),rf=du.precision>0&&nf.precision>0,sr=gu.precision>0&&tf.precision>0;a!=="highp"||rf||(sr?(a="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(a="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));a!=="mediump"||sr||(a="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return t};this.supportsVertexTextures=function(){return ui};this.supportsFloatTextures=function(){return vt};this.supportsStandardDerivatives=function(){return ri};this.supportsCompressedTextureS3TC=function(){return h};this.getMaxAnisotropy=function(){return or};this.getPrecision=function(){return a};this.setSize=function(n,t,i){o.width=n*this.devicePixelRatio;o.height=t*this.devicePixelRatio;i!==!1&&(o.style.width=n+"px",o.style.height=t+"px");this.setViewport(0,0,n,t)};this.setViewport=function(n,i,r,u){ot=n*this.devicePixelRatio;st=i*this.devicePixelRatio;ht=r*this.devicePixelRatio;ct=u*this.devicePixelRatio;t.viewport(ot,st,ht,ct)};this.setScissor=function(n,i,r,u){t.scissor(n*this.devicePixelRatio,i*this.devicePixelRatio,r*this.devicePixelRatio,u*this.devicePixelRatio)};this.enableScissorTest=function(n){n?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)};this.setClearColor=function(n,i){c.set(n);et=i!==undefined?i:1;t.clearColor(c.r,c.g,c.b,et)};this.setClearColorHex=function(n,t){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(n,t)};this.getClearColor=function(){return c};this.getClearAlpha=function(){return et};this.clear=function(n,i,r){var u=0;(n===undefined||n)&&(u|=t.COLOR_BUFFER_BIT);(i===undefined||i)&&(u|=t.DEPTH_BUFFER_BIT);(r===undefined||r)&&(u|=t.STENCIL_BUFFER_BIT);t.clear(u)};this.clearColor=function(){t.clear(t.COLOR_BUFFER_BIT)};this.clearDepth=function(){t.clear(t.DEPTH_BUFFER_BIT)};this.clearStencil=function(){t.clear(t.STENCIL_BUFFER_BIT)};this.clearTarget=function(n,t,i,r){this.setRenderTarget(n);this.clear(t,i,r)};this.addPostPlugin=function(n){n.init(this);this.renderPluginsPost.push(n)};this.addPrePlugin=function(n){n.init(this);this.renderPluginsPre.push(n)};this.updateShadowMap=function(n,t){b=null;nt=-1;tt=-1;it=-1;l=-1;y=-1;p=!0;d=-1;g=-1;this.shadowMapPlugin.update(n,t)};var hr=function(n){var t=n.target;t.removeEventListener("dispose",hr);of(t)},ei=function(n){var t=n.target;t.removeEventListener("dispose",ei);sf(t);i.info.memory.textures--},cr=function(n){var t=n.target;t.removeEventListener("dispose",cr);hf(t);i.info.memory.textures--},lr=function(n){var t=n.target;t.removeEventListener("dispose",lr);vr(t)},ar=function(n){if(n.__webglVertexBuffer!==undefined&&t.deleteBuffer(n.__webglVertexBuffer),n.__webglNormalBuffer!==undefined&&t.deleteBuffer(n.__webglNormalBuffer),n.__webglTangentBuffer!==undefined&&t.deleteBuffer(n.__webglTangentBuffer),n.__webglColorBuffer!==undefined&&t.deleteBuffer(n.__webglColorBuffer),n.__webglUVBuffer!==undefined&&t.deleteBuffer(n.__webglUVBuffer),n.__webglUV2Buffer!==undefined&&t.deleteBuffer(n.__webglUV2Buffer),n.__webglSkinIndicesBuffer!==undefined&&t.deleteBuffer(n.__webglSkinIndicesBuffer),n.__webglSkinWeightsBuffer!==undefined&&t.deleteBuffer(n.__webglSkinWeightsBuffer),n.__webglFaceBuffer!==undefined&&t.deleteBuffer(n.__webglFaceBuffer),n.__webglLineBuffer!==undefined&&t.deleteBuffer(n.__webglLineBuffer),n.__webglLineDistanceBuffer!==undefined&&t.deleteBuffer(n.__webglLineDistanceBuffer),n.__webglCustomAttributesList!==undefined)for(var r in n.__webglCustomAttributesList)t.deleteBuffer(n.__webglCustomAttributesList[r].buffer);i.info.memory.geometries--},of=function(n){var f,o,s,r,u,e;if(n.__webglInit=undefined,n instanceof THREE.BufferGeometry){f=n.attributes;for(o in f)f[o].buffer!==undefined&&t.deleteBuffer(f[o].buffer);i.info.memory.geometries--}else if(n.geometryGroups!==undefined)for(s in n.geometryGroups){if(r=n.geometryGroups[s],r.numMorphTargets!==undefined)for(u=0,e=r.numMorphTargets;u<e;u++)t.deleteBuffer(r.__webglMorphTargetsBuffers[u]);if(r.numMorphNormals!==undefined)for(u=0,e=r.numMorphNormals;u<e;u++)t.deleteBuffer(r.__webglMorphNormalsBuffers[u]);ar(r)}else ar(n)},sf=function(n){if(n.image&&n.image.__webglTextureCube)t.deleteTexture(n.image.__webglTextureCube);else{if(!n.__webglInit)return;n.__webglInit=!1;t.deleteTexture(n.__webglTexture)}},hf=function(n){if(n&&n.__webglTexture)if(t.deleteTexture(n.__webglTexture),n instanceof THREE.WebGLRenderTargetCube)for(var i=0;i<6;i++)t.deleteFramebuffer(n.__webglFramebuffer[i]),t.deleteRenderbuffer(n.__webglRenderbuffer[i]);else t.deleteFramebuffer(n.__webglFramebuffer),t.deleteRenderbuffer(n.__webglRenderbuffer)},vr=function(n){var f=n.program,r,e,u,o,h;if(f!==undefined){for(n.program=undefined,o=!1,r=0,e=s.length;r<e;r++)if(u=s[r],u.program===f){u.usedTimes--;u.usedTimes===0&&(o=!0);break}if(o===!0){for(h=[],r=0,e=s.length;r<e;r++)u=s[r],u.program!==f&&h.push(u);s=h;t.deleteProgram(f);i.info.memory.programs--}}};this.renderBufferImmediate=function(n,i,r){if(oi(),n.hasPositions&&!n.__webglVertexBuffer&&(n.__webglVertexBuffer=t.createBuffer()),n.hasNormals&&!n.__webglNormalBuffer&&(n.__webglNormalBuffer=t.createBuffer()),n.hasUvs&&!n.__webglUvBuffer&&(n.__webglUvBuffer=t.createBuffer()),n.hasColors&&!n.__webglColorBuffer&&(n.__webglColorBuffer=t.createBuffer()),n.hasPositions&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglVertexBuffer),t.bufferData(t.ARRAY_BUFFER,n.positionArray,t.DYNAMIC_DRAW),f(i.attributes.position),t.vertexAttribPointer(i.attributes.position,3,t.FLOAT,!1,0,0)),n.hasNormals){if(t.bindBuffer(t.ARRAY_BUFFER,n.__webglNormalBuffer),r.shading===THREE.FlatShading)for(var o,s,h,c,l,a,v,y,p,w,b,k,e,d=n.count*3,u=0;u<d;u+=9)e=n.normalArray,c=e[u],v=e[u+1],w=e[u+2],l=e[u+3],y=e[u+4],b=e[u+5],a=e[u+6],p=e[u+7],k=e[u+8],o=(c+l+a)/3,s=(v+y+p)/3,h=(w+b+k)/3,e[u]=o,e[u+1]=s,e[u+2]=h,e[u+3]=o,e[u+4]=s,e[u+5]=h,e[u+6]=o,e[u+7]=s,e[u+8]=h;t.bufferData(t.ARRAY_BUFFER,n.normalArray,t.DYNAMIC_DRAW);f(i.attributes.normal);t.vertexAttribPointer(i.attributes.normal,3,t.FLOAT,!1,0,0)}n.hasUvs&&r.map&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglUvBuffer),t.bufferData(t.ARRAY_BUFFER,n.uvArray,t.DYNAMIC_DRAW),f(i.attributes.uv),t.vertexAttribPointer(i.attributes.uv,2,t.FLOAT,!1,0,0));n.hasColors&&r.vertexColors!==THREE.NoColors&&(t.bindBuffer(t.ARRAY_BUFFER,n.__webglColorBuffer),t.bufferData(t.ARRAY_BUFFER,n.colorArray,t.DYNAMIC_DRAW),f(i.attributes.color),t.vertexAttribPointer(i.attributes.color,3,t.FLOAT,!1,0,0));si();t.drawArrays(t.TRIANGLES,0,n.count);n.count=0};this.renderBufferDirect=function(n,r,u,f,e,o){var it,h,w,k,s,c,d,g,p;if(f.visible!==!1){var nt=pi(n,r,u,f,o),b=nt.attributes,a=e.attributes,y=!1,rt=f.wireframe?1:0,tt=e.id*16777215+nt.id*2+rt;if(tt!==l&&(l=tt,y=!0),y&&oi(),o instanceof THREE.Mesh)if(h=a.index,h)if(h.array instanceof Uint32Array?(w=t.UNSIGNED_INT,k=4):(w=t.UNSIGNED_SHORT,k=2),s=e.offsets,s.length===0)y&&(v(f,b,a,0),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,h.buffer)),t.drawElements(t.TRIANGLES,h.array.length,w,0),i.info.render.calls++,i.info.render.vertices+=h.array.length,i.info.render.faces+=h.array.length/3;else for(y=!0,c=0,d=s.length;c<d;c++)g=s[c].index,y&&(v(f,b,a,g),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,h.buffer)),t.drawElements(t.TRIANGLES,s[c].count,w,s[c].start*k),i.info.render.calls++,i.info.render.vertices+=s[c].count,i.info.render.faces+=s[c].count/3;else y&&v(f,b,a,0),p=e.attributes.position,t.drawArrays(t.TRIANGLES,0,p.array.length/3),i.info.render.calls++,i.info.render.vertices+=p.array.length/3,i.info.render.faces+=p.array.length/9;else if(o instanceof THREE.ParticleSystem)y&&v(f,b,a,0),p=a.position,t.drawArrays(t.POINTS,0,p.array.length/3),i.info.render.calls++,i.info.render.points+=p.array.length/3;else if(o instanceof THREE.Line)if(it=o.type===THREE.LineStrip?t.LINE_STRIP:t.LINES,bi(f.linewidth),h=a.index,h)if(h.array instanceof Uint32Array?(w=t.UNSIGNED_INT,k=4):(w=t.UNSIGNED_SHORT,k=2),s=e.offsets,s.length===0)y&&(v(f,b,a,0),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,h.buffer)),t.drawElements(t.LINES,h.array.length,w,0),i.info.render.calls++,i.info.render.vertices+=h.array.length;else for(s.length>1&&(y=!0),c=0,d=s.length;c<d;c++)g=s[c].index,y&&(v(f,b,a,g),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,h.buffer)),t.drawElements(t.LINES,s[c].count,w,s[c].start*k),i.info.render.calls++,i.info.render.vertices+=s[c].count;else y&&v(f,b,a,0),p=a.position,t.drawArrays(it,0,p.array.length/3),i.info.render.calls++,i.info.render.points+=p.array.length/3}};this.renderBuffer=function(n,r,u,e,o,s){var y,k;if(e.visible!==!1){var c,v,p,w=pi(n,r,u,e,s),h=w.attributes,a=!1,d=e.wireframe?1:0,b=o.id*16777215+w.id*2+d;if(b!==l&&(l=b,a=!0),a&&oi(),!e.morphTargets&&h.position>=0?a&&(t.bindBuffer(t.ARRAY_BUFFER,o.__webglVertexBuffer),f(h.position),t.vertexAttribPointer(h.position,3,t.FLOAT,!1,0,0)):s.morphTargetBase&&kf(e,o,s),a){if(o.__webglCustomAttributesList)for(v=0,p=o.__webglCustomAttributesList.length;v<p;v++)c=o.__webglCustomAttributesList[v],h[c.buffer.belongsToAttribute]>=0&&(t.bindBuffer(t.ARRAY_BUFFER,c.buffer),f(h[c.buffer.belongsToAttribute]),t.vertexAttribPointer(h[c.buffer.belongsToAttribute],c.size,t.FLOAT,!1,0,0));h.color>=0&&(s.geometry.colors.length>0||s.geometry.faces.length>0?(t.bindBuffer(t.ARRAY_BUFFER,o.__webglColorBuffer),f(h.color),t.vertexAttribPointer(h.color,3,t.FLOAT,!1,0,0)):e.defaultAttributeValues&&t.vertexAttrib3fv(h.color,e.defaultAttributeValues.color));h.normal>=0&&(t.bindBuffer(t.ARRAY_BUFFER,o.__webglNormalBuffer),f(h.normal),t.vertexAttribPointer(h.normal,3,t.FLOAT,!1,0,0));h.tangent>=0&&(t.bindBuffer(t.ARRAY_BUFFER,o.__webglTangentBuffer),f(h.tangent),t.vertexAttribPointer(h.tangent,4,t.FLOAT,!1,0,0));h.uv>=0&&(s.geometry.faceVertexUvs[0]?(t.bindBuffer(t.ARRAY_BUFFER,o.__webglUVBuffer),f(h.uv),t.vertexAttribPointer(h.uv,2,t.FLOAT,!1,0,0)):e.defaultAttributeValues&&t.vertexAttrib2fv(h.uv,e.defaultAttributeValues.uv));h.uv2>=0&&(s.geometry.faceVertexUvs[1]?(t.bindBuffer(t.ARRAY_BUFFER,o.__webglUV2Buffer),f(h.uv2),t.vertexAttribPointer(h.uv2,2,t.FLOAT,!1,0,0)):e.defaultAttributeValues&&t.vertexAttrib2fv(h.uv2,e.defaultAttributeValues.uv2));e.skinning&&h.skinIndex>=0&&h.skinWeight>=0&&(t.bindBuffer(t.ARRAY_BUFFER,o.__webglSkinIndicesBuffer),f(h.skinIndex),t.vertexAttribPointer(h.skinIndex,4,t.FLOAT,!1,0,0),t.bindBuffer(t.ARRAY_BUFFER,o.__webglSkinWeightsBuffer),f(h.skinWeight),t.vertexAttribPointer(h.skinWeight,4,t.FLOAT,!1,0,0));h.lineDistance>=0&&(t.bindBuffer(t.ARRAY_BUFFER,o.__webglLineDistanceBuffer),f(h.lineDistance),t.vertexAttribPointer(h.lineDistance,1,t.FLOAT,!1,0,0))}si();s instanceof THREE.Mesh?(y=o.__typeArray===Uint32Array?t.UNSIGNED_INT:t.UNSIGNED_SHORT,e.wireframe?(bi(e.wireframeLinewidth),a&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o.__webglLineBuffer),t.drawElements(t.LINES,o.__webglLineCount,y,0)):(a&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,o.__webglFaceBuffer),t.drawElements(t.TRIANGLES,o.__webglFaceCount,y,0)),i.info.render.calls++,i.info.render.vertices+=o.__webglFaceCount,i.info.render.faces+=o.__webglFaceCount/3):s instanceof THREE.Line?(k=s.type===THREE.LineStrip?t.LINE_STRIP:t.LINES,bi(e.linewidth),t.drawArrays(k,0,o.__webglLineCount),i.info.render.calls++):s instanceof THREE.ParticleSystem&&(t.drawArrays(t.POINTS,0,o.__webglParticleCount),i.info.render.calls++,i.info.render.points+=o.__webglParticleCount)}};this.render=function(n,t,u,f){var h,v,s,o,c,l,a,e;if(t instanceof THREE.Camera==!1){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}for(l=n.__lights,a=n.fog,y=-1,p=!0,n.autoUpdate===!0&&n.updateMatrixWorld(),t.parent===undefined&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),at.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ti.setFromMatrix(at),this.autoUpdateObjects&&this.initWebGLObjects(n),dr(this.renderPluginsPre,n,t),i.info.render.calls=0,i.info.render.vertices=0,i.info.render.faces=0,i.info.render.points=0,this.setRenderTarget(u),(this.autoClear||f)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),c=n.__webglObjects,h=0,v=c.length;h<v;h++)s=c[h],o=s.object,s.id=h,s.render=!1,o.visible&&((o instanceof THREE.Mesh||o instanceof THREE.ParticleSystem)&&o.frustumCulled&&!ti.intersectsObject(o)||(uu(o,t),ne(s),s.render=!0,this.sortObjects===!0&&(o.renderDepth!==null?s.z=o.renderDepth:(r.setFromMatrixPosition(o.matrixWorld),r.applyProjection(at),s.z=r.z))));for(this.sortObjects&&c.sort(df),c=n.__webglObjectsImmediate,h=0,v=c.length;h<v;h++)s=c[h],o=s.object,o.visible&&(uu(o,t),gf(s));n.overrideMaterial?(e=n.overrideMaterial,this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst),this.setDepthTest(e.depthTest),this.setDepthWrite(e.depthWrite),ki(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),ci(n.__webglObjects,!1,"",t,l,a,!0,e),li(n.__webglObjectsImmediate,"",t,l,a,!1,e)):(e=null,this.setBlending(THREE.NoBlending),ci(n.__webglObjects,!0,"opaque",t,l,a,!1,e),li(n.__webglObjectsImmediate,"opaque",t,l,a,!1,e),ci(n.__webglObjects,!1,"transparent",t,l,a,!0,e),li(n.__webglObjectsImmediate,"transparent",t,l,a,!0,e));dr(this.renderPluginsPost,n,t);u&&u.generateMipmaps&&u.minFilter!==THREE.NearestFilter&&u.minFilter!==THREE.LinearFilter&&ke(u);this.setDepthTest(!0);this.setDepthWrite(!0)};this.renderImmediateObject=function(n,r,u,f,e){var o=pi(n,r,u,f,e);l=-1;i.setMaterialFaces(f);e.immediateRenderCallback?e.immediateRenderCallback(o,t,ti):e.render(function(n){i.renderBufferImmediate(n,o,f)})};this.initWebGLObjects=function(n){var i,r,t;for(n.__webglObjects||(n.__webglObjects=[],n.__webglObjectsImmediate=[],n.__webglSprites=[],n.__webglFlares=[]);n.__objectsAdded.length;)gr(n.__objectsAdded[0],n),n.__objectsAdded.splice(0,1);while(n.__objectsRemoved.length)nu(n.__objectsRemoved[0],n),n.__objectsRemoved.splice(0,1);for(i=0,r=n.__webglObjects.length;i<r;i++)t=n.__webglObjects[i].object,t.__webglInit===undefined&&(t.__webglActive!==undefined&&nu(t,n),gr(t,n)),ie(t)};this.initMaterial=function(n,t,r,u){var w,o,v,l,tt,b,f,e,k,d,c,h,it,g,nt,y,p;n.addEventListener("dispose",lr);n instanceof THREE.MeshDepthMaterial?f="depth":n instanceof THREE.MeshNormalMaterial?f="normal":n instanceof THREE.MeshBasicMaterial?f="basic":n instanceof THREE.MeshLambertMaterial?f="lambert":n instanceof THREE.MeshPhongMaterial?f="phong":n instanceof THREE.LineBasicMaterial?f="basic":n instanceof THREE.LineDashedMaterial?f="dashed":n instanceof THREE.ParticleSystemMaterial&&(f="particle_basic");f&&re(n,THREE.ShaderLib[f]);l=ge(t);b=no(t);tt=de(u);v={precision:a,supportsVertexTextures:ui,map:!!n.map,envMap:!!n.envMap,lightMap:!!n.lightMap,bumpMap:!!n.bumpMap,normalMap:!!n.normalMap,specularMap:!!n.specularMap,vertexColors:n.vertexColors,fog:r,useFog:n.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:n.sizeAttenuation,logarithmicDepthBuffer:bt,skinning:n.skinning,maxBones:tt,useVertexTexture:fi&&u&&u.skeleton&&u.skeleton.useVertexTexture,morphTargets:n.morphTargets,morphNormals:n.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:l.directional,maxPointLights:l.point,maxSpotLights:l.spot,maxHemiLights:l.hemi,maxShadows:b,shadowMapEnabled:this.shadowMapEnabled&&u.receiveShadow&&b>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:n.alphaTest,metal:n.metal,wrapAround:n.wrapAround,doubleSided:n.side===THREE.DoubleSide,flipSided:n.side===THREE.BackSide};e=[];f?e.push(f):(e.push(n.fragmentShader),e.push(n.vertexShader));for(k in n.defines)e.push(k),e.push(n.defines[k]);for(h in v)e.push(h),e.push(v[h]);for(d=e.join(),h=0,it=s.length;h<it;h++)if(g=s[h],g.code===d){c=g;c.usedTimes++;break}if(c===undefined&&(c=new THREE.WebGLProgram(this,d,n,v),s.push(c),i.info.memory.programs=s.length),n.program=c,nt=n.program.attributes,n.morphTargets)for(n.numSupportedMorphTargets=0,p="morphTarget",o=0;o<this.maxMorphTargets;o++)y=p+o,nt[y]>=0&&n.numSupportedMorphTargets++;if(n.morphNormals)for(n.numSupportedMorphNormals=0,p="morphNormal",o=0;o<this.maxMorphNormals;o++)y=p+o,nt[y]>=0&&n.numSupportedMorphNormals++;n.uniformsList=[];for(w in n.uniforms)n.uniformsList.push([n.uniforms[w],w])};this.setFaceCulling=function(n,i){n===THREE.CullFaceNone?t.disable(t.CULL_FACE):(i===THREE.FrontFaceDirectionCW?t.frontFace(t.CW):t.frontFace(t.CCW),n===THREE.CullFaceBack?t.cullFace(t.BACK):n===THREE.CullFaceFront?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK),t.enable(t.CULL_FACE))};this.setMaterialFaces=function(n){var i=n.side===THREE.DoubleSide,r=n.side===THREE.BackSide;d!==i&&(i?t.disable(t.CULL_FACE):t.enable(t.CULL_FACE),d=i);g!==r&&(r?t.frontFace(t.CW):t.frontFace(t.CCW),g=r)};this.setDepthTest=function(n){tt!==n&&(n?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),tt=n)};this.setDepthWrite=function(n){it!==n&&(t.depthMask(n),it=n)};this.setBlending=function(n,i,r,u){n!==nt&&(n===THREE.NoBlending?t.disable(t.BLEND):n===THREE.AdditiveBlending?(t.enable(t.BLEND),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE)):n===THREE.SubtractiveBlending?(t.enable(t.BLEND),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR)):n===THREE.MultiplyBlending?(t.enable(t.BLEND),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.SRC_COLOR)):n===THREE.CustomBlending?t.enable(t.BLEND):(t.enable(t.BLEND),t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)),nt=n);n===THREE.CustomBlending?(i!==dt&&(t.blendEquation(e(i)),dt=i),(r!==gt||u!==ni)&&(t.blendFunc(e(r),e(u)),gt=r,ni=u)):(dt=null,gt=null,ni=null)};this.setTexture=function(n,r){var f,s,u,h;if(n.needsUpdate){n.__webglInit||(n.__webglInit=!0,n.addEventListener("dispose",ei),n.__webglTexture=t.createTexture(),i.info.memory.textures++);t.activeTexture(t.TEXTURE0+r);t.bindTexture(t.TEXTURE_2D,n.__webglTexture);t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,n.flipY);t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha);t.pixelStorei(t.UNPACK_ALIGNMENT,n.unpackAlignment);var c=n.image,a=THREE.Math.isPowerOfTwo(c.width)&&THREE.Math.isPowerOfTwo(c.height),o=e(n.format),l=e(n.type);if(wt(t.TEXTURE_2D,n,a),s=n.mipmaps,n instanceof THREE.DataTexture)if(s.length>0&&a){for(u=0,h=s.length;u<h;u++)f=s[u],t.texImage2D(t.TEXTURE_2D,u,o,f.width,f.height,0,o,l,f.data);n.generateMipmaps=!1}else t.texImage2D(t.TEXTURE_2D,0,o,c.width,c.height,0,o,l,c.data);else if(n instanceof THREE.CompressedTexture)for(u=0,h=s.length;u<h;u++)f=s[u],n.format!==THREE.RGBAFormat?t.compressedTexImage2D(t.TEXTURE_2D,u,o,f.width,f.height,0,f.data):t.texImage2D(t.TEXTURE_2D,u,o,f.width,f.height,0,o,l,f.data);else if(s.length>0&&a){for(u=0,h=s.length;u<h;u++)f=s[u],t.texImage2D(t.TEXTURE_2D,u,o,o,l,f);n.generateMipmaps=!1}else t.texImage2D(t.TEXTURE_2D,0,o,o,l,n.image);n.generateMipmaps&&a&&t.generateMipmap(t.TEXTURE_2D);n.needsUpdate=!1;n.onUpdate&&n.onUpdate()}else t.activeTexture(t.TEXTURE0+r),t.bindTexture(t.TEXTURE_2D,n.__webglTexture)};this.setRenderTarget=function(n){var c=n instanceof THREE.WebGLRenderTargetCube,r,u,s,h,l,a;if(n&&!n.__webglFramebuffer){n.depthBuffer===undefined&&(n.depthBuffer=!0);n.stencilBuffer===undefined&&(n.stencilBuffer=!0);n.addEventListener("dispose",cr);n.__webglTexture=t.createTexture();i.info.memory.textures++;var f=THREE.Math.isPowerOfTwo(n.width)&&THREE.Math.isPowerOfTwo(n.height),o=e(n.format),v=e(n.type);if(c){for(n.__webglFramebuffer=[],n.__webglRenderbuffer=[],t.bindTexture(t.TEXTURE_CUBE_MAP,n.__webglTexture),wt(t.TEXTURE_CUBE_MAP,n,f),r=0;r<6;r++)n.__webglFramebuffer[r]=t.createFramebuffer(),n.__webglRenderbuffer[r]=t.createRenderbuffer(),t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,o,n.width,n.height,0,o,v,null),fu(n.__webglFramebuffer[r],n,t.TEXTURE_CUBE_MAP_POSITIVE_X+r),eu(n.__webglRenderbuffer[r],n);f&&t.generateMipmap(t.TEXTURE_CUBE_MAP)}else n.__webglFramebuffer=t.createFramebuffer(),n.__webglRenderbuffer=n.shareDepthFrom?n.shareDepthFrom.__webglRenderbuffer:t.createRenderbuffer(),t.bindTexture(t.TEXTURE_2D,n.__webglTexture),wt(t.TEXTURE_2D,n,f),t.texImage2D(t.TEXTURE_2D,0,o,n.width,n.height,0,o,v,null),fu(n.__webglFramebuffer,n,t.TEXTURE_2D),n.shareDepthFrom?n.depthBuffer&&!n.stencilBuffer?t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,n.__webglRenderbuffer):n.depthBuffer&&n.stencilBuffer&&t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,n.__webglRenderbuffer):eu(n.__webglRenderbuffer,n),f&&t.generateMipmap(t.TEXTURE_2D);c?t.bindTexture(t.TEXTURE_CUBE_MAP,null):t.bindTexture(t.TEXTURE_2D,null);t.bindRenderbuffer(t.RENDERBUFFER,null);t.bindFramebuffer(t.FRAMEBUFFER,null)}n?(u=c?n.__webglFramebuffer[n.activeCubeFace]:n.__webglFramebuffer,s=n.width,h=n.height,l=0,a=0):(u=null,s=ht,h=ct,l=ot,a=st);u!==di&&(t.bindFramebuffer(t.FRAMEBUFFER,u),t.viewport(l,a,s,h),di=u);rr=s;ur=h};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(n,t,i){this.width=n;this.height=t;i=i||{};this.wrapS=i.wrapS!==undefined?i.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=i.wrapT!==undefined?i.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=i.magFilter!==undefined?i.magFilter:THREE.LinearFilter;this.minFilter=i.minFilter!==undefined?i.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=i.anisotropy!==undefined?i.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=i.format!==undefined?i.format:THREE.RGBAFormat;this.type=i.type!==undefined?i.type:THREE.UnsignedByteType;this.depthBuffer=i.depthBuffer!==undefined?i.depthBuffer:!0;this.stencilBuffer=i.stencilBuffer!==undefined?i.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(n,t){this.width=n;this.height=t},clone:function(){var n=new THREE.WebGLRenderTarget(this.width,this.height);return n.wrapS=this.wrapS,n.wrapT=this.wrapT,n.magFilter=this.magFilter,n.minFilter=this.minFilter,n.anisotropy=this.anisotropy,n.offset.copy(this.offset),n.repeat.copy(this.repeat),n.format=this.format,n.type=this.type,n.depthBuffer=this.depthBuffer,n.stencilBuffer=this.stencilBuffer,n.generateMipmaps=this.generateMipmaps,n.shareDepthFrom=this.shareDepthFrom,n},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(n,t,i){THREE.WebGLRenderTarget.call(this,n,t,i);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLProgram=function(){var n=0,t=function(n){var t,i,r=[];for(var u in n)(t=n[u],t!==!1)&&(i="#define "+u+" "+t,r.push(i));return r.join("\n")},i=function(n,t,i){for(var u,f={},r=0,e=i.length;r<e;r++)u=i[r],f[u]=n.getUniformLocation(t,u);return f},r=function(n,t,i){for(var u,f={},r=0,e=i.length;r<e;r++)u=i[r],f[u]=n.getAttribLocation(t,u);return f};return function(u,f,e,o){var a=u,s=a.context,tt=e.fragmentShader,it=e.vertexShader,rt=e.uniforms,ut=e.attributes,ft=e.defines,y=e.index0AttributeName,v,b,c,k,d,p,w,h,g,l,nt;y===undefined&&o.morphTargets===!0&&(y="position");v="SHADOWMAP_TYPE_BASIC";o.shadowMapType===THREE.PCFShadowMap?v="SHADOWMAP_TYPE_PCF":o.shadowMapType===THREE.PCFSoftShadowMap&&(v="SHADOWMAP_TYPE_PCF_SOFT");b=t(ft);c=s.createProgram();e instanceof THREE.RawShaderMaterial?(k="",d=""):(k=["precision "+o.precision+" float;","precision "+o.precision+" int;",b,o.supportsVertexTextures?"#define VERTEX_TEXTURES":"",a.gammaInput?"#define GAMMA_INPUT":"",a.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,"#define MAX_SPOT_LIGHTS "+o.maxSpotLights,"#define MAX_HEMI_LIGHTS "+o.maxHemiLights,"#define MAX_SHADOWS "+o.maxShadows,"#define MAX_BONES "+o.maxBones,o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.lightMap?"#define USE_LIGHTMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.vertexColors?"#define USE_COLOR":"",o.skinning?"#define USE_SKINNING":"",o.useVertexTexture?"#define BONE_TEXTURE":"",o.morphTargets?"#define USE_MORPHTARGETS":"",o.morphNormals?"#define USE_MORPHNORMALS":"",o.wrapAround?"#define WRAP_AROUND":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+v:"",o.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",o.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",o.sizeAttenuation?"#define USE_SIZEATTENUATION":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif",""].join("\n"),d=["precision "+o.precision+" float;","precision "+o.precision+" int;",o.bumpMap||o.normalMap?"#extension GL_OES_standard_derivatives : enable":"",b,"#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,"#define MAX_SPOT_LIGHTS "+o.maxSpotLights,"#define MAX_HEMI_LIGHTS "+o.maxHemiLights,"#define MAX_SHADOWS "+o.maxShadows,o.alphaTest?"#define ALPHATEST "+o.alphaTest:"",a.gammaInput?"#define GAMMA_INPUT":"",a.gammaOutput?"#define GAMMA_OUTPUT":"",o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.lightMap?"#define USE_LIGHTMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.vertexColors?"#define USE_COLOR":"",o.metal?"#define METAL":"",o.wrapAround?"#define WRAP_AROUND":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+v:"",o.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",o.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"));p=new THREE.WebGLShader(s,s.VERTEX_SHADER,k+it);w=new THREE.WebGLShader(s,s.FRAGMENT_SHADER,d+tt);s.attachShader(c,p);s.attachShader(c,w);y!==undefined&&s.bindAttribLocation(c,0,y);s.linkProgram(c);s.getProgramParameter(c,s.LINK_STATUS)===!1&&(console.error("Could not initialise shader"),console.error("gl.VALIDATE_STATUS",s.getProgramParameter(c,s.VALIDATE_STATUS)),console.error("gl.getError()",s.getError()));s.getProgramInfoLog(c)!==""&&console.error("gl.getProgramInfoLog()",s.getProgramInfoLog(c));s.deleteShader(p);s.deleteShader(w);h=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"];o.useVertexTexture?(h.push("boneTexture"),h.push("boneTextureWidth"),h.push("boneTextureHeight")):h.push("boneGlobalMatrices");o.logarithmicDepthBuffer&&h.push("logDepthBufFC");for(g in rt)h.push(g);for(this.uniforms=i(s,c,h),h=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],l=0;l<o.maxMorphTargets;l++)h.push("morphTarget"+l);for(l=0;l<o.maxMorphNormals;l++)h.push("morphNormal"+l);for(nt in ut)h.push(nt);return this.attributes=r(s,c,h),this.id=n++,this.code=f,this.usedTimes=1,this.program=c,this.vertexShader=p,this.fragmentShader=w,this}}();THREE.WebGLShader=function(){var n=function(n){for(var i=n.split("\n"),t=0;t<i.length;t++)i[t]=t+1+": "+i[t];return i.join("\n")};return function(t,i,r){var u=t.createShader(i);return t.shaderSource(u,r),t.compileShader(u),t.getShaderParameter(u,t.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),t.getShaderInfoLog(u)!==""&&(console.error("THREE.WebGLShader:","gl.getShaderInfoLog()",t.getShaderInfoLog(u)),console.error(n(r))),u}}();THREE.RenderableVertex=function(){this.position=new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(n){this.positionWorld.copy(n.positionWorld);this.positionScreen.copy(n.positionScreen)};THREE.RenderableFace=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.normalModel=new THREE.Vector3;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.color=null;this.material=null;this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2];this.z=0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.x=0;this.y=0;this.z=0;this.rotation=0;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};THREE.GeometryUtils={merge:function(n,t,i){console.warn("DEPRECATED: GeometryUtils's .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var r;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry);n.merge(t,r,i)},randomPointInTriangle:function(){var n=new THREE.Vector3;return function(t,i,r){var u=new THREE.Vector3,f=THREE.Math.random16(),e=THREE.Math.random16(),o;return f+e>1&&(f=1-f,e=1-e),o=1-f-e,u.copy(t),u.multiplyScalar(f),n.copy(i),n.multiplyScalar(e),u.add(n),n.copy(r),n.multiplyScalar(o),u.add(n),u}}(),randomPointInFace:function(n,t){var i,r,u;return i=t.vertices[n.a],r=t.vertices[n.b],u=t.vertices[n.c],THREE.GeometryUtils.randomPointInTriangle(i,r,u)},randomPointsInGeometry:function(n,t){function w(n){function t(i,r){if(r<i)return i;var u=i+Math.floor((r-i)/2);return f[u]>n?t(i,u-1):f[u]<n?t(u+1,r):u}return t(0,f.length-1)}for(var r,o=n.faces,s=n.vertices,p=o.length,h=0,f=[],l,a,v,y,u,c,e,i=0;i<p;i++)r=o[i],l=s[r.a],a=s[r.b],v=s[r.c],r._area=THREE.GeometryUtils.triangleArea(l,a,v),h+=r._area,f[i]=h;for(c=[],e={},i=0;i<t;i++)y=THREE.Math.random16()*h,u=w(y),c[i]=THREE.GeometryUtils.randomPointInFace(o[u],n,!0),e[u]?e[u]+=1:e[u]=1;return c},triangleArea:function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(i,r,u){return n.subVectors(r,i),t.subVectors(u,i),n.cross(t),.5*n.length()}}(),center:function(n){n.computeBoundingBox();var i=n.boundingBox,t=new THREE.Vector3;return t.addVectors(i.min,i.max),t.multiplyScalar(-.5),n.applyMatrix((new THREE.Matrix4).makeTranslation(t.x,t.y,t.z)),n.computeBoundingBox(),t}};THREE.ImageUtils={crossOrigin:undefined,loadTexture:function(n,t,i,r){var f=new THREE.ImageLoader,u,e;return f.crossOrigin=this.crossOrigin,u=new THREE.Texture(undefined,t),e=f.load(n,function(){u.needsUpdate=!0;i&&i(u)},undefined,function(n){r&&r(n)}),u.image=e,u.sourceFile=n,u},loadCompressedTexture:function(n,t,i,r){var u=new THREE.CompressedTexture,f;return u.mapping=t,f=new XMLHttpRequest,f.onload=function(){var t=f.response,n=THREE.ImageUtils.parseDDS(t,!0);u.format=n.format;u.mipmaps=n.mipmaps;u.image.width=n.width;u.image.height=n.height;u.generateMipmaps=!1;u.needsUpdate=!0;i&&i(u)},f.onerror=r,f.open("GET",n,!0),f.responseType="arraybuffer",f.send(null),u},loadTextureCube:function(n,t,i){var u=[],e,r,f,o,s;for(u.loadCount=0,e=new THREE.ImageLoader,e.crossOrigin=this.crossOrigin,r=new THREE.Texture,r.image=u,t!==undefined&&(r.mapping=t),r.flipY=!1,f=0,o=n.length;f<o;++f)s=e.load(n[f],function(){u.loadCount+=1;u.loadCount===6&&(r.needsUpdate=!0,i&&i(r))}),u[f]=s;return r},loadCompressedTextureCube:function(n,t,i,r){var e=[],f,c,o,l,h,s,u;if(e.loadCount=0,f=new THREE.CompressedTexture,f.image=e,t!==undefined&&(f.mapping=t),f.flipY=!1,f.generateMipmaps=!1,c=function(n,t){return function(){var u=n.response,r=THREE.ImageUtils.parseDDS(u,!0);t.format=r.format;t.mipmaps=r.mipmaps;t.width=r.width;t.height=r.height;e.loadCount+=1;e.loadCount===6&&(f.format=r.format,f.needsUpdate=!0,i&&i(f))}},n instanceof Array)for(o=0,l=n.length;o<l;++o)h={},e[o]=h,u=new XMLHttpRequest,u.onload=c(u,h),u.onerror=r,s=n[o],u.open("GET",s,!0),u.responseType="arraybuffer",u.send(null);else s=n,u=new XMLHttpRequest,u.onload=function(){var s=u.response,n=THREE.ImageUtils.parseDDS(s,!0),o,t,r;if(n.isCubemap){for(o=n.mipmaps.length/n.mipmapCount,t=0;t<o;t++)for(e[t]={mipmaps:[]},r=0;r<n.mipmapCount;r++)e[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+r]),e[t].format=n.format,e[t].width=n.width,e[t].height=n.height;f.format=n.format;f.needsUpdate=!0;i&&i(f)}},u.onerror=r,u.open("GET",s,!0),u.responseType="arraybuffer",u.send(null);return f},loadDDSTexture:function(n,t,i,r){var f=[],u,e;return f.loadCount=0,u=new THREE.CompressedTexture,u.image=f,t!==undefined&&(u.mapping=t),u.flipY=!1,u.generateMipmaps=!1,e=new XMLHttpRequest,e.onload=function(){var s=e.response,n=THREE.ImageUtils.parseDDS(s,!0),o,t,r;if(n.isCubemap)for(o=n.mipmaps.length/n.mipmapCount,t=0;t<o;t++)for(f[t]={mipmaps:[]},r=0;r<n.mipmapCount;r++)f[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+r]),f[t].format=n.format,f[t].width=n.width,f[t].height=n.height;else u.image.width=n.width,u.image.height=n.height,u.mipmaps=n.mipmaps;u.format=n.format;u.needsUpdate=!0;i&&i(u)},e.onerror=r,e.open("GET",n,!0),e.responseType="arraybuffer",e.send(null),u},parseDDS:function(n,t){function h(n){return n.charCodeAt(0)+(n.charCodeAt(1)<<8)+(n.charCodeAt(2)<<16)+(n.charCodeAt(3)<<24)}function w(n){return String.fromCharCode(n&255,n>>8&255,n>>16&255,n>>24&255)}function b(n,t,i,r){for(var s,l,a,v,y,h=i*r*4,o=new Uint8Array(n,t,h),e=new Uint8Array(h),u=0,f=0,c=0;c<r;c++)for(s=0;s<i;s++)l=o[f],f++,a=o[f],f++,v=o[f],f++,y=o[f],f++,e[u]=v,u++,e[u]=a,u++,e[u]=l,u++,e[u]=y,u++;return e}var i={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},k=h("DXT1"),d=h("DXT3"),g=h("DXT5"),r=new Int32Array(n,0,31),e,c,l,v,y,s,o,p;if(r[0]!==542327876)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),i;if(!r[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),i;c=r[21];l=!1;switch(c){case k:e=8;i.format=THREE.RGB_S3TC_DXT1_Format;break;case d:e=16;i.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:e=16;i.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(r[22]==32&&r[23]&16711680&&r[24]&65280&&r[25]&255&&r[26]&4278190080)l=!0,e=64,i.format=THREE.RGBAFormat;else return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",w(c)),i}i.mipmapCount=1;r[2]&131072&&t!==!1&&(i.mipmapCount=Math.max(1,r[7]));i.isCubemap=r[28]&512?!0:!1;i.width=r[4];i.height=r[3];var a=r[1]+4,u=i.width,f=i.height,nt=i.isCubemap?6:1;for(v=0;v<nt;v++){for(y=0;y<i.mipmapCount;y++)l?(o=b(n,a,u,f),s=o.length):(s=Math.max(4,u)/4*Math.max(4,f)/4*e,o=new Uint8Array(n,a,s)),p={data:o,width:u,height:f},i.mipmaps.push(p),a+=s,u=Math.max(u*.5,1),f=Math.max(f*.5,1);u=i.width;f=i.height}return i},getNormalMap:function(n,t){var ut=function(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]},tt=function(n,t){return[n[0]-t[0],n[1]-t[1],n[2]-t[2]]},ft=function(n){var t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);return[n[0]/t,n[1]/t,n[2]/t]},l,r,u,h,nt,p,w,o,e,a;t=t|1;var i=n.width,c=n.height,v=document.createElement("canvas");v.width=i;v.height=c;l=v.getContext("2d");l.drawImage(n,0,0);var s=l.getImageData(0,0,i,c).data,it=l.createImageData(i,c),y=it.data;for(r=0;r<i;r++)for(u=0;u<c;u++){var b=u-1<0?0:u-1,k=u+1>c-1?c-1:u+1,d=r-1<0?0:r-1,g=r+1>i-1?i-1:r+1,f=[],rt=[0,0,s[(u*i+r)*4]/255*t];for(f.push([-1,0,s[(u*i+d)*4]/255*t]),f.push([-1,-1,s[(b*i+d)*4]/255*t]),f.push([0,-1,s[(b*i+r)*4]/255*t]),f.push([1,-1,s[(b*i+g)*4]/255*t]),f.push([1,0,s[(u*i+g)*4]/255*t]),f.push([1,1,s[(k*i+g)*4]/255*t]),f.push([0,1,s[(k*i+r)*4]/255*t]),f.push([-1,1,s[(k*i+d)*4]/255*t]),h=[],nt=f.length,e=0;e<nt;e++)p=f[e],w=f[(e+1)%nt],p=tt(p,rt),w=tt(w,rt),h.push(ft(ut(p,w)));for(o=[0,0,0],e=0;e<h.length;e++)o[0]+=h[e][0],o[1]+=h[e][1],o[2]+=h[e][2];o[0]/=h.length;o[1]/=h.length;o[2]/=h.length;a=(u*i+r)*4;y[a]=(o[0]+1)/2*255|0;y[a+1]=(o[1]+1)/2*255|0;y[a+2]=o[2]*255|0;y[a+3]=255}return l.putImageData(it,0,0),v},generateDataTexture:function(n,t,i){for(var f,e=n*t,u=new Uint8Array(3*e),o=Math.floor(i.r*255),s=Math.floor(i.g*255),h=Math.floor(i.b*255),r=0;r<e;r++)u[r*3]=o,u[r*3+1]=s,u[r*3+2]=h;return f=new THREE.DataTexture(u,n,t,THREE.RGBFormat),f.needsUpdate=!0,f}};THREE.SceneUtils={createMultiMaterialObject:function(n,t){for(var r=new THREE.Object3D,i=0,u=t.length;i<u;i++)r.add(new THREE.Mesh(n,t[i]));return r},detach:function(n,t,i){n.applyMatrix(t.matrixWorld);t.remove(n);i.add(n)},attach:function(n,t,i){var r=new THREE.Matrix4;r.getInverse(i.matrixWorld);n.applyMatrix(r);t.remove(n);i.add(n)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(n){var t=n.familyName.toLowerCase(),i=this,r;return i.faces[t]=i.faces[t]||{},i.faces[t][n.cssFontWeight]=i.faces[t][n.cssFontWeight]||{},i.faces[t][n.cssFontWeight][n.cssFontStyle]=n,r=i.faces[t][n.cssFontWeight][n.cssFontStyle]=n,n},drawText:function(n){for(var u=this.getFace(),h=this.size/u.resolution,i=0,f=String(n).split(""),c=f.length,e=[],o,r,s,t=0;t<c;t++)o=new THREE.Path,r=this.extractGlyphPoints(f[t],u,h,i,o),i+=r.offset,e.push(r.path);return s=i/2,{paths:e,offset:s}},extractGlyphPoints:function(n,t,i,r,u){var b=[],f,o,l,e,ut,ft,s,h,k,d,a,v,g,nt,y,p,it,rt,c,w=t.glyphs[n]||t.glyphs["?"];if(w){if(w.o)for(e=w._cachedOutline||(w._cachedOutline=w.o.split(" ")),ft=e.length,s=i,h=i,f=0;f<ft;){ut=e[f++];switch(ut){case"m":k=e[f++]*s+r;d=e[f++]*h;u.moveTo(k,d);break;case"l":k=e[f++]*s+r;d=e[f++]*h;u.lineTo(k,d);break;case"q":if(a=e[f++]*s+r,v=e[f++]*h,y=e[f++]*s+r,p=e[f++]*h,u.quadraticCurveTo(y,p,a,v),c=b[b.length-1],c)for(g=c.x,nt=c.y,o=1,l=this.divisions;o<=l;o++)var tt=o/l,et=THREE.Shape.Utils.b2(tt,g,y,a),ot=THREE.Shape.Utils.b2(tt,nt,p,v);break;case"b":if(a=e[f++]*s+r,v=e[f++]*h,y=e[f++]*s+r,p=e[f++]*-h,it=e[f++]*s+r,rt=e[f++]*-h,u.bezierCurveTo(a,v,y,p,it,rt),c=b[b.length-1],c)for(g=c.x,nt=c.y,o=1,l=this.divisions;o<=l;o++)var tt=o/l,et=THREE.Shape.Utils.b3(tt,g,y,it,a),ot=THREE.Shape.Utils.b3(tt,nt,p,rt,v)}}return{offset:w.ha*i,path:u}}}};THREE.FontUtils.generateShapes=function(n,t){var i,f;t=t||{};var e=t.size!==undefined?t.size:100,o=t.curveSegments!==undefined?t.curveSegments:4,s=t.font!==undefined?t.font:"helvetiker",h=t.weight!==undefined?t.weight:"normal",c=t.style!==undefined?t.style:"normal";THREE.FontUtils.size=e;THREE.FontUtils.divisions=o;THREE.FontUtils.face=s;THREE.FontUtils.weight=h;THREE.FontUtils.style=c;var l=THREE.FontUtils.drawText(n),r=l.paths,u=[];for(i=0,f=r.length;i<f;i++)Array.prototype.push.apply(u,r[i].toShapes());return u},function(n){var t=1e-10,r=function(n,t){var h=n.length,e,v,p,w,b,y,c;if(h<3)return null;var l=[],f=[],a=[],o,r,s;if(i(n)>0)for(r=0;r<h;r++)f[r]=r;else for(r=0;r<h;r++)f[r]=h-1-r;for(e=h,v=2*e,r=e-1;e>2;){if(v--<=0)return(console.log("Warning, unable to triangulate polygon!"),t)?a:l;if(o=r,e<=o&&(o=0),r=o+1,e<=r&&(r=0),s=r+1,e<=s&&(s=0),u(n,o,r,s,e,f)){for(p=f[o],w=f[r],b=f[s],l.push([n[p],n[w],n[b]]),a.push([f[o],f[r],f[s]]),y=r,c=r+1;c<e;y++,c++)f[y]=f[c];e--;v=2*e}}return t?a:l},i=function(n){for(var r=n.length,u=0,i=r-1,t=0;t<r;i=t++)u+=n[i].x*n[t].y-n[t].x*n[i].y;return u*.5},u=function(n,i,r,u,f,e){var p,o,s,l,a,v,y,h,c,w,b,k,d,g,nt,tt,it,rt,ut,ft,et,ot,st,ht;if(o=n[e[i]].x,s=n[e[i]].y,l=n[e[r]].x,a=n[e[r]].y,v=n[e[u]].x,y=n[e[u]].y,t>(l-o)*(y-s)-(a-s)*(v-o))return!1;for(w=v-l,b=y-a,k=o-v,d=s-y,g=l-o,nt=a-s,p=0;p<f;p++)if((h=n[e[p]].x,c=n[e[p]].y,(h!==o||c!==s)&&(h!==l||c!==a)&&(h!==v||c!==y))&&(tt=h-o,it=c-s,rt=h-l,ut=c-a,ft=h-v,et=c-y,ht=w*ut-b*rt,ot=g*it-nt*tt,st=k*et-d*ft,ht>=-t&&st>=-t&&ot>=-t))return!1;return!0};return n.Triangulate=r,n.Triangulate.area=i,n}(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null};THREE.Curve.prototype.getPointAt=function(n){var t=this.getUtoTmapping(n);return this.getPoint(t)};THREE.Curve.prototype.getPoints=function(n){n||(n=5);for(var i=[],t=0;t<=n;t++)i.push(this.getPoint(t/n));return i};THREE.Curve.prototype.getSpacedPoints=function(n){n||(n=5);for(var i=[],t=0;t<=n;t++)i.push(this.getPointAt(t/n));return i};THREE.Curve.prototype.getLength=function(){var n=this.getLengths();return n[n.length-1]};THREE.Curve.prototype.getLengths=function(n){if(n||(n=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==n+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],r,u=this.getPoint(0),i,f=0;for(t.push(0),i=1;i<=n;i++)r=this.getPoint(i/n),f+=r.distanceTo(u),t.push(f),u=r;return this.cacheArcLengths=t,t};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(n,t){var r=this.getLengths(),i=0,e=r.length,o,f,u,s;for(o=t?t:n*r[e-1],f=0,u=e-1;f<=u;)if(i=Math.floor(f+(u-f)/2),s=r[i]-o,s<0){f=i+1;continue}else if(s>0){u=i-1;continue}else{u=i;break}if(i=u,r[i]==o)return i/(e-1);var h=r[i],c=r[i+1],l=c-h,a=(o-h)/l;return(i+a)/(e-1)};THREE.Curve.prototype.getTangent=function(n){var r=.0001,t=n-r,i=n+r;t<0&&(t=0);i>1&&(i=1);var u=this.getPoint(t),f=this.getPoint(i),e=f.clone().sub(u);return e.normalize()};THREE.Curve.prototype.getTangentAt=function(n){var t=this.getUtoTmapping(n);return this.getTangent(t)};THREE.Curve.Utils={tangentQuadraticBezier:function(n,t,i,r){return 2*(1-n)*(i-t)+2*n*(r-i)},tangentCubicBezier:function(n,t,i,r,u){return-3*t*(1-n)*(1-n)+3*i*(1-n)*(1-n)-6*n*i*(1-n)+6*n*r*(1-n)-3*n*n*r+3*n*n*u},tangentSpline:function(n){var t=6*n*n-6*n,i=3*n*n-4*n+1,r=-6*n*n+6*n,u=3*n*n-2*n;return t+i+r+u},interpolate:function(n,t,i,r,u){var f=(i-n)*.5,e=(r-t)*.5,o=u*u,s=u*o;return(2*t-2*i+f+e)*s+(-3*t+3*i-2*f-e)*o+f*u+t}};THREE.Curve.create=function(n,t){return n.prototype=Object.create(THREE.Curve.prototype),n.prototype.getPoint=t,n};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(n){this.curves.push(n)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var n=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);n.equals(t)||this.curves.push(new THREE.LineCurve(t,n))};THREE.CurvePath.prototype.getPoint=function(n){for(var u=n*this.getLength(),i=this.getCurveLengths(),t=0,f,r,e;t<i.length;){if(i[t]>=u)return f=i[t]-u,r=this.curves[t],e=1-f/r.getLength(),r.getPointAt(e);t++}return null};THREE.CurvePath.prototype.getLength=function(){var n=this.getCurveLengths();return n[n.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;for(var t=[],i=0,r=this.curves.length,n=0;n<r;n++)i+=this.curves[n].getLength(),t.push(i);return this.cacheLengths=t,t};THREE.CurvePath.prototype.getBoundingBox=function(){var s=this.getPoints(),t,i,h,r,u,c,n,f,l,a,e,o;for(t=i=Number.NEGATIVE_INFINITY,r=u=Number.POSITIVE_INFINITY,e=s[0]instanceof THREE.Vector3,a=e?new THREE.Vector3:new THREE.Vector2,f=0,l=s.length;f<l;f++)n=s[f],n.x>t?t=n.x:n.x<r&&(r=n.x),n.y>i?i=n.y:n.y<u&&(u=n.y),e&&(n.z>h?h=n.z:n.z<c&&(c=n.z)),a.add(n);return o={minX:r,minY:u,maxX:t,maxY:i},e&&(o.maxZ=h,o.minZ=c),o};THREE.CurvePath.prototype.createPointsGeometry=function(n){var t=this.getPoints(n,!0);return this.createGeometry(t)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(n){var t=this.getSpacedPoints(n,!0);return this.createGeometry(t)};THREE.CurvePath.prototype.createGeometry=function(n){for(var i=new THREE.Geometry,t=0;t<n.length;t++)i.vertices.push(new THREE.Vector3(n[t].x,n[t].y,n[t].z||0));return i};THREE.CurvePath.prototype.addWrapPath=function(n){this.bends.push(n)};THREE.CurvePath.prototype.getTransformedPoints=function(n,t){var r=this.getPoints(n),i,u;for(t||(t=this.bends),i=0,u=t.length;i<u;i++)r=this.getWrapPoints(r,t[i]);return r};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(n,t){var r=this.getSpacedPoints(n),i,u;for(t||(t=this.bends),i=0,u=t.length;i<u;i++)r=this.getWrapPoints(r,t[i]);return r};THREE.CurvePath.prototype.getWrapPoints=function(n,t){for(var c=this.getBoundingBox(),r,e,h,u,o,i,f=0,s=n.length;f<s;f++)r=n[f],e=r.x,h=r.y,u=e/c.maxX,u=t.getUtoTmapping(u,e),o=t.getPoint(u),i=t.getTangent(u),i.set(-i.y,i.x).multiplyScalar(h),r.x=o.x+i.x,r.y=o.y+i.y;return n};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(n){this.matrixAutoUpdate&&this.updateMatrix();(this.matrixWorldNeedsUpdate||n)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,n=!0);for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(n)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(n){THREE.CurvePath.call(this);this.actions=[];n&&this.fromPoints(n)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(n){this.moveTo(n[0].x,n[0].y);for(var t=1,i=n.length;t<i;t++)this.lineTo(n[t].x,n[t].y)};THREE.Path.prototype.moveTo=function(){var n=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:n})};THREE.Path.prototype.lineTo=function(n,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,u=i[i.length-2],f=i[i.length-1],e=new THREE.LineCurve(new THREE.Vector2(u,f),new THREE.Vector2(n,t));this.curves.push(e);this.actions.push({action:THREE.PathActions.LINE_TO,args:r})};THREE.Path.prototype.quadraticCurveTo=function(n,t,i,r){var f=Array.prototype.slice.call(arguments),u=this.actions[this.actions.length-1].args,e=u[u.length-2],o=u[u.length-1],s=new THREE.QuadraticBezierCurve(new THREE.Vector2(e,o),new THREE.Vector2(n,t),new THREE.Vector2(i,r));this.curves.push(s);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})};THREE.Path.prototype.bezierCurveTo=function(n,t,i,r,u,f){var o=Array.prototype.slice.call(arguments),e=this.actions[this.actions.length-1].args,s=e[e.length-2],h=e[e.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(s,h),new THREE.Vector2(n,t),new THREE.Vector2(i,r),new THREE.Vector2(u,f));this.curves.push(c);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})};THREE.Path.prototype.splineThru=function(n){var u=Array.prototype.slice.call(arguments),t=this.actions[this.actions.length-1].args,f=t[t.length-2],e=t[t.length-1],i=[new THREE.Vector2(f,e)],r;Array.prototype.push.apply(i,n);r=new THREE.SplineCurve(i);this.curves.push(r);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:u})};THREE.Path.prototype.arc=function(n,t,i,r,u,f){var e=this.actions[this.actions.length-1].args,o=e[e.length-2],s=e[e.length-1];this.absarc(n+o,t+s,i,r,u,f)};THREE.Path.prototype.absarc=function(n,t,i,r,u,f){this.absellipse(n,t,i,i,r,u,f)};THREE.Path.prototype.ellipse=function(n,t,i,r,u,f,e){var o=this.actions[this.actions.length-1].args,s=o[o.length-2],h=o[o.length-1];this.absellipse(n+s,t+h,i,r,u,f,e)};THREE.Path.prototype.absellipse=function(n,t,i,r,u,f,e){var o=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(n,t,i,r,u,f,e),s;this.curves.push(h);s=h.getPoint(1);o.push(s.x);o.push(s.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:o})};THREE.Path.prototype.getSpacedPoints=function(n){var i,t;for(n||(n=40),i=[],t=0;t<n;t++)i.push(this.getPoint(t/n));return i};THREE.Path.prototype.getPoints=function(n,t){var r,h,it,d,rt,i,v,y,ut,ft,p,w,c,l,u,f,e,o,s,ot,nt,tt;if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(n,t);for(n=n||12,r=[],h=0,it=this.actions.length;h<it;h++){d=this.actions[h];rt=d.action;i=d.args;switch(rt){case THREE.PathActions.MOVE_TO:r.push(new THREE.Vector2(i[0],i[1]));break;case THREE.PathActions.LINE_TO:r.push(new THREE.Vector2(i[0],i[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(v=i[2],y=i[3],p=i[0],w=i[1],r.length>0?(u=r[r.length-1],c=u.x,l=u.y):(u=this.actions[h-1].args,c=u[u.length-2],l=u[u.length-1]),f=1;f<=n;f++)e=f/n,o=THREE.Shape.Utils.b2(e,c,p,v),s=THREE.Shape.Utils.b2(e,l,w,y),r.push(new THREE.Vector2(o,s));break;case THREE.PathActions.BEZIER_CURVE_TO:for(v=i[4],y=i[5],p=i[0],w=i[1],ut=i[2],ft=i[3],r.length>0?(u=r[r.length-1],c=u.x,l=u.y):(u=this.actions[h-1].args,c=u[u.length-2],l=u[u.length-1]),f=1;f<=n;f++)e=f/n,o=THREE.Shape.Utils.b3(e,c,p,ut,v),s=THREE.Shape.Utils.b3(e,l,w,ft,y),r.push(new THREE.Vector2(o,s));break;case THREE.PathActions.CSPLINE_THRU:u=this.actions[h-1].args;var yt=new THREE.Vector2(u[u.length-2],u[u.length-1]),g=[yt],et=n*i[0].length;for(g=g.concat(i[0]),ot=new THREE.SplineCurve(g),f=1;f<=et;f++)r.push(ot.getPointAt(f/et));break;case THREE.PathActions.ARC:var st=i[0],ht=i[1],ct=i[2],b=i[3],lt=i[4],at=!!i[5],vt=lt-b,a,k=n*2;for(f=1;f<=k;f++)e=f/k,at||(e=1-e),a=b+e*vt,o=st+ct*Math.cos(a),s=ht+ct*Math.sin(a),r.push(new THREE.Vector2(o,s));break;case THREE.PathActions.ELLIPSE:var st=i[0],ht=i[1],pt=i[2],wt=i[3],b=i[4],lt=i[5],at=!!i[6],vt=lt-b,a,k=n*2;for(f=1;f<=k;f++)e=f/k,at||(e=1-e),a=b+e*vt,o=st+pt*Math.cos(a),s=ht+wt*Math.sin(a),r.push(new THREE.Vector2(o,s))}}return nt=r[r.length-1],tt=1e-10,Math.abs(nt.x-r[0].x)<tt&&Math.abs(nt.y-r[0].y)<tt&&r.splice(r.length-1,1),t&&r.push(r[0]),r};THREE.Path.prototype.toShapes=function(n,t){function ot(n){for(var r,u,o,f=[],t=new THREE.Path,i=0,e=n.length;i<e;i++)r=n[i],o=r.args,u=r.action,u==THREE.PathActions.MOVE_TO&&t.actions.length!=0&&(f.push(t),t=new THREE.Path),t[u].apply(t,o);return t.actions.length!=0&&f.push(t),f}function ft(n){for(var r,t,u=[],i=0,f=n.length;i<f;i++)r=n[i],t=new THREE.Shape,t.actions=r.actions,t.curves=r.curves,u.push(t);return u}function st(n,t){for(var h,c=t.length,e=!1,o=c-1,f=0;f<c;o=f++){var i=t[o],r=t[f],s=r.x-i.x,u=r.y-i.y;if(Math.abs(u)>1e-10){if(u<0&&(i=t[f],s=-s,r=t[o],u=-u),n.y<i.y||n.y>r.y)continue;if(n.y==i.y){if(n.x==i.x)return!0}else{if(h=u*(n.x-i.x)-s*(n.y-i.y),h==0)return!0;if(h<0)continue;e=!e}}else{if(n.y!=i.y)continue;if(r.x<=n.x&&n.x<=i.x||i.x<=n.x&&n.x<=r.x)return!0}}return e}var e=ot(this.actions),a,o,s,v,c,f,b,tt,it,r,k,ht,rt,y,d,g,h,ut,nt,et;if(e.length==0)return[];if(t===!0)return ft(e);if(v=[],e.length==1)return o=e[0],s=new THREE.Shape,s.actions=o.actions,s.curves=o.curves,v.push(s),v;c=!THREE.Shape.Utils.isClockWise(e[0].getPoints());c=n?!c:c;var p=[],i=[],l=[],u=0,w;for(i[u]=undefined,l[u]=[],f=0,b=e.length;f<b;f++)o=e[f],w=o.getPoints(),a=THREE.Shape.Utils.isClockWise(w),a=n?!a:a,a?(!c&&i[u]&&u++,i[u]={s:new THREE.Shape,p:w},i[u].s.actions=o.actions,i[u].s.curves=o.curves,c&&u++,l[u]=[]):l[u].push({h:o,p:w[0]});if(!i[0])return ft(e);if(i.length>1){for(tt=!1,it=[],r=0,k=i.length;r<k;r++)p[r]=[];for(r=0,k=i.length;r<k;r++)for(ht=i[r],rt=l[r],y=0;y<rt.length;y++){for(d=rt[y],g=!0,h=0;h<i.length;h++)st(d.p,i[h].p)&&(r!=h&&it.push({froms:r,tos:h,hole:y}),g?(g=!1,p[h].push(d)):tt=!0);g&&p[r].push(d)}it.length>0&&(tt||(l=p))}for(f=0,b=i.length;f<b;f++)for(s=i[f].s,v.push(s),ut=l[f],nt=0,et=ut.length;nt<et;nt++)s.holes.push(ut[nt].h);return v};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(n){return new THREE.ExtrudeGeometry(this,n)};THREE.Shape.prototype.makeGeometry=function(n){return new THREE.ShapeGeometry(this,n)};THREE.Shape.prototype.getPointsHoles=function(n){for(var r=this.holes.length,i=[],t=0;t<r;t++)i[t]=this.holes[t].getTransformedPoints(n,this.bends);return i};THREE.Shape.prototype.getSpacedPointsHoles=function(n){for(var r=this.holes.length,i=[],t=0;t<r;t++)i[t]=this.holes[t].getTransformedSpacedPoints(n,this.bends);return i};THREE.Shape.prototype.extractAllPoints=function(n){return{shape:this.getTransformedPoints(n),holes:this.getPointsHoles(n)}};THREE.Shape.prototype.extractPoints=function(n){return this.useSpacedPoints?this.extractAllSpacedPoints(n):this.extractAllPoints(n)};THREE.Shape.prototype.extractAllSpacedPoints=function(n){return{shape:this.getTransformedSpacedPoints(n),holes:this.getSpacedPointsHoles(n)}};THREE.Shape.Utils={triangulateShape:function(n,t){function a(n,t,i){return n.x!=t.x?n.x<t.x?n.x<=i.x&&i.x<=t.x:t.x<=i.x&&i.x<=n.x:n.y<t.y?n.y<=i.y&&i.y<=t.y:t.y<=i.y&&i.y<=n.y}function v(n,t,i,r,u){var b=t.x-n.x,g=t.y-n.y,k=r.x-i.x,d=r.y-i.y,nt=n.x-i.x,tt=n.y-i.y,f=g*k-b*d,e=g*nt-b*tt,o,it,rt,ut,c,p,l,s,v,w,y,h;if(Math.abs(f)>1e-10){if(f>0){if(e<0||e>f)return[];if(o=d*nt-k*tt,o<0||o>f)return[]}else{if(e>0||e<f)return[];if(o=d*nt-k*tt,o>0||o<f)return[]}return o==0?u&&(e==0||e==f)?[]:[n]:o==f?u&&(e==0||e==f)?[]:[t]:e==0?[i]:e==f?[r]:(it=o/f,[{x:n.x+it*b,y:n.y+it*g}])}return e!=0||d*nt!=k*tt?[]:(rt=b==0&&g==0,ut=k==0&&d==0,rt&&ut)?n.x!=i.x||n.y!=i.y?[]:[n]:rt?a(i,r,n)?[n]:[]:ut?a(n,t,i)?[i]:[]:(b!=0?(n.x<t.x?(c=n,l=n.x,p=t,s=t.x):(c=t,l=t.x,p=n,s=n.x),i.x<r.x?(v=i,y=i.x,w=r,h=r.x):(v=r,y=r.x,w=i,h=i.x)):(n.y<t.y?(c=n,l=n.y,p=t,s=t.y):(c=t,l=t.y,p=n,s=n.y),i.y<r.y?(v=i,y=i.y,w=r,h=r.y):(v=r,y=r.y,w=i,h=i.y)),l<=y?s<y?[]:s==y?u?[]:[v]:s<=h?[v,p]:[v,w]:l>h?[]:l==h?u?[]:[c]:s<=h?[c,p]:[c,w])}function y(n,t,i,r){var e=t.x-n.x,o=t.y-n.y,s=i.x-n.x,h=i.y-n.y,c=r.x-n.x,l=r.y-n.y,a=e*h-o*s,u=e*l-o*c,f;return Math.abs(a)>1e-10?(f=c*h-l*s,a>0?u>=0&&f>=0:u>=0||f>=0):u>0}function w(n,t){function tt(n,t){var c=i.length-1,s=n-1,u,f,h,e,o;return(s<0&&(s=c),u=n+1,u>c&&(u=0),f=y(i[n],i[s],i[u],r[t]),!f)?!1:(h=r.length-1,e=t-1,e<0&&(e=h),o=t+1,o>h&&(o=0),f=y(r[t],r[e],r[o],i[n]),!f)?!1:!0}function it(n,t){for(var u,f,r=0;r<i.length;r++)if(u=r+1,u%=i.length,f=v(n,t,i[r],i[u],!0),f.length>0)return!0;return!1}function rt(n,i){for(var r,f,o,s,e=0;e<u.length;e++)for(r=t[u[e]],f=0;f<r.length;f++)if(o=f+1,o%=r.length,s=v(n,i,r[f],r[o],!0),s.length>0)return!0;return!1}for(var p,w,s,i=n.concat(),r,u=[],o,f,h,c,l,a,b=[],k,d,g,nt,e=0,ut=t.length;e<ut;e++)u.push(e);for(p=0,w=u.length*2;u.length>0;){if(w--,w<0){console.log("Infinite Loop! Holes left:"+u.length+", Probably Hole outside Shape!");break}for(f=p;f<i.length;f++){for(h=i[f],o=-1,e=0;e<u.length;e++)if(l=u[e],a=h.x+":"+h.y+":"+l,b[a]===undefined){for(r=t[l],s=0;s<r.length;s++)if((c=r[s],tt(f,s))&&!it(h,c)&&!rt(h,c)){o=s;u.splice(e,1);k=i.slice(0,f+1);d=i.slice(f);g=r.slice(o);nt=r.slice(0,o+1);i=k.concat(g).concat(nt).concat(d);p=f;break}if(o>=0)break;b[a]=!0}if(o>=0)break}}return i}for(var p,s,i,f,r,e,u,h,c={},o=n.concat(),l=0,b=t.length;l<b;l++)Array.prototype.push.apply(o,t[l]);for(i=0,f=o.length;i<f;i++)u=o[i].x+":"+o[i].y,c[u]!==undefined&&console.log("Duplicate point",u),c[u]=i;for(p=w(n,t),s=THREE.FontUtils.Triangulate(p,!1),i=0,f=s.length;i<f;i++)for(e=s[i],r=0;r<3;r++)u=e[r].x+":"+e[r].y,h=c[u],h!==undefined&&(e[r]=h);return s.concat()},isClockWise:function(n){return THREE.FontUtils.Triangulate.area(n)<0},b2p0:function(n,t){var i=1-n;return i*i*t},b2p1:function(n,t){return 2*(1-n)*n*t},b2p2:function(n,t){return n*n*t},b2:function(n,t,i,r){return this.b2p0(n,t)+this.b2p1(n,i)+this.b2p2(n,r)},b3p0:function(n,t){var i=1-n;return i*i*i*t},b3p1:function(n,t){var i=1-n;return 3*i*i*n*t},b3p2:function(n,t){var i=1-n;return 3*i*n*n*t},b3p3:function(n,t){return n*n*n*t},b3:function(n,t,i,r,u){return this.b3p0(n,t)+this.b3p1(n,i)+this.b3p2(n,r)+this.b3p3(n,u)}};THREE.LineCurve=function(n,t){this.v1=n;this.v2=t};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(n){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(n).add(this.v1),t};THREE.LineCurve.prototype.getPointAt=function(n){return this.getPoint(n)};THREE.LineCurve.prototype.getTangent=function(){var n=this.v2.clone().sub(this.v1);return n.normalize()};THREE.QuadraticBezierCurve=function(n,t,i){this.v0=n;this.v1=t;this.v2=i};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(n){var t,i;return t=THREE.Shape.Utils.b2(n,this.v0.x,this.v1.x,this.v2.x),i=THREE.Shape.Utils.b2(n,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,i)};THREE.QuadraticBezierCurve.prototype.getTangent=function(n){var i,r,t;return i=THREE.Curve.Utils.tangentQuadraticBezier(n,this.v0.x,this.v1.x,this.v2.x),r=THREE.Curve.Utils.tangentQuadraticBezier(n,this.v0.y,this.v1.y,this.v2.y),t=new THREE.Vector2(i,r),t.normalize(),t};THREE.CubicBezierCurve=function(n,t,i,r){this.v0=n;this.v1=t;this.v2=i;this.v3=r};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(n){var t,i;return t=THREE.Shape.Utils.b3(n,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=THREE.Shape.Utils.b3(n,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,i)};THREE.CubicBezierCurve.prototype.getTangent=function(n){var i,r,t;return i=THREE.Curve.Utils.tangentCubicBezier(n,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(n,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=new THREE.Vector2(i,r),t.normalize(),t};THREE.SplineCurve=function(n){this.points=n==undefined?[]:n};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(n){var u=new THREE.Vector2,i=[],t=this.points,f,r,e;return f=(t.length-1)*n,r=Math.floor(f),e=f-r,i[0]=r==0?r:r-1,i[1]=r,i[2]=r>t.length-2?t.length-1:r+1,i[3]=r>t.length-3?t.length-1:r+2,u.x=THREE.Curve.Utils.interpolate(t[i[0]].x,t[i[1]].x,t[i[2]].x,t[i[3]].x,e),u.y=THREE.Curve.Utils.interpolate(t[i[0]].y,t[i[1]].y,t[i[2]].y,t[i[3]].y,e),u};THREE.EllipseCurve=function(n,t,i,r,u,f,e){this.aX=n;this.aY=t;this.xRadius=i;this.yRadius=r;this.aStartAngle=u;this.aEndAngle=f;this.aClockwise=e};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(n){var i,t=this.aEndAngle-this.aStartAngle,r,u;return t<0&&(t+=Math.PI*2),t>Math.PI*2&&(t-=Math.PI*2),i=this.aClockwise===!0?this.aEndAngle+(1-n)*(Math.PI*2-t):this.aStartAngle+n*t,r=this.aX+this.xRadius*Math.cos(i),u=this.aY+this.yRadius*Math.sin(i),new THREE.Vector2(r,u)};THREE.ArcCurve=function(n,t,i,r,u,f){THREE.EllipseCurve.call(this,n,t,i,i,r,u,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.LineCurve3=THREE.Curve.create(function(n,t){this.v1=n;this.v2=t},function(n){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(n),t.add(this.v1),t});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(n,t,i){this.v0=n;this.v1=t;this.v2=i},function(n){var t,i,r;return t=THREE.Shape.Utils.b2(n,this.v0.x,this.v1.x,this.v2.x),i=THREE.Shape.Utils.b2(n,this.v0.y,this.v1.y,this.v2.y),r=THREE.Shape.Utils.b2(n,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,i,r)});THREE.CubicBezierCurve3=THREE.Curve.create(function(n,t,i,r){this.v0=n;this.v1=t;this.v2=i;this.v3=r},function(n){var t,i,r;return t=THREE.Shape.Utils.b3(n,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=THREE.Shape.Utils.b3(n,this.v0.y,this.v1.y,this.v2.y,this.v3.y),r=THREE.Shape.Utils.b3(n,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,i,r)});THREE.SplineCurve3=THREE.Curve.create(function(n){this.points=n==undefined?[]:n},function(n){var u=new THREE.Vector3,r=[],i=this.points,e,t,f;e=(i.length-1)*n;t=Math.floor(e);f=e-t;r[0]=t==0?t:t-1;r[1]=t;r[2]=t>i.length-2?i.length-1:t+1;r[3]=t>i.length-3?i.length-1:t+2;var o=i[r[0]],s=i[r[1]],h=i[r[2]],c=i[r[3]];return u.x=THREE.Curve.Utils.interpolate(o.x,s.x,h.x,c.x,f),u.y=THREE.Curve.Utils.interpolate(o.y,s.y,h.y,c.y,f),u.z=THREE.Curve.Utils.interpolate(o.z,s.z,h.z,c.z,f),u});THREE.ClosedSplineCurve3=THREE.Curve.create(function(n){this.points=n==undefined?[]:n},function(n){var u=new THREE.Vector3,i=[],t=this.points,e,r,f;return e=(t.length-0)*n,r=Math.floor(e),f=e-r,r+=r>0?0:(Math.floor(Math.abs(r)/t.length)+1)*t.length,i[0]=(r-1)%t.length,i[1]=r%t.length,i[2]=(r+1)%t.length,i[3]=(r+2)%t.length,u.x=THREE.Curve.Utils.interpolate(t[i[0]].x,t[i[1]].x,t[i[2]].x,t[i[3]].x,f),u.y=THREE.Curve.Utils.interpolate(t[i[0]].y,t[i[1]].y,t[i[2]].y,t[i[3]].y,f),u.z=THREE.Curve.Utils.interpolate(t[i[0]].z,t[i[1]].z,t[i[2]].z,t[i[3]].z,f),u});THREE.AnimationHandler=function(){var t=[],i={},n={},r,u;return n.update=function(n){for(var i=0;i<t.length;i++)t[i].update(n)},n.addToUpdate=function(n){t.indexOf(n)===-1&&t.push(n)},n.removeFromUpdate=function(n){var i=t.indexOf(n);i!==-1&&t.splice(i,1)},n.add=function(n){i[n.name]!==undefined&&console.log("THREE.AnimationHandler.add: Warning! "+n.name+" already exists in library. Overwriting.");i[n.name]=n;u(n)},n.remove=function(n){i[n]===undefined&&console.log("THREE.AnimationHandler.add: Warning! "+n+" doesn't exists in library. Doing nothing.");i[n]=undefined},n.get=function(n){if(typeof n=="string")return i[n]?i[n]:null},n.parse=function(n){var i=[],t;if(n instanceof THREE.SkinnedMesh)for(t=0;t<n.skeleton.bones.length;t++)i.push(n.skeleton.bones[t]);else r(n,i);return i},r=function(n,t){t.push(n);for(var i=0;i<n.children.length;i++)r(n.children[i],t)},u=function(n){var i,o,f,e,u,r,t;if(n.initialized!==!0){for(i=0;i<n.hierarchy.length;i++){for(t=0;t<n.hierarchy[i].keys.length;t++)n.hierarchy[i].keys[t].time<0&&(n.hierarchy[i].keys[t].time=0),n.hierarchy[i].keys[t].rot===undefined||n.hierarchy[i].keys[t].rot instanceof THREE.Quaternion||(o=n.hierarchy[i].keys[t].rot,n.hierarchy[i].keys[t].rot=(new THREE.Quaternion).fromArray(o));if(n.hierarchy[i].keys.length&&n.hierarchy[i].keys[0].morphTargets!==undefined){for(f={},t=0;t<n.hierarchy[i].keys.length;t++)for(r=0;r<n.hierarchy[i].keys[t].morphTargets.length;r++)u=n.hierarchy[i].keys[t].morphTargets[r],f[u]=-1;for(n.hierarchy[i].usedMorphTargets=f,t=0;t<n.hierarchy[i].keys.length;t++){e={};for(u in f){for(r=0;r<n.hierarchy[i].keys[t].morphTargets.length;r++)if(n.hierarchy[i].keys[t].morphTargets[r]===u){e[u]=n.hierarchy[i].keys[t].morphTargetsInfluences[r];break}r===n.hierarchy[i].keys[t].morphTargets.length&&(e[u]=0)}n.hierarchy[i].keys[t].morphTargetsInfluences=e}}for(t=1;t<n.hierarchy[i].keys.length;t++)n.hierarchy[i].keys[t].time===n.hierarchy[i].keys[t-1].time&&(n.hierarchy[i].keys.splice(t,1),t--);for(t=0;t<n.hierarchy[i].keys.length;t++)n.hierarchy[i].keys[t].index=t}n.initialized=!0}},n.LINEAR=0,n.CATMULLROM=1,n.CATMULLROM_FORWARD=2,n}();THREE.Animation=function(n,t){this.root=n;this.data=THREE.AnimationHandler.get(t);this.hierarchy=THREE.AnimationHandler.parse(n);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.isPaused=!0;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};THREE.Animation.prototype.keyTypes=["pos","rot","scl"];THREE.Animation.prototype.play=function(n,t){this.currentTime=n!==undefined?n:0;this.weight=t!==undefined?t:1;this.isPlaying=!0;this.isPaused=!1;this.reset();THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){this.isPaused===!0?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPlaying=!1;this.isPaused=!1;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.reset=function(){for(var n,f,r,t=0,o=this.hierarchy.length;t<o;t++)for(n=this.hierarchy[t],n.matrixAutoUpdate=!0,n.animationCache===undefined&&(n.animationCache={}),n.animationCache[this.data.name]===undefined&&(n.animationCache[this.data.name]={},n.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},n.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},n.animationCache[this.data.name].originalMatrix=n instanceof THREE.Bone?n.skinMatrix:n.matrix),f=n.animationCache[this.data.name],r=0;r<3;r++){for(var u=this.keyTypes[r],e=this.data.hierarchy[t].keys[0],i=this.getNextKeyWith(u,t,1);i.time<this.currentTime&&i.index>e.index;)e=i,i=this.getNextKeyWith(u,t,i.index+1);f.prevKey[u]=e;f.nextKey[u]=i}};THREE.Animation.prototype.update=function(){var t=[],i=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Quaternion,f=function(n,t){var r=[],o=[],v,i,f,e,s,h,c,l,a;return v=(n.length-1)*t,i=Math.floor(v),f=v-i,r[0]=i===0?i:i-1,r[1]=i,r[2]=i>n.length-2?i:i+1,r[3]=i>n.length-3?i:i+2,h=n[r[0]],c=n[r[1]],l=n[r[2]],a=n[r[3]],e=f*f,s=f*e,o[0]=u(h[0],c[0],l[0],a[0],f,e,s),o[1]=u(h[1],c[1],l[1],a[1],f,e,s),o[2]=u(h[2],c[2],l[2],a[2],f,e,s),o},u=function(n,t,i,r,u,f,e){var o=(i-n)*.5,s=(r-t)*.5;return(2*(t-i)+o+s)*e+(-3*(t-i)-2*o-s)*f+o*u+t};return function(u){var o,b,v,nt,e,w,k,d,g,tt,a;if(this.isPlaying!==!1&&(this.currentTime+=u*this.timeScale,this.weight!==0)){if(b=this.data.length,this.loop===!0&&this.currentTime>b)this.currentTime%=b,this.reset();else if(this.loop===!1&&this.currentTime>b){this.stop();return}for(v=0,nt=this.hierarchy.length;v<nt;v++)for(e=this.hierarchy[v],w=e.animationCache[this.data.name],k=0;k<3;k++){var c=this.keyTypes[k],y=w.prevKey[c],l=w.nextKey[c];if(l.time<=this.currentTime){for(y=this.data.hierarchy[v].keys[0],l=this.getNextKeyWith(c,v,1);l.time<this.currentTime&&l.index>y.index;)y=l,l=this.getNextKeyWith(c,v,l.index+1);w.prevKey[c]=y;w.nextKey[c]=l}e.matrixAutoUpdate=!0;e.matrixWorldNeedsUpdate=!0;var s=(this.currentTime-y.time)/(l.time-y.time),h=y[c],p=l[c];s<0&&(s=0);s>1&&(s=1);c==="pos"?(o=e.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(n.x=h[0]+(p[0]-h[0])*s,n.y=h[1]+(p[1]-h[1])*s,n.z=h[2]+(p[2]-h[2])*s,e instanceof THREE.Bone?(a=this.weight/(this.weight+e.accumulatedPosWeight),o.lerp(n,a),e.accumulatedPosWeight+=this.weight):o=n):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(t[0]=this.getPrevKeyWith("pos",v,y.index-1).pos,t[1]=h,t[2]=p,t[3]=this.getNextKeyWith("pos",v,l.index+1).pos,s=s*.33+.33,d=f(t,s),e instanceof THREE.Bone?(a=this.weight/(this.weight+e.accumulatedPosWeight),e.accumulatedPosWeight+=this.weight):a=1,o.x=o.x+(d[0]-o.x)*a,o.y=o.y+(d[1]-o.y)*a,o.z=o.z+(d[2]-o.z)*a,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(g=f(t,s*1.01),i.set(g[0],g[1],g[2]),i.sub(o),i.y=0,i.normalize(),tt=Math.atan2(i.x,i.z),e.rotation.set(0,tt,0)))):c==="rot"?(THREE.Quaternion.slerp(h,p,r,s),e instanceof THREE.Bone?e.accumulatedRotWeight===0?(e.quaternion.copy(r),e.accumulatedRotWeight=this.weight):(a=this.weight/(this.weight+e.accumulatedRotWeight),THREE.Quaternion.slerp(e.quaternion,r,e.quaternion,a),e.accumulatedRotWeight+=this.weight):e.quaternion.copy(r)):c==="scl"&&(o=e.scale,n.x=h[0]+(p[0]-h[0])*s,n.y=h[1]+(p[1]-h[1])*s,n.z=h[2]+(p[2]-h[2])*s,e instanceof THREE.Bone?(a=this.weight/(this.weight+e.accumulatedSclWeight),o.lerp(n,a),e.accumulatedSclWeight+=this.weight):o=n)}return!0}}}();THREE.Animation.prototype.getNextKeyWith=function(n,t,i){var r=this.data.hierarchy[t].keys;for(i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i<r.length-1?i:r.length-1:i%r.length;i<r.length;i++)if(r[i][n]!==undefined)return r[i];return this.data.hierarchy[t].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(n,t,i){var r=this.data.hierarchy[t].keys;for(i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i>0?i:0:i>=0?i:i+r.length;i>=0;i--)if(r[i][n]!==undefined)return r[i];return this.data.hierarchy[t].keys[r.length-1]};THREE.KeyFrameAnimation=function(n,t){var i,o,r,f,e;for(this.root=n,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(n),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,i=0,o=this.hierarchy.length;i<o;i++){var h=this.data.hierarchy[i].keys,u=this.data.hierarchy[i].sids,s=this.hierarchy[i];if(h.length&&u){for(r=0;r<u.length;r++)f=u[r],e=this.getNextKeyWith(f,i,0),e&&e.apply(f);s.matrixAutoUpdate=!1;this.data.hierarchy[i].node.updateMatrix();s.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.play=function(n){var r,f,u,t,i;if(this.currentTime=n!==undefined?n:0,this.isPlaying===!1){for(this.isPlaying=!0,f=this.hierarchy.length,r=0;r<f;r++)u=this.hierarchy[r],t=this.data.hierarchy[r],t.animationCache===undefined&&(t.animationCache={},t.animationCache.prevKey=null,t.animationCache.nextKey=null,t.animationCache.originalMatrix=u instanceof THREE.Bone?u.skinMatrix:u.matrix),i=this.data.hierarchy[r].keys,i.length&&(t.animationCache.prevKey=i[0],t.animationCache.nextKey=i[1],this.startTime=Math.min(i[0].time,this.startTime),this.endTime=Math.max(i[i.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){var t,n,r,i;for(this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this),t=0;t<this.data.hierarchy.length;t++)n=this.hierarchy[t],r=this.data.hierarchy[t],r.animationCache!==undefined&&(i=r.animationCache.originalMatrix,n instanceof THREE.Bone?(i.copy(n.skinMatrix),n.skinMatrix=i):(i.copy(n.matrix),n.matrix=i),delete r.animationCache)};THREE.KeyFrameAnimation.prototype.update=function(n){var u,r,e,i,t;if(this.isPlaying!==!1)for(this.currentTime+=n*this.timeScale,u=this.data.length,this.loop===!0&&this.currentTime>u&&(this.currentTime%=u),this.currentTime=Math.min(this.currentTime,u),r=0,e=this.hierarchy.length;r<e;r++){var h=this.hierarchy[r],o=this.data.hierarchy[r],s=o.keys,f=o.animationCache;if(s.length){if(i=f.prevKey,t=f.nextKey,t.time<=this.currentTime){while(t.time<this.currentTime&&t.index>i.index)i=t,t=s[i.index+1];f.prevKey=i;f.nextKey=t}t.time>=this.currentTime?i.interpolate(t,this.currentTime):i.interpolate(t,t.time);this.data.hierarchy[r].node.updateMatrix();h.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(n,t,i){var r=this.data.hierarchy[t].keys;for(i=i%r.length;i<r.length;i++)if(r[i].hasTarget(n))return r[i];return r[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(n,t,i){var r=this.data.hierarchy[t].keys;for(i=i>=0?i:i+r.length;i>=0;i--)if(r[i].hasTarget(n))return r[i];return r[r.length-1]};THREE.MorphAnimation=function(n){this.mesh=n;this.frames=n.morphTargetInfluences.length;this.currentTime=0;this.duration=1e3;this.loop=!0;this.isPlaying=!1};THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var t=0,n=0;return function(i){if(this.isPlaying!==!1){this.currentTime+=i;this.loop===!0&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);var u=this.duration/this.frames,r=Math.floor(this.currentTime/u);r!=n&&(this.mesh.morphTargetInfluences[t]=0,this.mesh.morphTargetInfluences[n]=1,this.mesh.morphTargetInfluences[r]=0,t=n,n=r);this.mesh.morphTargetInfluences[r]=this.currentTime%u/u;this.mesh.morphTargetInfluences[t]=1-this.mesh.morphTargetInfluences[r]}}}()};THREE.CubeCamera=function(n,t,i){var f,e,o,s,h;THREE.Object3D.call(this);var r=90,u=1,c=new THREE.PerspectiveCamera(r,u,n,t);c.up.set(0,-1,0);c.lookAt(new THREE.Vector3(1,0,0));this.add(c);f=new THREE.PerspectiveCamera(r,u,n,t);f.up.set(0,-1,0);f.lookAt(new THREE.Vector3(-1,0,0));this.add(f);e=new THREE.PerspectiveCamera(r,u,n,t);e.up.set(0,0,1);e.lookAt(new THREE.Vector3(0,1,0));this.add(e);o=new THREE.PerspectiveCamera(r,u,n,t);o.up.set(0,0,-1);o.lookAt(new THREE.Vector3(0,-1,0));this.add(o);s=new THREE.PerspectiveCamera(r,u,n,t);s.up.set(0,-1,0);s.lookAt(new THREE.Vector3(0,0,1));this.add(s);h=new THREE.PerspectiveCamera(r,u,n,t);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,-1));this.add(h);this.renderTarget=new THREE.WebGLRenderTargetCube(i,i,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(n,t){var i=this.renderTarget,r=i.generateMipmaps;i.generateMipmaps=!1;i.activeCubeFace=0;n.render(t,c,i);i.activeCubeFace=1;n.render(t,f,i);i.activeCubeFace=2;n.render(t,e,i);i.activeCubeFace=3;n.render(t,o,i);i.activeCubeFace=4;n.render(t,s,i);i.generateMipmaps=r;i.activeCubeFace=5;n.render(t,h,i)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(n,t,i,r,u,f,e){THREE.Camera.call(this);this.fov=i;this.left=-n/2;this.right=n/2;this.top=t/2;this.bottom=-t/2;this.cameraO=new THREE.OrthographicCamera(n/-2,n/2,t/2,t/-2,f,e);this.cameraP=new THREE.PerspectiveCamera(i,n/t,r,u);this.zoom=1;this.toPerspective();var o=n/t};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};THREE.CombinedCamera.prototype.toOrthographic=function(){var i=this.fov,r=this.cameraP.aspect,u=this.cameraP.near,f=this.cameraP.far,e=(u+f)/2,n=Math.tan(i/2)*e,o=2*n,s=o*r,t=s/2;n/=this.zoom;t/=this.zoom;this.cameraO.left=-t;this.cameraO.right=t;this.cameraO.top=n;this.cameraO.bottom=-n;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};THREE.CombinedCamera.prototype.setSize=function(n,t){this.cameraP.aspect=n/t;this.left=-n/2;this.right=n/2;this.top=t/2;this.bottom=-t/2};THREE.CombinedCamera.prototype.setFov=function(n){this.fov=n;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};THREE.CombinedCamera.prototype.setLens=function(n,t){t===undefined&&(t=24);var i=2*THREE.Math.radToDeg(Math.atan(t/(n*2)));return this.setFov(i),i};THREE.CombinedCamera.prototype.setZoom=function(n){this.zoom=n;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.BoxGeometry=function(n,t,i,r,u,f){function o(n,t,i,r,u,f,o,s){var w,h,c,v=e.widthSegments,y=e.heightSegments,it=u/2,rt=f/2,p=e.vertices.length,k;n==="x"&&t==="y"||n==="y"&&t==="x"?w="z":n==="x"&&t==="z"||n==="z"&&t==="x"?(w="y",y=e.depthSegments):(n==="z"&&t==="y"||n==="y"&&t==="z")&&(w="x",v=e.depthSegments);var b=v+1,ut=y+1,ft=u/v,et=f/y,l=new THREE.Vector3;for(l[w]=o>0?1:-1,c=0;c<ut;c++)for(h=0;h<b;h++)k=new THREE.Vector3,k[n]=(h*ft-it)*i,k[t]=(c*et-rt)*r,k[w]=o,e.vertices.push(k);for(c=0;c<y;c++)for(h=0;h<v;h++){var ot=h+b*c,d=h+b*(c+1),st=h+1+b*(c+1),g=h+1+b*c,ht=new THREE.Vector2(h/v,1-c/y),nt=new THREE.Vector2(h/v,1-(c+1)/y),ct=new THREE.Vector2((h+1)/v,1-(c+1)/y),tt=new THREE.Vector2((h+1)/v,1-c/y),a=new THREE.Face3(ot+p,d+p,g+p);a.normal.copy(l);a.vertexNormals.push(l.clone(),l.clone(),l.clone());a.materialIndex=s;e.faces.push(a);e.faceVertexUvs[0].push([ht,nt,tt]);a=new THREE.Face3(d+p,st+p,g+p);a.normal.copy(l);a.vertexNormals.push(l.clone(),l.clone(),l.clone());a.materialIndex=s;e.faces.push(a);e.faceVertexUvs[0].push([nt.clone(),ct,tt.clone()])}}THREE.Geometry.call(this);this.parameters={width:n,height:t,depth:i,widthSegments:r,heightSegments:u,depthSegments:f};this.widthSegments=r||1;this.heightSegments=u||1;this.depthSegments=f||1;var e=this,s=n/2,h=t/2,c=i/2;o("z","y",-1,-1,i,t,s,0);o("z","y",1,-1,i,t,-s,1);o("x","z",1,1,n,i,h,2);o("x","z",1,-1,n,i,-h,3);o("x","y",1,-1,n,t,c,4);o("x","y",-1,-1,n,t,-c,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(n,t,i,r){var f,s,o;THREE.Geometry.call(this);this.parameters={radius:n,segments:t,thetaStart:i,thetaLength:r};n=n||50;t=t!==undefined?Math.max(3,t):8;i=i!==undefined?i:0;r=r!==undefined?r:Math.PI*2;var u,e=[],c=new THREE.Vector3,h=new THREE.Vector2(.5,.5);for(this.vertices.push(c),e.push(h),u=0;u<=t;u++)f=new THREE.Vector3,s=i+u/t*r,f.x=n*Math.cos(s),f.y=n*Math.sin(s),this.vertices.push(f),e.push(new THREE.Vector2((f.x/n+1)/2,(f.y/n+1)/2));for(o=new THREE.Vector3(0,0,1),u=1;u<=t;u++)this.faces.push(new THREE.Face3(u,u+1,0,[o.clone(),o.clone(),o.clone()])),this.faceVertexUvs[0].push([e[u].clone(),e[u+1].clone(),h.clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,n)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(n,t,i,r,u,f){return console.warn("DEPRECATED: THREE.CubeGeometry is deprecated. Use THREE.BoxGeometry instead."),new THREE.BoxGeometry(n,t,i,r,u,f)};THREE.CylinderGeometry=function(n,t,i,r,u,f){var y,v,d,c,l;THREE.Geometry.call(this);this.parameters={radiusTop:n,radiusBottom:t,height:i,radialSegments:r,heightSegments:u,openEnded:f};n=n!==undefined?n:20;t=t!==undefined?t:20;i=i!==undefined?i:100;r=r||8;u=u||1;f=f!==undefined?f:!1;for(var b=i/2,e,s=[],h=[],o=0;o<=u;o++){var ft=[],et=[],k=o/u,ot=k*(t-n)+n;for(e=0;e<=r;e++)y=e/r,v=new THREE.Vector3,v.x=ot*Math.sin(y*Math.PI*2),v.y=-k*i+b,v.z=ot*Math.cos(y*Math.PI*2),this.vertices.push(v),ft.push(this.vertices.length-1),et.push(new THREE.Vector2(y,1-k));s.push(ft);h.push(et)}for(d=(t-n)/i,e=0;e<r;e++)for(n!==0?(c=this.vertices[s[0][e]].clone(),l=this.vertices[s[0][e+1]].clone()):(c=this.vertices[s[1][e]].clone(),l=this.vertices[s[1][e+1]].clone()),c.setY(Math.sqrt(c.x*c.x+c.z*c.z)*d).normalize(),l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*d).normalize(),o=0;o<u;o++){var g=s[o][e],p=s[o+1][e],nt=s[o+1][e+1],st=s[o][e+1],tt=c.clone(),w=c.clone(),it=l.clone(),ht=l.clone(),rt=h[o][e].clone(),a=h[o+1][e].clone(),ut=h[o+1][e+1].clone(),ct=h[o][e+1].clone();this.faces.push(new THREE.Face3(g,p,st,[tt,w,ht]));this.faceVertexUvs[0].push([rt,a,ct]);this.faces.push(new THREE.Face3(p,nt,st,[w.clone(),it,ht.clone()]));this.faceVertexUvs[0].push([a.clone(),ut,ct.clone()])}if(f===!1&&n>0)for(this.vertices.push(new THREE.Vector3(0,b,0)),e=0;e<r;e++){var g=s[0][e],p=s[0][e+1],nt=this.vertices.length-1,tt=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),it=new THREE.Vector3(0,1,0),rt=h[0][e].clone(),a=h[0][e+1].clone(),ut=new THREE.Vector2(a.x,0);this.faces.push(new THREE.Face3(g,p,nt,[tt,w,it]));this.faceVertexUvs[0].push([rt,a,ut])}if(f===!1&&t>0)for(this.vertices.push(new THREE.Vector3(0,-b,0)),e=0;e<r;e++){var g=s[o][e+1],p=s[o][e],nt=this.vertices.length-1,tt=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),it=new THREE.Vector3(0,-1,0),rt=h[o][e+1].clone(),a=h[o][e].clone(),ut=new THREE.Vector2(a.x,1);this.faces.push(new THREE.Face3(g,p,nt,[tt,w,it]));this.faceVertexUvs[0].push([rt,a,ut])}this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(n,t){if(typeof n=="undefined"){n=[];return}THREE.Geometry.call(this);n=n instanceof Array?n:[n];this.shapebb=n[n.length-1].getBoundingBox();this.addShapeList(n,t);this.computeFaceNormals()};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(n,t){for(var r,u=n.length,i=0;i<u;i++)r=n[i],this.addShape(r,t)};THREE.ExtrudeGeometry.prototype.addShape=function(n,t){function et(n,t,i){return t||console.log("die"),t.clone().multiplyScalar(i).add(n)}function ei(n,t,i){var h=1e-10,y=THREE.Math.sign,e,o,c=1,r=n.x-t.x,u=n.y-t.y,f=i.x-n.x,s=i.y-n.y,a=r*r+u*u,g=r*s-u*f,v,l;if(Math.abs(g)>h){var p=Math.sqrt(a),w=Math.sqrt(f*f+s*s),b=t.x-u/p,k=t.y+r/p,nt=i.x-s/w,tt=i.y+f/w,d=((nt-b)*s-(tt-k)*f)/(r*s-u*f);if(e=b+r*d-n.x,o=k+u*d-n.y,v=e*e+o*o,v<=2)return new THREE.Vector2(e,o);c=Math.sqrt(v/2)}else l=!1,r>h?f>h&&(l=!0):r<-h?f<-h&&(l=!0):y(u)==y(s)&&(l=!0),l?(e=-u,o=r,c=Math.sqrt(a)):(e=r,o=u,c=Math.sqrt(a/2));return new THREE.Vector2(e/c,o/c)}function ci(){if(st){var t=0,n=k*t;for(i=0;i<kt;i++)o=ft[i],gt(o[2]+n,o[1]+n,o[0]+n,!0);for(t=a+tt*2,n=k*t,i=0;i<kt;i++)o=ft[i],gt(o[0]+n,o[1]+n,o[2]+n,!1)}else{for(i=0;i<kt;i++)o=ft[i],gt(o[2],o[1],o[0],!0);for(i=0;i<kt;i++)o=ft[i],gt(o[0]+k*a,o[1]+k*a,o[2]+k*a,!1)}}function li(){var n=0;for(oi(s,n),n+=s.length,r=0,c=h.length;r<c;r++)f=h[r],oi(f,n),n+=f.length}function oi(n,t){var f,u,r,e;for(i=n.length;--i>=0;)for(f=i,u=i-1,u<0&&(u=n.length-1),r=0,e=a+tt*2,r=0;r<e;r++){var o=k*r,s=k*(r+1),h=t+f+o,c=t+u+o,l=t+u+s,v=t+f+s;ai(h,c,l,v,n,r,e,f,u)}}function d(n,t,i){v.vertices.push(new THREE.Vector3(n,t,i))}function gt(i,r,u,f){i+=it;r+=it;u+=it;v.faces.push(new THREE.Face3(i,r,u,null,null,hi));var e=f?ii.generateBottomUV(v,n,t,i,r,u):ii.generateTopUV(v,n,t,i,r,u);v.faceVertexUvs[0].push(e)}function ai(i,r,u,f,e,o,s,h,c){i+=it;r+=it;u+=it;f+=it;v.faces.push(new THREE.Face3(i,r,f,null,null,ri));v.faces.push(new THREE.Face3(r,u,f,null,null,ri));var l=ii.generateSideWallUV(v,n,e,t,i,r,u,f,o,s,h,c);v.faceVertexUvs[0].push([l[0],l[1],l[3]]);v.faceVertexUvs[0].push([l[1],l[2],l[3]])}var ni=t.amount!==undefined?t.amount:100,pt=t.bevelThickness!==undefined?t.bevelThickness:6,wt=t.bevelSize!==undefined?t.bevelSize:pt-2,tt=t.bevelSegments!==undefined?t.bevelSegments:3,st=t.bevelEnabled!==undefined?t.bevelEnabled:!0,si=t.curveSegments!==undefined?t.curveSegments:12,a=t.steps!==undefined?t.steps:1,ti=t.extrudePath,ht,bt=!1,hi=t.material,ri=t.extrudeMaterial,ii=t.UVGenerator!==undefined?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,vi=this.shapebb,ct,lt,at,w,ft,s,vt,dt,nt,yt,ut;ti&&(ht=ti.getSpacedPoints(a),bt=!0,st=!1,ct=t.frames!==undefined?t.frames:new THREE.TubeGeometry.FrenetFrames(ti,a,!1),lt=new THREE.Vector3,at=new THREE.Vector3,w=new THREE.Vector3);st||(tt=0,pt=0,wt=0);var f,r,c,v=this,it=this.vertices.length,ui=n.extractPoints(si),l=ui.shape,h=ui.holes,fi=!THREE.Shape.Utils.isClockWise(l);if(fi){for(l=l.reverse(),r=0,c=h.length;r<c;r++)f=h[r],THREE.Shape.Utils.isClockWise(f)&&(h[r]=f.reverse());fi=!1}for(ft=THREE.Shape.Utils.triangulateShape(l,h),s=l,r=0,c=h.length;r<c;r++)f=h[r],l=l.concat(f);var g,b,ot,rt,u,k=l.length,o,kt=ft.length,yi=s.length,pi=180/Math.PI;vt=[];for(var i=0,e=s.length,y=e-1,p=i+1;i<e;i++,y++,p++){y===e&&(y=0);p===e&&(p=0);var wi=s[i],bi=s[y],ki=s[p];vt[i]=ei(s[i],s[y],s[p])}for(dt=[],yt=vt.concat(),r=0,c=h.length;r<c;r++){for(f=h[r],nt=[],i=0,e=f.length,y=e-1,p=i+1;i<e;i++,y++,p++)y===e&&(y=0),p===e&&(p=0),nt[i]=ei(f[i],f[y],f[p]);dt.push(nt);yt=yt.concat(nt)}for(g=0;g<tt;g++){for(ot=g/tt,rt=pt*(1-ot),b=wt*Math.sin(ot*Math.PI/2),i=0,e=s.length;i<e;i++)u=et(s[i],vt[i],b),d(u.x,u.y,-rt);for(r=0,c=h.length;r<c;r++)for(f=h[r],nt=dt[r],i=0,e=f.length;i<e;i++)u=et(f[i],nt[i],b),d(u.x,u.y,-rt)}for(b=wt,i=0;i<k;i++)u=st?et(l[i],yt[i],b):l[i],bt?(at.copy(ct.normals[0]).multiplyScalar(u.x),lt.copy(ct.binormals[0]).multiplyScalar(u.y),w.copy(ht[0]).add(at).add(lt),d(w.x,w.y,w.z)):d(u.x,u.y,0);for(ut=1;ut<=a;ut++)for(i=0;i<k;i++)u=st?et(l[i],yt[i],b):l[i],bt?(at.copy(ct.normals[ut]).multiplyScalar(u.x),lt.copy(ct.binormals[ut]).multiplyScalar(u.y),w.copy(ht[ut]).add(at).add(lt),d(w.x,w.y,w.z)):d(u.x,u.y,ni/a*ut);for(g=tt-1;g>=0;g--){for(ot=g/tt,rt=pt*(1-ot),b=wt*Math.sin(ot*Math.PI/2),i=0,e=s.length;i<e;i++)u=et(s[i],vt[i],b),d(u.x,u.y,ni+rt);for(r=0,c=h.length;r<c;r++)for(f=h[r],nt=dt[r],i=0,e=f.length;i<e;i++)u=et(f[i],nt[i],b),bt?d(u.x,u.y+ht[a-1].y,ht[a-1].x+rt):d(u.x,u.y,ni+rt)}ci();li()};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(n,t,i,r,u,f){var e=n.vertices[r].x,o=n.vertices[r].y,s=n.vertices[u].x,h=n.vertices[u].y,c=n.vertices[f].x,l=n.vertices[f].y;return[new THREE.Vector2(e,o),new THREE.Vector2(s,h),new THREE.Vector2(c,l)]},generateBottomUV:function(n,t,i,r,u,f){return this.generateTopUV(n,t,i,r,u,f)},generateSideWallUV:function(n,t,i,r,u,f,e,o){var y=n.vertices[u].x,s=n.vertices[u].y,h=n.vertices[u].z,p=n.vertices[f].x,c=n.vertices[f].y,l=n.vertices[f].z,w=n.vertices[e].x,b=n.vertices[e].y,a=n.vertices[e].z,k=n.vertices[o].x,d=n.vertices[o].y,v=n.vertices[o].z;return Math.abs(s-c)<.01?[new THREE.Vector2(y,1-h),new THREE.Vector2(p,1-l),new THREE.Vector2(w,1-a),new THREE.Vector2(k,1-v)]:[new THREE.Vector2(s,1-h),new THREE.Vector2(c,1-l),new THREE.Vector2(b,1-a),new THREE.Vector2(d,1-v)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(n,t){THREE.Geometry.call(this);n instanceof Array==!1&&(n=[n]);this.shapebb=n[n.length-1].getBoundingBox();this.addShapeList(n,t);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(n,t){for(var i=0,r=n.length;i<r;i++)this.addShape(n[i],t);return this};THREE.ShapeGeometry.prototype.addShape=function(n,t){var h,v;t===undefined&&(t={});var b=t.curveSegments!==undefined?t.curveSegments:12,k=t.material,d=t.UVGenerator===undefined?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,tt=this.shapebb,i,e,f,s=this.vertices.length,l=n.extractPoints(b),r=l.shape,u=l.holes,a=!THREE.Shape.Utils.isClockWise(r);if(a){for(r=r.reverse(),i=0,e=u.length;i<e;i++)f=u[i],THREE.Shape.Utils.isClockWise(f)&&(u[i]=f.reverse());a=!1}for(h=THREE.Shape.Utils.triangulateShape(r,u),v=r,i=0,e=u.length;i<e;i++)f=u[i],r=r.concat(f);var c,g=r.length,o,nt=h.length,it=v.length;for(i=0;i<g;i++)c=r[i],this.vertices.push(new THREE.Vector3(c.x,c.y,0));for(i=0;i<nt;i++){o=h[i];var y=o[0]+s,p=o[1]+s,w=o[2]+s;this.faces.push(new THREE.Face3(y,p,w,null,null,k));this.faceVertexUvs[0].push(d.generateBottomUV(this,n,t,y,p,w))}};THREE.LatheGeometry=function(n,t,i,r){var p,s,e,o,l,u,h,f,c;for(THREE.Geometry.call(this),t=t||12,i=i||0,r=r||2*Math.PI,p=1/(n.length-1),s=1/t,u=0,h=t;u<=h;u++){var d=i+u*s*r,w=Math.cos(d),g=Math.sin(d);for(f=0,c=n.length;f<c;f++)e=n[f],o=new THREE.Vector3,o.x=w*e.x-g*e.y,o.y=g*e.x+w*e.y,o.z=e.z,this.vertices.push(o)}for(l=n.length,u=0,h=t;u<h;u++)for(f=0,c=n.length-1;f<c;f++){var a=f+l*u,it=a,nt=a+l,w=a+1+l,tt=a+1,v=u*s,y=f*p,b=v+s,k=y+p;this.faces.push(new THREE.Face3(it,nt,tt));this.faceVertexUvs[0].push([new THREE.Vector2(v,y),new THREE.Vector2(b,y),new THREE.Vector2(v,k)]);this.faces.push(new THREE.Face3(nt,w,tt));this.faceVertexUvs[0].push([new THREE.Vector2(b,y),new THREE.Vector2(b,k),new THREE.Vector2(v,k)])}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(n,t,i,r){var l,a;THREE.Geometry.call(this);this.parameters={width:n,height:t,widthSegments:i,heightSegments:r};for(var u,b=n/2,k=t/2,o=i||1,s=r||1,c=o+1,d=s+1,g=n/o,nt=t/s,e=new THREE.Vector3(0,0,1),f=0;f<d;f++)for(l=f*nt-k,u=0;u<c;u++)a=u*g-b,this.vertices.push(new THREE.Vector3(a,-l,0));for(f=0;f<s;f++)for(u=0;u<o;u++){var tt=u+c*f,v=u+c*(f+1),it=u+1+c*(f+1),y=u+1+c*f,rt=new THREE.Vector2(u/o,1-f/s),p=new THREE.Vector2(u/o,1-(f+1)/s),ut=new THREE.Vector2((u+1)/o,1-(f+1)/s),w=new THREE.Vector2((u+1)/o,1-f/s),h=new THREE.Face3(tt,v,y);h.normal.copy(e);h.vertexNormals.push(e.clone(),e.clone(),e.clone());this.faces.push(h);this.faceVertexUvs[0].push([rt,p,w]);h=new THREE.Face3(v,it,y);h.normal.copy(e);h.vertexNormals.push(e.clone(),e.clone(),e.clone());this.faces.push(h);this.faceVertexUvs[0].push([p.clone(),ut,w.clone()])}};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(n,t,i,r,u,f){var l,o,c,w;THREE.Geometry.call(this);n=n||0;t=t||50;u=u!==undefined?u:0;f=f!==undefined?f:Math.PI*2;i=i!==undefined?Math.max(3,i):8;r=r!==undefined?Math.max(3,r):8;for(var s,h=[],p=n,b=(t-n)/r,e=0;e<=r;e++){for(s=0;s<=i;s++)l=new THREE.Vector3,o=u+s/i*f,l.x=p*Math.cos(o),l.y=p*Math.sin(o),this.vertices.push(l),h.push(new THREE.Vector2((l.x/t+1)/2,(l.y/t+1)/2));p+=b}for(c=new THREE.Vector3(0,0,1),e=0;e<r;e++)for(w=e*i,s=0;s<=i;s++){var o=s+w,a=o+e,v=o+i+e,y=o+i+1+e;this.faces.push(new THREE.Face3(a,v,y,[c.clone(),c.clone(),c.clone()]));this.faceVertexUvs[0].push([h[a].clone(),h[v].clone(),h[y].clone()]);a=o+e;v=o+i+1+e;y=o+1+e;this.faces.push(new THREE.Face3(a,v,y,[c.clone(),c.clone(),c.clone()]));this.faceVertexUvs[0].push([h[a].clone(),h[v].clone(),h[y].clone()])}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,p)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(n,t,i,r,u,f,e){var o,s,h,c,nt,tt;for(THREE.Geometry.call(this),this.parameters={radius:n,widthSegments:t,heightSegments:i,phiStart:r,phiLength:u,thetaStart:f,thetaLength:e},n=n||50,t=Math.max(3,Math.floor(t)||8),i=Math.max(2,Math.floor(i)||6),r=r!==undefined?r:0,u=u!==undefined?u:Math.PI*2,f=f!==undefined?f:0,e=e!==undefined?e:Math.PI,h=[],c=[],s=0;s<=i;s++){for(nt=[],tt=[],o=0;o<=t;o++){var it=o/t,p=s/i,w=new THREE.Vector3;w.x=-n*Math.cos(r+it*u)*Math.sin(f+p*e);w.y=n*Math.cos(f+p*e);w.z=n*Math.sin(r+it*u)*Math.sin(f+p*e);this.vertices.push(w);nt.push(this.vertices.length-1);tt.push(new THREE.Vector2(it,1-p))}h.push(nt);c.push(tt)}for(s=0;s<i;s++)for(o=0;o<t;o++){var l=h[s][o+1],b=h[s][o],a=h[s+1][o],k=h[s+1][o+1],rt=this.vertices[l].clone().normalize(),ut=this.vertices[b].clone().normalize(),ft=this.vertices[a].clone().normalize(),et=this.vertices[k].clone().normalize(),v=c[s][o+1].clone(),d=c[s][o].clone(),y=c[s+1][o].clone(),g=c[s+1][o+1].clone();Math.abs(this.vertices[l].y)===n?(v.x=(v.x+d.x)/2,this.faces.push(new THREE.Face3(l,a,k,[rt,ft,et])),this.faceVertexUvs[0].push([v,y,g])):Math.abs(this.vertices[a].y)===n?(y.x=(y.x+g.x)/2,this.faces.push(new THREE.Face3(l,b,a,[rt,ut,ft])),this.faceVertexUvs[0].push([v,d,y])):(this.faces.push(new THREE.Face3(l,b,k,[rt,ut,et])),this.faceVertexUvs[0].push([v,d,g]),this.faces.push(new THREE.Face3(b,a,k,[ut.clone(),ft,et.clone()])),this.faceVertexUvs[0].push([d.clone(),y,g.clone()]))}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,n)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(n,t){t=t||{};var i=THREE.FontUtils.generateShapes(n,t);t.amount=t.height!==undefined?t.height:50;t.bevelThickness===undefined&&(t.bevelThickness=10);t.bevelSize===undefined&&(t.bevelSize=8);t.bevelEnabled===undefined&&(t.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,i,t)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(n,t,i,r,u){var a,v,h,f,e;THREE.Geometry.call(this);this.parameters={radius:n,tube:t,radialSegments:i,tubularSegments:r,arc:u};n=n||100;t=t||40;i=i||8;r=r||6;u=u||Math.PI*2;var y=new THREE.Vector3,o=[],s=[];for(f=0;f<=i;f++)for(e=0;e<=r;e++)a=e/r*u,v=f/i*Math.PI*2,y.x=n*Math.cos(a),y.y=n*Math.sin(a),h=new THREE.Vector3,h.x=(n+t*Math.cos(v))*Math.cos(a),h.y=(n+t*Math.cos(v))*Math.sin(a),h.z=t*Math.sin(v),this.vertices.push(h),o.push(new THREE.Vector2(e/r,f/i)),s.push(h.clone().sub(y).normalize());for(f=1;f<=i;f++)for(e=1;e<=r;e++){var p=(r+1)*f+e-1,c=(r+1)*(f-1)+e-1,w=(r+1)*(f-1)+e,l=(r+1)*f+e,b=new THREE.Face3(p,c,l,[s[p].clone(),s[c].clone(),s[l].clone()]);this.faces.push(b);this.faceVertexUvs[0].push([o[p].clone(),o[c].clone(),o[l].clone()]);b=new THREE.Face3(c,w,l,[s[c].clone(),s[w].clone(),s[l].clone()]);this.faces.push(b);this.faceVertexUvs[0].push([o[c].clone(),o[w].clone(),o[l].clone()])}this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(n,t,i,r,u,f,e){function ft(n,t,i,r,u){var o=Math.cos(n),s=Math.sin(n),f=t/i*n,e=Math.cos(f),h=r*(2+e)*.5*o,c=r*(2+e)*s*.5,l=u*r*Math.sin(f)*.5;return new THREE.Vector3(h,c,l)}var o,s;THREE.Geometry.call(this);this.parameters={radius:n,tube:t,radialSegments:i,tubularSegments:r,p:u,q:f,heightScale:e};n=n||100;t=t||40;i=i||64;r=r||8;u=u||2;f=f||3;e=e||1;var c=new Array(i),y=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3;for(o=0;o<i;++o){c[o]=new Array(r);var b=o/i*2*u*Math.PI,a=ft(b,f,u,n,e),k=ft(b+.01,f,u,n,e);for(y.subVectors(k,a),h.addVectors(k,a),l.crossVectors(y,h),h.crossVectors(l,y),l.normalize(),h.normalize(),s=0;s<r;++s){var d=s/r*2*Math.PI,p=-t*Math.cos(d),w=t*Math.sin(d),v=new THREE.Vector3;v.x=a.x+p*h.x+w*l.x;v.y=a.y+p*h.y+w*l.y;v.z=a.z+p*h.z+w*l.z;c[o][s]=this.vertices.push(v)-1}}for(o=0;o<i;++o)for(s=0;s<r;++s){var g=(o+1)%i,nt=(s+1)%r,et=c[o][s],tt=c[g][s],ot=c[g][nt],it=c[o][nt],st=new THREE.Vector2(o/i,s/r),rt=new THREE.Vector2((o+1)/i,s/r),ht=new THREE.Vector2((o+1)/i,(s+1)/r),ut=new THREE.Vector2(o/i,(s+1)/r);this.faces.push(new THREE.Face3(et,tt,it));this.faceVertexUvs[0].push([st,rt,ut]);this.faces.push(new THREE.Face3(tt,ot,it));this.faceVertexUvs[0].push([rt.clone(),ht,ut.clone()])}this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(n,t,i,r,u){function at(n,t,i){return ct.vertices.push(new THREE.Vector3(n,t,i))-1}THREE.Geometry.call(this);this.parameters={path:n,segments:t,radius:i,radialSegments:r,closed:u};t=t||64;i=i||1;r=r||8;u=u||!1;var s=[],ct=this,lt,h,c,nt=t+1,tt,v,l,a,it,o=new THREE.Vector3,f,e,y,p,rt,w,ut,b,ft,k,et,d,g=new THREE.TubeGeometry.FrenetFrames(n,t,u),ot=g.tangents,st=g.normals,ht=g.binormals;for(this.tangents=ot,this.normals=st,this.binormals=ht,f=0;f<nt;f++)for(s[f]=[],tt=f/(nt-1),it=n.getPointAt(tt),lt=ot[f],h=st[f],c=ht[f],e=0;e<r;e++)v=e/r*2*Math.PI,l=-i*Math.cos(v),a=i*Math.sin(v),o.copy(it),o.x+=l*h.x+a*c.x,o.y+=l*h.y+a*c.y,o.z+=l*h.z+a*c.z,s[f][e]=at(o.x,o.y,o.z);for(f=0;f<t;f++)for(e=0;e<r;e++)y=u?(f+1)%t:f+1,p=(e+1)%r,rt=s[f][e],w=s[y][e],ut=s[y][p],b=s[f][p],ft=new THREE.Vector2(f/t,e/r),k=new THREE.Vector2((f+1)/t,e/r),et=new THREE.Vector2((f+1)/t,(e+1)/r),d=new THREE.Vector2(f/t,(e+1)/r),this.faces.push(new THREE.Face3(rt,w,b)),this.faceVertexUvs[0].push([ft,k,d]),this.faces.push(new THREE.Face3(w,ut,b)),this.faceVertexUvs[0].push([k.clone(),et,d.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(n,t,i){function k(){f[0]=new THREE.Vector3;e[0]=new THREE.Vector3;c=Number.MAX_VALUE;a=Math.abs(u[0].x);v=Math.abs(u[0].y);w=Math.abs(u[0].z);a<=c&&(c=a,l.set(1,0,0));v<=c&&(c=v,l.set(0,1,0));w<=c&&l.set(0,0,1);o.crossVectors(u[0],l).normalize();f[0].crossVectors(u[0],o);e[0].crossVectors(u[0],f[0])}var d=new THREE.Vector3,l=new THREE.Vector3,g=new THREE.Vector3,u=[],f=[],e=[],o=new THREE.Vector3,y=new THREE.Matrix4,s=t+1,h,p=.0001,c,a,v,w,r,b;for(this.tangents=u,this.normals=f,this.binormals=e,r=0;r<s;r++)b=r/(s-1),u[r]=n.getTangentAt(b),u[r].normalize();for(k(),r=1;r<s;r++)f[r]=f[r-1].clone(),e[r]=e[r-1].clone(),o.crossVectors(u[r-1],u[r]),o.length()>p&&(o.normalize(),h=Math.acos(THREE.Math.clamp(u[r-1].dot(u[r]),-1,1)),f[r].applyMatrix4(y.makeRotationAxis(o,h))),e[r].crossVectors(u[r],f[r]);if(i)for(h=Math.acos(THREE.Math.clamp(f[0].dot(f[s-1]),-1,1)),h/=s-1,u[0].dot(o.crossVectors(f[0],f[s-1]))>0&&(h=-h),r=1;r<s;r++)f[r].applyMatrix4(y.makeRotationAxis(u[r],h*r)),e[r].crossVectors(u[r],f[r])};THREE.PolyhedronGeometry=function(n,t,i,r){function o(n){var t=n.normalize().clone(),i,r;return t.index=e.vertices.push(t)-1,i=nt(n)/2/Math.PI+.5,r=ut(n)/Math.PI+.5,t.uv=new THREE.Vector2(i,1-r),t}function g(n,t,i){var u=new THREE.Face3(n.index,t.index,i.index,[n.clone(),t.clone(),i.clone()]),r;e.faces.push(u);l.copy(n).add(t).add(i).divideScalar(3);r=nt(l);e.faceVertexUvs[0].push([p(n.uv,n,r),p(t.uv,t,r),p(i.uv,i,r)])}function rt(n,t){for(var r,s,f=Math.pow(2,t),p=Math.pow(4,t),a=o(e.vertices[n.a]),v=o(e.vertices[n.b]),h=o(e.vertices[n.c]),u=[],i=0;i<=f;i++){u[i]=[];var c=o(a.clone().lerp(h,i/f)),y=o(v.clone().lerp(h,i/f)),l=f-i;for(r=0;r<=l;r++)u[i][r]=r==0&&i==f?c:o(c.clone().lerp(y,r/l))}for(i=0;i<f;i++)for(r=0;r<2*(f-i)-1;r++)s=Math.floor(r/2),r%2==0?g(u[i][s+1],u[i+1][s],u[i][s]):g(u[i][s+1],u[i+1][s+1],u[i+1][s])}function nt(n){return Math.atan2(n.z,-n.x)}function ut(n){return Math.atan2(-n.y,Math.sqrt(n.x*n.x+n.z*n.z))}function p(n,t,i){return i<0&&n.x===1&&(n=new THREE.Vector2(n.x-1,n.y)),t.x===0&&t.z===0&&(n=new THREE.Vector2(i/2/Math.PI+.5,n.y)),n.clone()}var e,l,u,f;for(THREE.Geometry.call(this),i=i||1,r=r||0,e=this,u=0,f=n.length;u<f;u+=3)o(new THREE.Vector3(n[u],n[u+1],n[u+2]));for(var h=this.vertices,c=[],u=0,w=0,f=t.length;u<f;u+=3,w++){var b=h[t[u]],k=h[t[u+1]],d=h[t[u+2]];c[w]=new THREE.Face3(b.index,k.index,d.index,[b.clone(),k.clone(),d.clone()])}for(l=new THREE.Vector3,u=0,f=c.length;u<f;u++)rt(c[u],r);for(u=0,f=this.faceVertexUvs[0].length;u<f;u++){var s=this.faceVertexUvs[0][u],a=s[0].x,v=s[1].x,y=s[2].x,tt=Math.max(a,Math.max(v,y)),it=Math.min(a,Math.min(v,y));tt>.9&&it<.1&&(a<.2&&(s[0].x+=1),v<.2&&(s[1].x+=1),y<.2&&(s[2].x+=1))}for(u=0,f=this.vertices.length;u<f;u++)this.vertices[u].multiplyScalar(i);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,i)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(n,t){this.parameters={radius:n,detail:t};var i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1];THREE.PolyhedronGeometry.call(this,r,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],n,t)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(n,t){this.parameters={radius:n,detail:t};THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],n,t)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(n,t){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],n,t)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(n,t,i){var p,e,w,o,b,s,k,h;THREE.Geometry.call(this);for(var d=this.vertices,c=this.faces,l=this.faceVertexUvs[0],u,a,v,y,g=i+1,f=t+1,r=0;r<=i;r++)for(y=r/i,u=0;u<=t;u++)v=u/t,a=n(v,y),d.push(a);for(r=0;r<i;r++)for(u=0;u<t;u++)p=r*f+u,e=r*f+u+1,w=(r+1)*f+u+1,o=(r+1)*f+u,b=new THREE.Vector2(u/t,r/i),s=new THREE.Vector2((u+1)/t,r/i),k=new THREE.Vector2((u+1)/t,(r+1)/i),h=new THREE.Vector2(u/t,(r+1)/i),c.push(new THREE.Face3(p,e,o)),l.push([b,s,h]),c.push(new THREE.Face3(e,w,o)),l.push([s.clone(),k,h.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(n){var t,i;n=n||1;t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(n,0,0),new THREE.Vector3,new THREE.Vector3(0,n,0),new THREE.Vector3,new THREE.Vector3(0,0,n));t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,t,i,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(n,t,i,r,u,f){var e,o;THREE.Object3D.call(this);r===undefined&&(r=16776960);i===undefined&&(i=1);u===undefined&&(u=.2*i);f===undefined&&(f=.2*u);this.position=t;e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:r}));this.line.matrixAutoUpdate=!1;this.add(this.line);o=new THREE.CylinderGeometry(0,.5,1,5,1);o.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));this.cone=new THREE.Mesh(o,new THREE.MeshBasicMaterial({color:r}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(n);this.setLength(i,u,f)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var n=new THREE.Vector3,t;return function(i){i.y>.99999?this.quaternion.set(0,0,0,1):i.y<-.99999?this.quaternion.set(1,0,0,0):(n.set(i.z,0,-i.x).normalize(),t=Math.acos(i.y),this.quaternion.setFromAxisAngle(n,t))}}();THREE.ArrowHelper.prototype.setLength=function(n,t,i){t===undefined&&(t=.2*n);i===undefined&&(i=.2*t);this.line.scale.set(1,n,1);this.line.updateMatrix();this.cone.scale.set(i,t,i);this.cone.position.y=n;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(n){this.line.material.color.set(n);this.cone.material.color.set(n)};THREE.BoxHelper=function(n){var t=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)],i;this.vertices=t;i=new THREE.Geometry;i.vertices.push(t[0],t[1],t[1],t[2],t[2],t[3],t[3],t[0],t[4],t[5],t[5],t[6],t[6],t[7],t[7],t[4],t[0],t[4],t[1],t[5],t[2],t[6],t[3],t[7]);THREE.Line.call(this,i,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);n!==undefined&&this.update(n)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(n){var u=n.geometry;u.boundingBox===null&&u.computeBoundingBox();var t=u.boundingBox.min,i=u.boundingBox.max,r=this.vertices;r[0].set(i.x,i.y,i.z);r[1].set(t.x,i.y,i.z);r[2].set(t.x,t.y,i.z);r[3].set(i.x,t.y,i.z);r[4].set(i.x,i.y,t.z);r[5].set(t.x,i.y,t.z);r[6].set(t.x,t.y,t.z);r[7].set(i.x,t.y,t.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=!0;this.matrixAutoUpdate=!1;this.matrixWorld=n.matrixWorld};THREE.BoundingBoxHelper=function(n,t){var i=t!==undefined?t:8947848;this.object=n;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:i,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(n){function t(n,t,i){s(n,i);s(t,i)}function s(n,t){u.vertices.push(new THREE.Vector3);u.colors.push(new THREE.Color(t));f[n]===undefined&&(f[n]=[]);f[n].push(u.vertices.length-1)}var u=new THREE.Geometry,h=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={},i=16755200,e=16711680,o=43775,r=3355443;t("n1","n2",i);t("n2","n4",i);t("n4","n3",i);t("n3","n1",i);t("f1","f2",i);t("f2","f4",i);t("f4","f3",i);t("f3","f1",i);t("n1","f1",i);t("n2","f2",i);t("n3","f3",i);t("n4","f4",i);t("p","n1",e);t("p","n2",e);t("p","n3",e);t("p","n4",e);t("u1","u2",o);t("u2","u3",o);t("u3","u1",o);t("c","t",16777215);t("p","c",r);t("cn1","cn2",r);t("cn3","cn4",r);t("cf1","cf2",r);t("cf3","cf4",r);THREE.Line.call(this,u,h,THREE.LinePieces);this.camera=n;this.matrixWorld=n.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=f;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var n=new THREE.Vector3,t=new THREE.Camera,i=new THREE.Projector;return function(){function r(r,u,f,o){var s,h,c;if(n.set(u,f,o),i.unprojectVector(n,t),s=e.pointMap[r],s!==undefined)for(h=0,c=s.length;h<c;h++)e.geometry.vertices[s[h]].copy(n)}var e=this,f=1,u=1;t.projectionMatrix.copy(this.camera.projectionMatrix);r("c",0,0,-1);r("t",0,0,1);r("n1",-f,-u,-1);r("n2",f,-u,-1);r("n3",-f,u,-1);r("n4",f,u,-1);r("f1",-f,-u,1);r("f2",f,-u,1);r("f3",-f,u,1);r("f4",f,u,1);r("u1",f*.7,u*1.1,-1);r("u2",-f*.7,u*1.1,-1);r("u3",0,u*2,-1);r("cf1",-f,0,1);r("cf2",f,0,1);r("cf3",0,-u,1);r("cf4",0,u,1);r("cn1",-f,0,-1);r("cn2",f,0,-1);r("cn3",0,-u,-1);r("cn4",0,u,-1);this.geometry.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(n,t){var i,r;THREE.Object3D.call(this);this.light=n;this.light.updateMatrixWorld();this.matrixWorld=n.matrixWorld;this.matrixAutoUpdate=!1;t=t||1;i=new THREE.Geometry;i.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));r=new THREE.LineBasicMaterial({fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(i,r);this.add(this.lightPlane);i=new THREE.Geometry;i.vertices.push(new THREE.Vector3,new THREE.Vector3);r=new THREE.LineBasicMaterial({fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(i,r);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var t=new THREE.Vector3,i=new THREE.Vector3,n=new THREE.Vector3;return function(){t.setFromMatrixPosition(this.light.matrixWorld);i.setFromMatrixPosition(this.light.target.matrixWorld);n.subVectors(i,t);this.lightPlane.lookAt(n);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(n);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.EdgesHelper=function(n,t){var d=t!==undefined?t:16777215,f=[0,0],h={},g=function(n,t){return n-t},p=["a","b","c"],v=new THREE.BufferGeometry,l=n.geometry.clone(),e,k,y,c,r,u,o,s,i;l.mergeVertices();l.computeFaceNormals();var w=l.vertices,a=l.faces,b=0;for(e=0,k=a.length;e<k;e++)for(y=a[e],c=0;c<3;c++)f[0]=y[p[c]],f[1]=y[p[(c+1)%3]],f.sort(g),o=f.toString(),h[o]===undefined?(h[o]={vert1:f[0],vert2:f[1],face1:e,face2:undefined},b++):h[o].face2=e;v.addAttribute("position",new THREE.Float32Attribute(b*2,3));r=v.attributes.position.array;u=0;for(o in h)s=h[o],(s.face2===undefined||a[s.face1].normal.dot(a[s.face2].normal)<.9999)&&(i=w[s.vert1],r[u++]=i.x,r[u++]=i.y,r[u++]=i.z,i=w[s.vert2],r[u++]=i.x,r[u++]=i.y,r[u++]=i.z);THREE.Line.call(this,v,new THREE.LineBasicMaterial({color:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=n.matrixWorld};THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper=function(n,t,i,r){var u,e;this.object=n;this.size=t!==undefined?t:1;var o=i!==undefined?i:16776960,s=r!==undefined?r:1,f=new THREE.Geometry,h=this.object.geometry.faces;for(u=0,e=h.length;u<e;u++)f.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:o,linewidth:s}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.update=function(){var r=this.geometry.vertices,t=this.object,u=t.geometry.vertices,e=t.geometry.faces,o=t.matrixWorld,n;t.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(o);for(var f=0,i=0,s=e.length;f<s;f++,i+=2)n=e[f],r[i].copy(u[n.a]).add(u[n.b]).add(u[n.c]).divideScalar(3).applyMatrix4(o),r[i+1].copy(n.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(r[i]);return this.geometry.verticesNeedUpdate=!0,this};THREE.GridHelper=function(n,t){var u=new THREE.Geometry,f=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),i,r;for(this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848),i=-n;i<=n;i+=t)u.vertices.push(new THREE.Vector3(-n,0,i),new THREE.Vector3(n,0,i),new THREE.Vector3(i,0,-n),new THREE.Vector3(i,0,n)),r=i===0?this.color1:this.color2,u.colors.push(r,r,r,r);THREE.Line.call(this,u,f,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.setColors=function(n,t){this.color1.set(n);this.color2.set(t);this.geometry.colorsNeedUpdate=!0};THREE.HemisphereLightHelper=function(n,t){var r,i,u,f;for(THREE.Object3D.call(this),this.light=n,this.light.updateMatrixWorld(),this.matrixWorld=n.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color],r=new THREE.SphereGeometry(t,4,2),r.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2)),i=0,u=8;i<u;i++)r.faces[i].color=this.colors[i<4?0:1];f=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(r,f);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var n=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(n.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();THREE.PointLightHelper=function(n,t){this.light=n;this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(t,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,r,i);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(n){for(var u,f,i=n.skeleton,t=new THREE.Geometry,r=0;r<i.bones.length;r++)u=i.bones[r],u.parent instanceof THREE.Bone&&(t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(0,0,1)),t.colors.push(new THREE.Color(0,1,0)));f=new THREE.LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,t,f,THREE.LinePieces);this.skeleton=i;this.matrixWorld=n.matrixWorld;this.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype);THREE.SkeletonHelper.prototype.update=function(){for(var t,n=this.geometry,i=0,r=0;r<this.skeleton.bones.length;r++)t=this.skeleton.bones[r],t.parent instanceof THREE.Bone&&(n.vertices[i].setFromMatrixPosition(t.skinMatrix),n.vertices[i+1].setFromMatrixPosition(t.parent.skinMatrix),i+=2);n.verticesNeedUpdate=!0;n.computeBoundingSphere()};THREE.SpotLightHelper=function(n){var t,i;THREE.Object3D.call(this);this.light=n;this.light.updateMatrixWorld();this.matrixWorld=n.matrixWorld;this.matrixAutoUpdate=!1;t=new THREE.CylinderGeometry(0,1,1,8,1,!0);t.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));t.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(t,i);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var n=new THREE.Vector3,t=new THREE.Vector3;return function(){var i=this.light.distance?this.light.distance:1e4,r=i*Math.tan(this.light.angle);this.cone.scale.set(r,r,i);n.setFromMatrixPosition(this.light.matrixWorld);t.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(t.sub(n));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(n,t,i,r){var u,s,h,e,c;this.object=n;this.size=t!==undefined?t:1;var l=i!==undefined?i:16711680,a=r!==undefined?r:1,f=new THREE.Geometry,v=n.geometry.vertices,o=n.geometry.faces;for(u=0,s=o.length;u<s;u++)for(h=o[u],e=0,c=h.vertexNormals.length;e<c;e++)f.vertices.push(new THREE.Vector3),f.vertices.push(new THREE.Vector3);THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:l,linewidth:a}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.update=function(){var n=new THREE.Vector3;return function(){var h=["a","b","c","d"],r,o,u,i,s;this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);var f=this.geometry.vertices,c=this.object.geometry.vertices,e=this.object.geometry.faces,l=this.object.matrixWorld,t=0;for(r=0,o=e.length;r<o;r++)for(u=e[r],i=0,s=u.vertexNormals.length;i<s;i++){var a=u[h[i]],v=c[a],y=u.vertexNormals[i];f[t].copy(v).applyMatrix4(l);n.copy(y).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);n.add(f[t]);t=t+1;f[t].copy(n);t=t+1}return this.geometry.verticesNeedUpdate=!0,this}}();THREE.VertexTangentsHelper=function(n,t,i,r){var u,s,h,e,c;this.object=n;this.size=t!==undefined?t:1;var l=i!==undefined?i:255,a=r!==undefined?r:1,f=new THREE.Geometry,v=n.geometry.vertices,o=n.geometry.faces;for(u=0,s=o.length;u<s;u++)for(h=o[u],e=0,c=h.vertexTangents.length;e<c;e++)f.vertices.push(new THREE.Vector3),f.vertices.push(new THREE.Vector3);THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:l,linewidth:a}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.update=function(){var n=new THREE.Vector3;return function(){var c=["a","b","c","d"],r,s,u,i,h;this.object.updateMatrixWorld(!0);var f=this.geometry.vertices,l=this.object.geometry.vertices,e=this.object.geometry.faces,o=this.object.matrixWorld,t=0;for(r=0,s=e.length;r<s;r++)for(u=e[r],i=0,h=u.vertexTangents.length;i<h;i++){var a=u[c[i]],v=l[a],y=u.vertexTangents[i];f[t].copy(v).applyMatrix4(o);n.copy(y).transformDirection(o).multiplyScalar(this.size);n.add(f[t]);t=t+1;f[t].copy(n);t=t+1}return this.geometry.verticesNeedUpdate=!0,this}}();THREE.WireframeHelper=function(n,t){var et=t!==undefined?t:16777215,e=[0,0],p={},tt=function(n,t){return n-t},it=["a","b","c"],l=new THREE.BufferGeometry,g,w,y,rt,ft,v,f,r,h,i,u,k,c;if(n.geometry instanceof THREE.Geometry){var s=n.geometry.vertices,d=n.geometry.faces,o=0,a=new Uint32Array(6*d.length);for(r=0,h=d.length;r<h;r++)for(g=d[r],i=0;i<3;i++)e[0]=g[it[i]],e[1]=g[it[(i+1)%3]],e.sort(tt),v=e.toString(),p[v]===undefined&&(a[2*o]=e[0],a[2*o+1]=e[1],p[v]=!0,o++);for(l.addAttribute("position",new THREE.Float32Attribute(o*2,3)),f=l.attributes.position.array,r=0,h=o;r<h;r++)for(i=0;i<2;i++)w=s[a[2*r+i]],u=6*r+3*i,f[u+0]=w.x,f[u+1]=w.y,f[u+2]=w.z}else if(n.geometry instanceof THREE.BufferGeometry&&n.geometry.attributes.index!==undefined){var s=n.geometry.attributes.position.array,nt=n.geometry.attributes.index.array,b=n.geometry.offsets,o=0,a=new Uint32Array(2*nt.length);for(y=0,rt=b.length;y<rt;++y){var ut=b[y].start,ot=b[y].count,u=b[y].index;for(r=ut,ft=ut+ot;r<ft;r+=3)for(i=0;i<3;i++)e[0]=u+nt[r+i],e[1]=u+nt[r+(i+1)%3],e.sort(tt),v=e.toString(),p[v]===undefined&&(a[2*o]=e[0],a[2*o+1]=e[1],p[v]=!0,o++)}for(l.addAttribute("position",new THREE.Float32Attribute(o*2,3)),f=l.attributes.position.array,r=0,h=o;r<h;r++)for(i=0;i<2;i++)u=6*r+3*i,c=3*a[2*r+i],f[u+0]=s[c],f[u+1]=s[c+1],f[u+2]=s[c+2]}else if(n.geometry instanceof THREE.BufferGeometry){var s=n.geometry.attributes.position.array,o=s.length/3,st=o/3;for(l.addAttribute("position",new THREE.Float32Attribute(o*2,3)),f=l.attributes.position.array,r=0,h=st;r<h;r++)for(i=0;i<3;i++)u=18*r+6*i,k=9*r+3*i,f[u+0]=s[k],f[u+1]=s[k+1],f[u+2]=s[k+2],c=9*r+3*((i+1)%3),f[u+3]=s[c],f[u+4]=s[c+1],f[u+5]=s[c+2]}THREE.Line.call(this,l,new THREE.LineBasicMaterial({color:et}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=n.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(n,t,i,r,u){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=undefined;n!==undefined&&this.add(n,t,i,r,u)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(n,t,i,r,u,f){t===undefined&&(t=-1);i===undefined&&(i=0);f===undefined&&(f=1);u===undefined&&(u=new THREE.Color(16777215));r===undefined&&(r=THREE.NormalBlending);i=Math.min(i,Math.max(0,i));this.lensFlares.push({texture:n,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:u,blending:r})};THREE.LensFlare.prototype.updateLensFlares=function(){for(var i=this.lensFlares.length,n,r=-this.positionScreen.x*2,u=-this.positionScreen.y*2,t=0;t<i;t++)n=this.lensFlares[t],n.x=this.positionScreen.x+r*n.distance,n.y=this.positionScreen.y+u*n.distance,n.wantedRotation=n.x*Math.PI*.25,n.rotation+=(n.wantedRotation-n.rotation)*.25};THREE.MorphBlendMesh=function(n,t){THREE.Mesh.call(this,n,t);this.animationsMap={};this.animationsList=[];var i=this.geometry.morphTargets.length,r="__default",u=i-1,f=i/1;this.createAnimation(r,0,u,f);this.setAnimationWeight(r,1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(n,t,i,r){var u={startFrame:t,endFrame:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[n]=u;this.animationsList.push(u)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(n){for(var s,f,c,t,i,e,u={},o=this.geometry,r=0,h=o.morphTargets.length;r<h;r++)s=o.morphTargets[r],f=s.name.match(/([a-z]+)(\d+)/),f&&f.length>1&&(t=f[1],c=f[2],u[t]||(u[t]={start:Infinity,end:-Infinity}),i=u[t],r<i.start&&(i.start=r),r>i.end&&(i.end=r),e||(e=t));for(t in u)i=u[t],this.createAnimation(t,i.start,i.end,n);this.firstAnimation=e};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(n){var t=this.animationsMap[n];t&&(t.direction=1,t.directionBackwards=!1)};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(n){var t=this.animationsMap[n];t&&(t.direction=-1,t.directionBackwards=!0)};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(n,t){var i=this.animationsMap[n];i&&(i.fps=t,i.duration=(i.end-i.start)/i.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(n,t){var i=this.animationsMap[n];i&&(i.duration=t,i.fps=(i.end-i.start)/i.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(n,t){var i=this.animationsMap[n];i&&(i.weight=t)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(n,t){var i=this.animationsMap[n];i&&(i.time=t)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(n){var t=0,i=this.animationsMap[n];return i&&(t=i.time),t};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(n){var t=-1,i=this.animationsMap[n];return i&&(t=i.duration),t};THREE.MorphBlendMesh.prototype.playAnimation=function(n){var t=this.animationsMap[n];t?(t.time=0,t.active=!0):console.warn("animation["+n+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(n){var t=this.animationsMap[n];t&&(t.active=!1)};THREE.MorphBlendMesh.prototype.update=function(n){for(var t,u,f,e,i,r=0,o=this.animationsList.length;r<o;r++)(t=this.animationsList[r],t.active)&&(u=t.duration/t.length,t.time+=t.direction*n,t.mirroredLoop?(t.time>t.duration||t.time<0)&&(t.direction*=-1,t.time>t.duration&&(t.time=t.duration,t.directionBackwards=!0),t.time<0&&(t.time=0,t.directionBackwards=!1)):(t.time=t.time%t.duration,t.time<0&&(t.time+=t.duration)),f=t.startFrame+THREE.Math.clamp(Math.floor(t.time/u),0,t.length-1),e=t.weight,f!==t.currentFrame&&(this.morphTargetInfluences[t.lastFrame]=0,this.morphTargetInfluences[t.currentFrame]=1*e,this.morphTargetInfluences[f]=0,t.lastFrame=t.currentFrame,t.currentFrame=f),i=t.time%u/u,t.directionBackwards&&(i=1-i),this.morphTargetInfluences[t.currentFrame]=i*e,this.morphTargetInfluences[t.lastFrame]=(1-i)*e)};THREE.LensFlarePlugin=function(){function u(t,i){var r=n.createProgram(),u=n.createShader(n.FRAGMENT_SHADER),f=n.createShader(n.VERTEX_SHADER),e="precision "+i+" float;\n";return n.shaderSource(u,e+t.fragmentShader),n.shaderSource(f,e+t.vertexShader),n.compileShader(u),n.compileShader(f),n.attachShader(r,u),n.attachShader(r,f),n.linkProgram(r),r}var n,i,r,t={};this.init=function(f){n=f.context;i=f;r=f.getPrecision();t.vertices=new Float32Array(16);t.faces=new Uint16Array(6);var e=0;t.vertices[e++]=-1;t.vertices[e++]=-1;t.vertices[e++]=0;t.vertices[e++]=0;t.vertices[e++]=1;t.vertices[e++]=-1;t.vertices[e++]=1;t.vertices[e++]=0;t.vertices[e++]=1;t.vertices[e++]=1;t.vertices[e++]=1;t.vertices[e++]=1;t.vertices[e++]=-1;t.vertices[e++]=1;t.vertices[e++]=0;t.vertices[e++]=1;e=0;t.faces[e++]=0;t.faces[e++]=1;t.faces[e++]=2;t.faces[e++]=0;t.faces[e++]=2;t.faces[e++]=3;t.vertexBuffer=n.createBuffer();t.elementBuffer=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,t.vertexBuffer);n.bufferData(n.ARRAY_BUFFER,t.vertices,n.STATIC_DRAW);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.elementBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,t.faces,n.STATIC_DRAW);t.tempTexture=n.createTexture();t.occlusionTexture=n.createTexture();n.bindTexture(n.TEXTURE_2D,t.tempTexture);n.texImage2D(n.TEXTURE_2D,0,n.RGB,16,16,0,n.RGB,n.UNSIGNED_BYTE,null);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST);n.bindTexture(n.TEXTURE_2D,t.occlusionTexture);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,16,16,0,n.RGBA,n.UNSIGNED_BYTE,null);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST);n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(t.hasVertexTexture=!1,t.program=u(THREE.ShaderFlares.lensFlare,r)):(t.hasVertexTexture=!0,t.program=u(THREE.ShaderFlares.lensFlareVertexTexture,r));t.attributes={};t.uniforms={};t.attributes.vertex=n.getAttribLocation(t.program,"position");t.attributes.uv=n.getAttribLocation(t.program,"uv");t.uniforms.renderType=n.getUniformLocation(t.program,"renderType");t.uniforms.map=n.getUniformLocation(t.program,"map");t.uniforms.occlusionMap=n.getUniformLocation(t.program,"occlusionMap");t.uniforms.opacity=n.getUniformLocation(t.program,"opacity");t.uniforms.color=n.getUniformLocation(t.program,"color");t.uniforms.scale=n.getUniformLocation(t.program,"scale");t.uniforms.rotation=n.getUniformLocation(t.program,"rotation");t.uniforms.screenPosition=n.getUniformLocation(t.program,"screenPosition")};this.render=function(r,u,f,e){var k=r.__webglFlares,d=k.length,p,w,it,c,o;if(d){var y=new THREE.Vector3,b=e/f,g=f*.5,nt=e*.5,a=16/e,v=new THREE.Vector2(a*b,a),s=new THREE.Vector3(1,1,0),l=new THREE.Vector2(1,1),h=t.uniforms,tt=t.attributes;for(n.useProgram(t.program),n.enableVertexAttribArray(t.attributes.vertex),n.enableVertexAttribArray(t.attributes.uv),n.uniform1i(h.occlusionMap,0),n.uniform1i(h.map,1),n.bindBuffer(n.ARRAY_BUFFER,t.vertexBuffer),n.vertexAttribPointer(tt.vertex,2,n.FLOAT,!1,16,0),n.vertexAttribPointer(tt.uv,2,n.FLOAT,!1,16,8),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.elementBuffer),n.disable(n.CULL_FACE),n.depthMask(!1),p=0;p<d;p++)if(a=16/e,v.set(a*b,a),c=k[p],y.set(c.matrixWorld.elements[12],c.matrixWorld.elements[13],c.matrixWorld.elements[14]),y.applyMatrix4(u.matrixWorldInverse),y.applyProjection(u.projectionMatrix),s.copy(y),l.x=s.x*g+g,l.y=s.y*nt+nt,t.hasVertexTexture||l.x>0&&l.x<f&&l.y>0&&l.y<e)for(n.activeTexture(n.TEXTURE1),n.bindTexture(n.TEXTURE_2D,t.tempTexture),n.copyTexImage2D(n.TEXTURE_2D,0,n.RGB,l.x-8,l.y-8,16,16,0),n.uniform1i(h.renderType,0),n.uniform2f(h.scale,v.x,v.y),n.uniform3f(h.screenPosition,s.x,s.y,s.z),n.disable(n.BLEND),n.enable(n.DEPTH_TEST),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0),n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_2D,t.occlusionTexture),n.copyTexImage2D(n.TEXTURE_2D,0,n.RGBA,l.x-8,l.y-8,16,16,0),n.uniform1i(h.renderType,1),n.disable(n.DEPTH_TEST),n.activeTexture(n.TEXTURE1),n.bindTexture(n.TEXTURE_2D,t.tempTexture),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0),c.positionScreen.copy(s),c.customUpdateCallback?c.customUpdateCallback(c):c.updateLensFlares(),n.uniform1i(h.renderType,2),n.enable(n.BLEND),w=0,it=c.lensFlares.length;w<it;w++)o=c.lensFlares[w],o.opacity>.001&&o.scale>.001&&(s.x=o.x,s.y=o.y,s.z=o.z,a=o.size*o.scale/e,v.x=a*b,v.y=a,n.uniform3f(h.screenPosition,s.x,s.y,s.z),n.uniform2f(h.scale,v.x,v.y),n.uniform1f(h.rotation,o.rotation),n.uniform1f(h.opacity,o.opacity),n.uniform3f(h.color,o.color.r,o.color.g,o.color.b),i.setBlending(o.blending,o.blendEquation,o.blendSrc,o.blendDst),i.setTexture(o.texture,1),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0));n.enable(n.CULL_FACE);n.enable(n.DEPTH_TEST);n.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){function l(n,t){var i=new THREE.DirectionalLight,o,r,u,f,e;for(i.isVirtual=!0,i.onlyShadow=!0,i.castShadow=!0,i.shadowCameraNear=n.shadowCameraNear,i.shadowCameraFar=n.shadowCameraFar,i.shadowCameraLeft=n.shadowCameraLeft,i.shadowCameraRight=n.shadowCameraRight,i.shadowCameraBottom=n.shadowCameraBottom,i.shadowCameraTop=n.shadowCameraTop,i.shadowCameraVisible=n.shadowCameraVisible,i.shadowDarkness=n.shadowDarkness,i.shadowBias=n.shadowCascadeBias[t],i.shadowMapWidth=n.shadowCascadeWidth[t],i.shadowMapHeight=n.shadowCascadeHeight[t],i.pointsWorld=[],i.pointsFrustum=[],o=i.pointsWorld,r=i.pointsFrustum,u=0;u<8;u++)o[u]=new THREE.Vector3,r[u]=new THREE.Vector3;return f=n.shadowCascadeNearZ[t],e=n.shadowCascadeFarZ[t],r[0].set(-1,-1,f),r[1].set(1,-1,f),r[2].set(-1,1,f),r[3].set(1,1,f),r[4].set(-1,-1,e),r[5].set(1,-1,e),r[6].set(-1,1,e),r[7].set(1,1,e),i}function a(n,t){var i=n.shadowCascadeArray[t];i.position.copy(n.position);i.target.position.copy(n.target.position);i.lookAt(i.target);i.shadowCameraVisible=n.shadowCameraVisible;i.shadowDarkness=n.shadowDarkness;i.shadowBias=n.shadowCascadeBias[t];var u=n.shadowCascadeNearZ[t],f=n.shadowCascadeFarZ[t],r=i.pointsFrustum;r[0].z=u;r[1].z=u;r[2].z=u;r[3].z=u;r[4].z=f;r[5].z=f;r[6].z=f;r[7].z=f}function v(n,t){var f=t.shadowCamera,o=t.pointsFrustum,s=t.pointsWorld,e,u;for(i.set(Infinity,Infinity,Infinity),r.set(-Infinity,-Infinity,-Infinity),e=0;e<8;e++)u=s[e],u.copy(o[e]),THREE.ShadowMapPlugin.__projector.unprojectVector(u,n),u.applyMatrix4(f.matrixWorldInverse),u.x<i.x&&(i.x=u.x),u.x>r.x&&(r.x=u.x),u.y<i.y&&(i.y=u.y),u.y>r.y&&(r.y=u.y),u.z<i.z&&(i.z=u.z),u.z>r.z&&(r.z=u.z);f.left=i.x;f.right=r.x;f.top=r.y;f.bottom=i.y;f.updateProjectionMatrix()}function y(n){return n.material instanceof THREE.MeshFaceMaterial?n.material.materials[0]:n.material}var n,t,u,f,e,o,s=new THREE.Frustum,h=new THREE.Matrix4,i=new THREE.Vector3,r=new THREE.Vector3,c=new THREE.Vector3;this.init=function(i){n=i.context;t=i;var r=THREE.ShaderLib.depthRGBA,s=THREE.UniformsUtils.clone(r.uniforms);u=new THREE.ShaderMaterial({fragmentShader:r.fragmentShader,vertexShader:r.vertexShader,uniforms:s});f=new THREE.ShaderMaterial({fragmentShader:r.fragmentShader,vertexShader:r.vertexShader,uniforms:s,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:r.fragmentShader,vertexShader:r.vertexShader,uniforms:s,skinning:!0});o=new THREE.ShaderMaterial({fragmentShader:r.fragmentShader,vertexShader:r.vertexShader,uniforms:s,morphTargets:!0,skinning:!0});u._shadowPass=!0;f._shadowPass=!0;e._shadowPass=!0;o._shadowPass=!0};this.render=function(n,i){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(n,i)};this.update=function(i,r){var nt,ft,k,rt,tt,wt,et,b,ot,vt,d,w,p,it,st=[],ht=0,yt=null,g,ut,ct,bt,lt,pt,kt,at,dt;for(n.clearColor(1,1,1,1),n.disable(n.BLEND),n.enable(n.CULL_FACE),n.frontFace(n.CCW),t.shadowMapCullFace===THREE.CullFaceFront?n.cullFace(n.FRONT):n.cullFace(n.BACK),t.setDepthTest(!0),nt=0,ft=i.__lights.length;nt<ft;nt++)if(p=i.__lights[nt],p.castShadow)if(p instanceof THREE.DirectionalLight&&p.shadowCascade)for(tt=0;tt<p.shadowCascadeCount;tt++)p.shadowCascadeArray[tt]?g=p.shadowCascadeArray[tt]:(g=l(p,tt),g.originalCamera=r,ut=new THREE.Gyroscope,ut.position.copy(p.shadowCascadeOffset),ut.add(g),ut.add(g.target),r.add(ut),p.shadowCascadeArray[tt]=g,console.log("Created virtualLight",g)),a(p,tt),st[ht]=g,ht++;else st[ht]=p,ht++;for(nt=0,ft=st.length;nt<ft;nt++){if(p=st[nt],p.shadowMap||(ct=THREE.LinearFilter,t.shadowMapType===THREE.PCFSoftShadowMap&&(ct=THREE.NearestFilter),bt={minFilter:ct,magFilter:ct,format:THREE.RGBAFormat},p.shadowMap=new THREE.WebGLRenderTarget(p.shadowMapWidth,p.shadowMapHeight,bt),p.shadowMapSize=new THREE.Vector2(p.shadowMapWidth,p.shadowMapHeight),p.shadowMatrix=new THREE.Matrix4),!p.shadowCamera){if(p instanceof THREE.SpotLight)p.shadowCamera=new THREE.PerspectiveCamera(p.shadowCameraFov,p.shadowMapWidth/p.shadowMapHeight,p.shadowCameraNear,p.shadowCameraFar);else if(p instanceof THREE.DirectionalLight)p.shadowCamera=new THREE.OrthographicCamera(p.shadowCameraLeft,p.shadowCameraRight,p.shadowCameraTop,p.shadowCameraBottom,p.shadowCameraNear,p.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}i.add(p.shadowCamera);i.autoUpdate===!0&&i.updateMatrixWorld()}for(p.shadowCameraVisible&&!p.cameraHelper&&(p.cameraHelper=new THREE.CameraHelper(p.shadowCamera),p.shadowCamera.add(p.cameraHelper)),p.isVirtual&&g.originalCamera==r&&v(r,p),wt=p.shadowMap,et=p.shadowMatrix,b=p.shadowCamera,b.position.setFromMatrixPosition(p.matrixWorld),c.setFromMatrixPosition(p.target.matrixWorld),b.lookAt(c),b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),p.cameraHelper&&(p.cameraHelper.visible=p.shadowCameraVisible),p.shadowCameraVisible&&p.cameraHelper.update(),et.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),et.multiply(b.projectionMatrix),et.multiply(b.matrixWorldInverse),h.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),s.setFromMatrix(h),t.setRenderTarget(wt),t.clear(),it=i.__webglObjects,k=0,rt=it.length;k<rt;k++)d=it[k],w=d.object,d.render=!1,w.visible&&w.castShadow&&((w instanceof THREE.Mesh||w instanceof THREE.ParticleSystem)&&w.frustumCulled&&!s.intersectsObject(w)||(w._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,w.matrixWorld),d.render=!0));for(k=0,rt=it.length;k<rt;k++)d=it[k],d.render&&(w=d.object,ot=d.buffer,lt=y(w),pt=w.geometry.morphTargets!==undefined&&w.geometry.morphTargets.length>0&&lt.morphTargets,kt=w instanceof THREE.SkinnedMesh&&lt.skinning,vt=w.customDepthMaterial?w.customDepthMaterial:kt?pt?o:e:pt?f:u,t.setMaterialFaces(lt),ot instanceof THREE.BufferGeometry?t.renderBufferDirect(b,i.__lights,yt,vt,ot,w):t.renderBuffer(b,i.__lights,yt,vt,ot,w));for(it=i.__webglObjectsImmediate,k=0,rt=it.length;k<rt;k++)d=it[k],w=d.object,w.visible&&w.castShadow&&(w._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,w.matrixWorld),t.renderImmediateObject(b,i.__lights,yt,u,w))}at=t.getClearColor();dt=t.getClearAlpha();n.clearColor(at.r,at.g,at.b,dt);n.enable(n.BLEND);t.shadowMapCullFace===THREE.CullFaceFront&&n.cullFace(n.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){function c(){var t=n.createProgram(),i=n.createShader(n.VERTEX_SHADER),u=n.createShader(n.FRAGMENT_SHADER);return n.shaderSource(i,["precision "+r.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),n.shaderSource(u,["precision "+r.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),n.compileShader(i),n.compileShader(u),n.attachShader(t,i),n.attachShader(t,u),n.linkProgram(t),t}function l(n,t){return n.z!==t.z?t.z-n.z:t.id-n.id}var n,r,f,s,h,e,o,i,u,t;this.init=function(l){var a,v;n=l.context;r=l;s=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]);h=new Uint16Array([0,1,2,0,2,3]);e=n.createBuffer();o=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,e);n.bufferData(n.ARRAY_BUFFER,s,n.STATIC_DRAW);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,o);n.bufferData(n.ELEMENT_ARRAY_BUFFER,h,n.STATIC_DRAW);i=c();u={position:n.getAttribLocation(i,"position"),uv:n.getAttribLocation(i,"uv")};t={uvOffset:n.getUniformLocation(i,"uvOffset"),uvScale:n.getUniformLocation(i,"uvScale"),rotation:n.getUniformLocation(i,"rotation"),scale:n.getUniformLocation(i,"scale"),color:n.getUniformLocation(i,"color"),map:n.getUniformLocation(i,"map"),opacity:n.getUniformLocation(i,"opacity"),modelViewMatrix:n.getUniformLocation(i,"modelViewMatrix"),projectionMatrix:n.getUniformLocation(i,"projectionMatrix"),fogType:n.getUniformLocation(i,"fogType"),fogDensity:n.getUniformLocation(i,"fogDensity"),fogNear:n.getUniformLocation(i,"fogNear"),fogFar:n.getUniformLocation(i,"fogFar"),fogColor:n.getUniformLocation(i,"fogColor"),alphaTest:n.getUniformLocation(i,"alphaTest")};a=document.createElement("canvas");a.width=8;a.height=8;v=a.getContext("2d");v.fillStyle="#ffffff";v.fillRect(0,0,a.width,a.height);f=new THREE.Texture(a);f.needsUpdate=!0};this.render=function(s,h){var w=s.__webglSprites,g=w.length,y,a,c,k,d;if(g){n.useProgram(i);n.enableVertexAttribArray(u.position);n.enableVertexAttribArray(u.uv);n.disable(n.CULL_FACE);n.enable(n.BLEND);n.bindBuffer(n.ARRAY_BUFFER,e);n.vertexAttribPointer(u.position,2,n.FLOAT,!1,16,0);n.vertexAttribPointer(u.uv,2,n.FLOAT,!1,16,8);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,o);n.uniformMatrix4fv(t.projectionMatrix,!1,h.projectionMatrix.elements);n.activeTexture(n.TEXTURE0);n.uniform1i(t.map,0);var p=0,b=0,v=s.fog;for(v?(n.uniform3f(t.fogColor,v.color.r,v.color.g,v.color.b),v instanceof THREE.Fog?(n.uniform1f(t.fogNear,v.near),n.uniform1f(t.fogFar,v.far),n.uniform1i(t.fogType,1),p=1,b=1):v instanceof THREE.FogExp2&&(n.uniform1f(t.fogDensity,v.density),n.uniform1i(t.fogType,2),p=2,b=2)):(n.uniform1i(t.fogType,0),p=0,b=0),d=[],y=0;y<g;y++)(a=w[y],c=a.material,a.visible!==!1)&&(a._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,a.matrixWorld),a.z=-a._modelViewMatrix.elements[14]);for(w.sort(l),y=0;y<g;y++)(a=w[y],a.visible!==!1)&&(c=a.material,n.uniform1f(t.alphaTest,c.alphaTest),n.uniformMatrix4fv(t.modelViewMatrix,!1,a._modelViewMatrix.elements),d[0]=a.scale.x,d[1]=a.scale.y,k=s.fog&&c.fog?b:0,p!==k&&(n.uniform1i(t.fogType,k),p=k),c.map!==null?(n.uniform2f(t.uvOffset,c.map.offset.x,c.map.offset.y),n.uniform2f(t.uvScale,c.map.repeat.x,c.map.repeat.y)):(n.uniform2f(t.uvOffset,0,0),n.uniform2f(t.uvScale,1,1)),n.uniform1f(t.opacity,c.opacity),n.uniform3f(t.color,c.color.r,c.color.g,c.color.b),n.uniform1f(t.rotation,c.rotation),n.uniform2fv(t.scale,d),r.setBlending(c.blending,c.blendEquation,c.blendSrc,c.blendDst),r.setDepthTest(c.depthTest),r.setDepthWrite(c.depthWrite),c.map&&c.map.image&&c.map.image.width?r.setTexture(c.map,0):r.setTexture(f,0),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0));n.enable(n.CULL_FACE)}}};THREE.DepthPassPlugin=function(){function s(n){return n.material instanceof THREE.MeshFaceMaterial?n.material.materials[0]:n.material}this.enabled=!1;this.renderTarget=null;var t,n,i,r,u,f,e=new THREE.Frustum,o=new THREE.Matrix4;this.init=function(e){t=e.context;n=e;var o=THREE.ShaderLib.depthRGBA,s=THREE.UniformsUtils.clone(o.uniforms);i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:s});r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:s,morphTargets:!0});u=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:s,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:s,morphTargets:!0,skinning:!0});i._shadowPass=!0;r._shadowPass=!0;u._shadowPass=!0;f._shadowPass=!0};this.render=function(n,t){this.enabled&&this.update(n,t)};this.update=function(h,c){var a,p,w,d,v,l,y,g=null,b,nt,tt,k,it;for(t.clearColor(1,1,1,1),t.disable(t.BLEND),n.setDepthTest(!0),h.autoUpdate===!0&&h.updateMatrixWorld(),c.matrixWorldInverse.getInverse(c.matrixWorld),o.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),e.setFromMatrix(o),n.setRenderTarget(this.renderTarget),n.clear(),y=h.__webglObjects,a=0,p=y.length;a<p;a++)v=y[a],l=v.object,v.render=!1,l.visible&&((l instanceof THREE.Mesh||l instanceof THREE.ParticleSystem)&&l.frustumCulled&&!e.intersectsObject(l)||(l._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,l.matrixWorld),v.render=!0));for(a=0,p=y.length;a<p;a++)if(v=y[a],v.render){if(l=v.object,w=v.buffer,l instanceof THREE.ParticleSystem&&!l.customDepthMaterial)continue;b=s(l);b&&n.setMaterialFaces(l.material);nt=l.geometry.morphTargets!==undefined&&l.geometry.morphTargets.length>0&&b.morphTargets;tt=l instanceof THREE.SkinnedMesh&&b.skinning;d=l.customDepthMaterial?l.customDepthMaterial:tt?nt?f:u:nt?r:i;w instanceof THREE.BufferGeometry?n.renderBufferDirect(c,h.__lights,g,d,w,l):n.renderBuffer(c,h.__lights,g,d,w,l)}for(y=h.__webglObjectsImmediate,a=0,p=y.length;a<p;a++)v=y[a],l=v.object,l.visible&&(l._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,l.matrixWorld),n.renderImmediateObject(c,h.__lights,g,i,l));k=n.getClearColor();it=n.getClearAlpha();t.clearColor(k.r,k.g,k.b,it);t.enable(t.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
//# sourceMappingURL=three.min.js.map
